{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap feacb251ed5f1f1eaed5","webpack:///./ng1.ts","webpack:///./core.ts","webpack:///./common/module.ts","webpack:///./common/common.ts","webpack:///./common/predicates.ts","webpack:///./common/hof.ts","webpack:///./common/coreservices.ts","webpack:///./common/glob.ts","webpack:///./common/queue.ts","webpack:///./common/strings.ts","webpack:///./transition/rejectFactory.ts","webpack:///./transition/transition.ts","webpack:///./common/trace.ts","webpack:///./transition/transitionHook.ts","webpack:///./state/targetState.ts","webpack:///./transition/hookRegistry.ts","webpack:///./transition/hookBuilder.ts","webpack:///./resolve/resolveContext.ts","webpack:///./resolve/interface.ts","webpack:///./resolve/resolvable.ts","webpack:///./path/pathFactory.ts","webpack:///./path/node.ts","webpack:///./params/param.ts","webpack:///./url/urlMatcherConfig.ts","webpack:///./params/type.ts","webpack:///./router.ts","webpack:///./url/urlMatcherFactory.ts","webpack:///./url/urlMatcher.ts","webpack:///./params/paramTypes.ts","webpack:///./url/urlRouter.ts","webpack:///./transition/transitionService.ts","webpack:///./hooks/resolve.ts","webpack:///./hooks/views.ts","webpack:///./hooks/url.ts","webpack:///./hooks/redirectTo.ts","webpack:///./hooks/onEnterExitRetain.ts","webpack:///./hooks/lazyLoadStates.ts","webpack:///./view/view.ts","webpack:///./state/stateRegistry.ts","webpack:///./state/stateMatcher.ts","webpack:///./state/stateBuilder.ts","webpack:///./state/stateQueueManager.ts","webpack:///./state/stateObject.ts","webpack:///./state/stateService.ts","webpack:///./globals.ts","webpack:///./params/stateParams.ts","webpack:///./params/module.ts","webpack:///./path/module.ts","webpack:///./resolve/module.ts","webpack:///./state/module.ts","webpack:///./transition/module.ts","webpack:///./url/module.ts","webpack:///./view/module.ts","webpack:///./ng1/services.ts","webpack:///./ng1/legacy/resolveService.ts","webpack:///./ng1/statebuilders/views.ts","webpack:///./ng1/templateFactory.ts","webpack:///external \"angular\"","webpack:///./ng1/stateProvider.ts","webpack:///./ng1/statebuilders/onEnterExitRetain.ts","webpack:///./ng1/directives/stateDirectives.ts","webpack:///./ng1/stateFilters.ts","webpack:///./ng1/directives/viewDirective.ts","webpack:///./ng1/viewScroll.ts"],"names":[],"mappings":"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","file":"angular-ui-router.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angular-ui-router\", [\"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-ui-router\"] = factory(require(\"angular\"));\n\telse\n\t\troot[\"angular-ui-router\"] = factory(root[\"angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_57__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap feacb251ed5f1f1eaed5\n **/","/**\n * Main entry point for angular 1.x build\n * @module ng1\n */\n/** for typedoc */\n\nexport * from \"./core\";\n\nexport * from \"./ng1/interface\";\nexport * from \"./ng1/services\";\nexport * from \"./ng1/statebuilders/views\";\nexport * from \"./ng1/stateProvider\";\n\nimport \"./ng1/directives/stateDirectives\";\nimport \"./ng1/stateFilters\";\nimport \"./ng1/directives/viewDirective\";\nimport \"./ng1/viewScroll\";\n\nexport default \"ui.router\";\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng1.ts\n **/","/** @module common */ /** */\n\nexport * from \"./common/module\";\nexport * from \"./params/module\";\nexport * from \"./path/module\";\nexport * from \"./resolve/module\";\nexport * from \"./state/module\";\nexport * from \"./transition/module\";\nexport * from \"./url/module\";\nexport * from \"./view/module\";\nexport * from \"./globals\";\n\nexport { UIRouter } from \"./router\";\n\n\n\n/** WEBPACK FOOTER **\n ** ./core.ts\n **/","/** @module common */ /** for typedoc */\nexport * from \"./interface\";\nexport * from \"./common\";\nexport * from \"./coreservices\";\nexport * from \"./glob\";\nexport * from \"./hof\";\nexport * from \"./predicates\";\nexport * from \"./queue\";\nexport * from \"./strings\";\nexport * from \"./trace\";\n\n\n\n/** WEBPACK FOOTER **\n ** ./common/module.ts\n **/","/**\n * Random utility functions used in the UI-Router code\n *\n * @preferred @module common\n */ /** for typedoc */\n\nimport {isFunction, isString, isArray, isRegExp, isDate} from \"./predicates\";\nimport { all, any, not, prop, curry } from \"./hof\";\nimport {services} from \"./coreservices\";\nimport {State} from \"../state/stateObject\";\n\nlet w: any = typeof window === 'undefined' ? {} : window;\nlet angular = w.angular || {};\nexport const fromJson = angular.fromJson || JSON.parse.bind(JSON);\nexport const toJson = angular.toJson || JSON.stringify.bind(JSON);\nexport const copy = angular.copy || _copy;\nexport const forEach = angular.forEach || _forEach;\nexport const extend = angular.extend || _extend;\nexport const equals = angular.equals || _equals;\nexport const identity = (x: any) => x;\nexport const noop = () => <any> undefined;\n\nexport type Mapper<X, T> = (x: X, key?: (string|number)) => T;\nexport interface TypedMap<T> { [key: string]: T; }\nexport type Predicate<X> = (x: X) => boolean;\nexport type IInjectable = (Function|any[]);\n\nexport interface Obj extends Object {\n  [key: string]: any\n}\n\n/**\n * Binds and copies functions onto an object\n *\n * Takes functions from the 'from' object, binds those functions to the _this object, and puts the bound functions\n * on the 'to' object.\n *\n * This example creates an new class instance whose functions are prebound to the new'd object.\n * @example\n * ```\n *\n * class Foo {\n *   constructor(data) {\n *     // Binds all functions from Foo.prototype to 'this',\n *     // then copies them to 'this'\n *     bindFunctions(Foo.prototype, this, this);\n *     this.data = data;\n *   }\n *\n *   log() {\n *     console.log(this.data);\n *   }\n * }\n *\n * let myFoo = new Foo([1,2,3]);\n * var logit = myFoo.log;\n * logit(); // logs [1, 2, 3] from the myFoo 'this' instance\n * ```\n *\n * This example creates a bound version of a service function, and copies it to another object\n * @example\n * ```\n *\n * var SomeService = {\n *   this.data = [3, 4, 5];\n *   this.log = function() {\n *     console.log(this.data);\n *   }\n * }\n *\n * // Constructor fn\n * function OtherThing() {\n *   // Binds all functions from SomeService to SomeService,\n *   // then copies them to 'this'\n *   bindFunctions(SomeService, this, SomeService);\n * }\n *\n * let myOtherThing = new OtherThing();\n * myOtherThing.log(); // logs [3, 4, 5] from SomeService's 'this'\n * ```\n *\n * @param from The object which contains the functions to be bound\n * @param to The object which will receive the bound functions\n * @param bindTo The object which the functions will be bound to\n * @param fnNames The function names which will be bound (Defaults to all the functions found on the 'from' object)\n */\nexport function bindFunctions(from: Obj, to: Obj, bindTo: Obj, fnNames: string[] = Object.keys(from)) {\n  return fnNames.filter(name => typeof from[name] === 'function')\n      .forEach(name => to[name] = from[name].bind(bindTo));\n}\n\n\n/**\n * prototypal inheritance helper.\n * Creates a new object which has `parent` object as its prototype, and then copies the properties from `extra` onto it\n */\nexport const inherit = (parent: Obj, extra: Obj) =>\n    extend(new (extend(function() {}, { prototype: parent }))(), extra);\n\n/**\n * Given an arguments object, converts the arguments at index idx and above to an array.\n * This is similar to es6 rest parameters.\n *\n * Optionally, the argument at index idx may itself already be an array.\n *\n * For example,\n * given either:\n *        arguments = [ obj, \"foo\", \"bar\" ]\n * or:\n *        arguments = [ obj, [\"foo\", \"bar\"] ]\n * then:\n *        restArgs(arguments, 1) == [\"foo\", \"bar\"]\n *\n * This allows functions like pick() to be implemented such that it allows either a bunch\n * of string arguments (like es6 rest parameters), or a single array of strings:\n *\n * given:\n *        var obj = { foo: 1, bar: 2, baz: 3 };\n * then:\n *        pick(obj, \"foo\", \"bar\");   // returns { foo: 1, bar: 2 }\n *        pick(obj, [\"foo\", \"bar\"]); // returns { foo: 1, bar: 2 }\n */\nconst restArgs = (args: IArguments, idx = 0) =>\n    Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(args, idx));\n\n/** Given an array, returns true if the object is found in the array, (using indexOf) */\nexport const inArray = (array: any[], obj: any) =>\n    array.indexOf(obj) !== -1;\n\n/** Given an array, and an item, if the item is found in the array, it removes it (in-place).  The same array is returned */\nexport const removeFrom = curry((array: any[], obj: any) => {\n  let idx = array.indexOf(obj);\n  if (idx >= 0) array.splice(idx, 1);\n  return array;\n});\n\n/**\n * Applies a set of defaults to an options object.  The options object is filtered\n * to only those properties of the objects in the defaultsList.\n * Earlier objects in the defaultsList take precedence when applying defaults.\n */\nexport function defaults(opts = {}, ...defaultsList: Obj[]) {\n  let defaults = merge.apply(null, [{}].concat(defaultsList));\n  return extend({}, defaults, pick(opts || {}, Object.keys(defaults)));\n}\n\n/**\n * Merges properties from the list of objects to the destination object.\n * If a property already exists in the destination object, then it is not overwritten.\n */\nexport function merge(dst: Obj, ...objs: Obj[]) {\n  forEach(objs, function(obj: Obj) {\n    forEach(obj, function(value: any, key: string) {\n      if (!dst.hasOwnProperty(key)) dst[key] = value;\n    });\n  });\n  return dst;\n}\n\n/** Reduce function that merges each element of the list into a single object, using extend */\nexport const mergeR = (memo: Obj, item: Obj) => extend(memo, item);\n\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nexport function ancestors(first: State, second: State) {\n  let path: State[] = [];\n\n  for (var n in first.path) {\n    if (first.path[n] !== second.path[n]) break;\n    path.push(first.path[n]);\n  }\n  return path;\n}\n\n/**\n * Performs a non-strict comparison of the subset of two objects, defined by a list of keys.\n *\n * @param {Object} a The first object.\n * @param {Object} b The second object.\n * @param {Array} keys The list of keys within each object to compare. If the list is empty or not specified,\n *                     it defaults to the list of keys in `a`.\n * @return {Boolean} Returns `true` if the keys match, otherwise `false`.\n */\nexport function equalForKeys(a: Obj, b: Obj, keys: string[] = Object.keys(a)) {\n  for (var i = 0; i < keys.length; i++) {\n    let k = keys[i];\n    if (a[k] != b[k]) return false; // Not '===', values aren't necessarily normalized\n  }\n  return true;\n}\n\ntype PickOmitPredicate = (keys: string[], key: string) => boolean;\nfunction pickOmitImpl(predicate: PickOmitPredicate, obj: Obj, ...keys: string[]) {\n  let objCopy = {};\n  for (let key in obj) {\n    if (predicate(keys, key)) objCopy[key] = obj[key];\n  }\n  return objCopy;\n}\n\n/**\n * @example\n * ```\n *\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = pick(foo, ['a', 'b']); // { a: 1, b: 2 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the whitelisted property names\n */\nexport function pick(obj: Obj, propNames: string[]): Obj;\n/**\n * @example\n * ```\n *\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = pick(foo, 'a', 'b'); // { a: 1, b: 2 }\n * ```\n * @param obj the source object\n * @param propNames 1..n strings, which are the whitelisted property names\n */\nexport function pick(obj: Obj, ...propNames: string[]): Obj;\n/** Return a copy of the object only containing the whitelisted properties. */\nexport function pick(obj: Obj) {\n  return pickOmitImpl.apply(null, [inArray].concat(restArgs(arguments)));\n}\n\n/**\n * @example\n * ```\n *\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = omit(foo, ['a', 'b']); // { c: 3 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the blacklisted property names\n */\nexport function omit(obj: Obj, propNames: string[]): Obj;\n/**\n * @example\n * ```\n *\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = omit(foo, 'a', 'b'); // { c: 3 }\n * ```\n * @param obj the source object\n * @param propNames 1..n strings, which are the blacklisted property names\n */\nexport function omit(obj: Obj, ...propNames: string[]): Obj;\n/** Return a copy of the object omitting the blacklisted properties. */\nexport function omit(obj: Obj) {\n  let notInArray = (array, item) => !inArray(array, item);\n  return pickOmitImpl.apply(null, [notInArray].concat(restArgs(arguments)));\n}\n\n\n/** Given an array of objects, maps each element to a named property of the element. */\nexport function pluck(collection: Obj[], propName: string): Obj[];\n/** Given an object, maps each property of the object to a named property of the property. */\nexport function pluck(collection: { [key: string]: any }, propName: string): { [key: string]: any };\n/**\n * Maps an array, or object to a property (by name)\n */\nexport function pluck(collection: any, propName: string): any {\n  return map(collection, <Mapper<any, string>> prop(propName));\n}\n\n\n/** Given an array of objects, returns a new array containing only the elements which passed the callback predicate */\nexport function filter<T>(collection: T[], callback: (t: T, key?: number) => boolean): T[];\n/** Given an object, returns a new object with only those properties that passed the callback predicate */\nexport function filter<T>(collection: TypedMap<T>, callback: (t: T, key?: string) => boolean): TypedMap<T>;\n/** Filters an Array or an Object's properties based on a predicate */\nexport function filter<T>(collection: any, callback: Function): T {\n  let arr = isArray(collection), result: any = arr ? [] : {};\n  let accept = arr ? x => result.push(x) : (x, key) => result[key] = x;\n  forEach(collection, function(item, i) {\n    if (callback(item, i)) accept(item, i);\n  });\n  return <T>result;\n}\n\n\n/** Given an object, return the first property of that object which passed the callback predicate */\nexport function find<T>(collection: TypedMap<T>, callback: Predicate<T>): T;\n/** Given an array of objects, returns the first object which passed the callback predicate */\nexport function find<T>(collection: T[], callback: Predicate<T>): T;\n/** Finds an object from an array, or a property of an object, that matches a predicate */\nexport function find(collection: any, callback: any) {\n  let result;\n\n  forEach(collection, function(item, i) {\n    if (result) return;\n    if (callback(item, i)) result = item;\n  });\n\n  return result;\n}\n\n/** Given an object, returns a new object, where each property is transformed by the callback function */\nexport let mapObj: <T,U>(collection: { [key: string]: T }, callback: Mapper<T,U>) => { [key: string]: U } = map;\n/** Given an array, returns a new array, where each element is transformed by the callback function */\nexport function map<T, U>(collection: T[], callback: Mapper<T, U>): U[];\nexport function map<T, U>(collection: { [key: string]: T }, callback: Mapper<T, U>): { [key: string]: U }\n/** Maps an array or object properties using a callback function */\nexport function map(collection: any, callback: any): any {\n  let result = isArray(collection) ? [] : {};\n  forEach(collection, (item, i) => result[i] = callback(item, i));\n  return result;\n}\n\n/**\n * Given an object, return its enumerable property values\n *\n * @example\n * ```\n *\n * let foo = { a: 1, b: 2, c: 3 }\n * let vals = values(foo); // [ 1, 2, 3 ]\n * ```\n */\nexport const values: (<T> (obj: TypedMap<T>) => T[]) = (obj: Obj) =>\n    Object.keys(obj).map(key => obj[key]);\n\n/**\n * Reduce function that returns true if all of the values are truthy.\n *\n * @example\n * ```\n *\n * let vals = [ 1, true, {}, \"hello world\"];\n * vals.reduce(allTrueR, true); // true\n *\n * vals.push(0);\n * vals.reduce(allTrueR, true); // false\n * ```\n */\nexport const allTrueR  = (memo: boolean, elem: any) => memo && elem;\n\n/**\n * Reduce function that returns true if any of the values are truthy.\n *\n *  * @example\n * ```\n *\n * let vals = [ 0, null, undefined ];\n * vals.reduce(anyTrueR, true); // false\n *\n * vals.push(\"hello world\");\n * vals.reduce(anyTrueR, true); // true\n * ```\n */\nexport const anyTrueR  = (memo: boolean, elem: any) => memo || elem;\n\n/**\n * Reduce function which un-nests a single level of arrays\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexport const unnestR   = (memo: any[], elem: any[]) => memo.concat(elem);\n\n/**\n * Reduce function which recursively un-nests all arrays\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexport const flattenR  = (memo: any[], elem: any) =>\n    isArray(elem) ? memo.concat(elem.reduce(flattenR, [])) : pushR(memo, elem);\n\n/**\n * Reduce function that pushes an object to an array, then returns the array.\n * Mostly just for [[flattenR]] and [[uniqR]]\n */\nexport function pushR(arr: any[], obj: any) {\n  arr.push(obj);\n  return arr;\n}\n\n/** Reduce function that filters out duplicates */\nexport const uniqR = <T> (acc: T[], token: T): T[] =>\n    inArray(acc, token) ? acc : pushR(acc, token);\n\n/**\n * Return a new array with a single level of arrays unnested.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * unnest(input) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexport const unnest    = (arr: any[]) => arr.reduce(unnestR, []);\n/**\n * Return a completely flattened version of an array.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * flatten(input) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexport const flatten   = (arr: any[]) => arr.reduce(flattenR, []);\n\n/**\n * Given a .filter Predicate, builds a .filter Predicate which throws an error if any elements do not pass.\n * @example\n * ```\n *\n * let isNumber = (obj) => typeof(obj) === 'number';\n * let allNumbers = [ 1, 2, 3, 4, 5 ];\n * allNumbers.filter(assertPredicate(isNumber)); //OK\n *\n * let oneString = [ 1, 2, 3, 4, \"5\" ];\n * oneString.filter(assertPredicate(isNumber, \"Not all numbers\")); // throws Error(\"\"Not all numbers\"\");\n * ```\n */\nexport function assertPredicate<T>(predicate: Predicate<T>, errMsg: (string|Function) = \"assert failure\"): Predicate<T> {\n  return (obj: T) => {\n    if (!predicate(obj)) {\n      throw new Error(isFunction(errMsg) ? (<Function> errMsg)(obj) : errMsg);\n    }\n    return true;\n  };\n}\n\n/**\n * Like _.pairs: Given an object, returns an array of key/value pairs\n *\n * @example\n * ```\n *\n * pairs({ foo: \"FOO\", bar: \"BAR }) // [ [ \"foo\", \"FOO\" ], [ \"bar\": \"BAR\" ] ]\n * ```\n */\nexport const pairs = (obj: Obj) =>\n    Object.keys(obj).map(key => [ key, obj[key]] );\n\n/**\n * Given two or more parallel arrays, returns an array of tuples where\n * each tuple is composed of [ a[i], b[i], ... z[i] ]\n *\n * @example\n * ```\n *\n * let foo = [ 0, 2, 4, 6 ];\n * let bar = [ 1, 3, 5, 7 ];\n * let baz = [ 10, 30, 50, 70 ];\n * arrayTuples(foo, bar);       // [ [0, 1], [2, 3], [4, 5], [6, 7] ]\n * arrayTuples(foo, bar, baz);  // [ [0, 1, 10], [2, 3, 30], [4, 5, 50], [6, 7, 70] ]\n * ```\n */\nexport function arrayTuples(...arrayArgs: any[]): any[] {\n  if (arrayArgs.length === 0) return [];\n  let length = arrayArgs.reduce((min, arr) => Math.min(arr.length, min), 9007199254740991); // aka 2^53 − 1 aka Number.MAX_SAFE_INTEGER\n  return Array.apply(null, Array(length)).map((ignored, idx) => arrayArgs.map(arr => arr[idx]));\n}\n\n/**\n * Reduce function which builds an object from an array of [key, value] pairs.\n *\n * Each iteration sets the key/val pair on the memo object, then returns the memo for the next iteration.\n *\n * Each keyValueTuple should be an array with values [ key: string, value: any ]\n *\n * @example\n * ```\n *\n * var pairs = [ [\"fookey\", \"fooval\"], [\"barkey\", \"barval\"] ]\n *\n * var pairsToObj = pairs.reduce((memo, pair) => applyPairs(memo, pair), {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n *\n * // Or, more simply:\n * var pairsToObj = pairs.reduce(applyPairs, {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n * ```\n */\nexport function applyPairs(memo: TypedMap<any>, keyValTuple: any[]) {\n  let key: string, value: any;\n  if (isArray(keyValTuple)) [key, value] = keyValTuple;\n  if (!isString(key)) throw new Error(\"invalid parameters to applyPairs\");\n  memo[key] = value;\n  return memo;\n}\n\n/** Get the last element of an array */\nexport function tail<T>(arr: T[]): T {\n  return arr.length && arr[arr.length - 1] || undefined;\n}\n\n/**\n * shallow copy from src to dest\n *\n * note: This is a shallow copy, while angular.copy is a deep copy.\n * ui-router uses `copy` only to make copies of state parameters.\n */\nfunction _copy(src: Obj, dest: Obj) {\n  if (dest) Object.keys(dest).forEach(key => delete dest[key]);\n  if (!dest) dest = {};\n  return extend(dest, src);\n}\n\n/** Naive forEach implementation works with Objects or Arrays */\nfunction _forEach(obj: (any[]|any), cb: (el, idx?) => void, _this: Obj) {\n  if (isArray(obj)) return obj.forEach(cb, _this);\n  Object.keys(obj).forEach(key => cb(obj[key], key));\n}\n\nfunction _copyProps(to: Obj, from: Obj) {\n  Object.keys(from).forEach(key => to[key] = from[key]);\n  return to;\n}\nfunction _extend(toObj: Obj, fromObj: Obj): Obj;\nfunction _extend(toObj: Obj, ...fromObj: Obj[]): Obj;\nfunction _extend(toObj: Obj) {\n  return restArgs(arguments, 1).filter(identity).reduce(_copyProps, toObj);\n}\n\nfunction _equals(o1: any, o2: any): boolean {\n  if (o1 === o2) return true;\n  if (o1 === null || o2 === null) return false;\n  if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN\n  let t1 = typeof o1, t2 = typeof o2;\n  if (t1 !== t2 || t1 !== 'object') return false;\n\n  const tup = [o1, o2];\n  if (all(isArray)(tup)) return _arraysEq(o1, o2);\n  if (all(isDate)(tup)) return o1.getTime() === o2.getTime();\n  if (all(isRegExp)(tup)) return o1.toString() === o2.toString();\n  if (all(isFunction)(tup)) return true; // meh\n\n  let predicates = [isFunction, isArray, isDate, isRegExp];\n  if (predicates.map(any).reduce((b, fn) => b || !!fn(tup), false)) return false;\n\n  let key: string, keys: { [i: string]: boolean } = {};\n  for (key in o1) {\n    if (!_equals(o1[key], o2[key])) return false;\n    keys[key] = true;\n  }\n  for (key in o2) {\n    if (!keys[key]) return false;\n  }\n\n  return true;\n}\n\nfunction _arraysEq(a1: any[], a2: any[]) {\n  if (a1.length !== a2.length) return false;\n  return arrayTuples(a1, a2).reduce((b, t) => b && _equals(t[0], t[1]), true);\n}\n\n// issue #2676\nexport const silenceUncaughtInPromise = (promise: Promise<any>) =>\n    promise.catch(e => 0) && promise;\nexport const silentRejection = (error: any) =>\n    silenceUncaughtInPromise(services.$q.reject(error));\n\n\n\n/** WEBPACK FOOTER **\n ** ./common/common.ts\n **/","/** Predicates @module common_predicates */ /** */\nimport {and, not, pipe, prop} from \"./hof\";\nimport {Predicate} from \"./common\"; // has or is using\n\nconst toStr = Object.prototype.toString;\nconst tis = (t: string) => (x: any) => typeof(x) === t;\nexport const isUndefined = tis('undefined');\nexport const isDefined = not(isUndefined);\nexport const isNull = (o: any) => o === null;\nexport const isFunction: (x: any) => x is Function = <any> tis('function');\nexport const isNumber: (x: any) => x is number = <any> tis('number');\nexport const isString = <(x: any) => x is string> tis('string');\nexport const isObject = (x: any) => x !== null && typeof x === 'object';\nexport const isArray = Array.isArray;\nexport const isDate: (x: any) => x is Date = <any> ((x: any) => toStr.call(x) === '[object Date]');\nexport const isRegExp: (x: any) => x is RegExp = <any> ((x: any) => toStr.call(x) === '[object RegExp]');\n\n/**\n * Predicate which checks if a value is injectable\n *\n * A value is \"injectable\" if it is a function, or if it is an ng1 array-notation-style array\n * where all the elements in the array are Strings, except the last one, which is a Function\n */\nexport function isInjectable(val: any) {\n  if (isArray(val) && val.length) {\n    let head = val.slice(0, -1), tail = val.slice(-1);\n    return !(head.filter(not(isString)).length || tail.filter(not(isFunction)).length);\n  }\n  return isFunction(val);\n}\n\n/**\n * Predicate which checks if a value looks like a Promise\n *\n * It is probably a Promise if it's an object, and it has a `then` property which is a Function\n */\nexport const isPromise = <(x: any) => x is Promise<any>> and(isObject, pipe(prop('then'), isFunction));\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./common/predicates.ts\n **/","/**\n * Higher order functions\n *\n * @module common_hof\n */ /** */\n\nimport {Predicate} from \"./common\";\n/**\n * Returns a new function for [Partial Application](https://en.wikipedia.org/wiki/Partial_application) of the original function.\n *\n * Given a function with N parameters, returns a new function that supports partial application.\n * The new function accepts anywhere from 1 to N parameters.  When that function is called with M parameters,\n * where M is less than N, it returns a new function that accepts the remaining parameters.  It continues to\n * accept more parameters until all N parameters have been supplied.\n *\n *\n * This contrived example uses a partially applied function as an predicate, which returns true\n * if an object is found in both arrays.\n * @example\n * ```\n * // returns true if an object is in both of the two arrays\n * function inBoth(array1, array2, object) {\n *   return array1.indexOf(object) !== -1 &&\n *          array2.indexOf(object) !== 1;\n * }\n * let obj1, obj2, obj3, obj4, obj5, obj6, obj7\n * let foos = [obj1, obj3]\n * let bars = [obj3, obj4, obj5]\n *\n * // A curried \"copy\" of inBoth\n * let curriedInBoth = curry(inBoth);\n * // Partially apply both the array1 and array2\n * let inFoosAndBars = curriedInBoth(foos, bars);\n *\n * // Supply the final argument; since all arguments are\n * // supplied, the original inBoth function is then called.\n * let obj1InBoth = inFoosAndBars(obj1); // false\n *\n * // Use the inFoosAndBars as a predicate.\n * // Filter, on each iteration, supplies the final argument\n * let allObjs = [ obj1, obj2, obj3, obj4, obj5, obj6, obj7 ];\n * let foundInBoth = allObjs.filter(inFoosAndBars); // [ obj3 ]\n *\n * ```\n *\n * Stolen from: http://stackoverflow.com/questions/4394747/javascript-curry-function\n *\n * @param fn\n * @returns {*|function(): (*|any)}\n */\nexport function curry(fn: Function): Function {\n  let initial_args = [].slice.apply(arguments, [1]);\n  let func_args_length = fn.length;\n\n  function curried(args: any[]) {\n    if (args.length >= func_args_length)\n      return fn.apply(null, args);\n    return function () {\n      return curried(args.concat([].slice.apply(arguments)));\n    };\n  }\n  return curried(initial_args);\n}\n\n\n\n/**\n * Given a varargs list of functions, returns a function that composes the argument functions, right-to-left\n * given: f(x), g(x), h(x)\n * let composed = compose(f,g,h)\n * then, composed is: f(g(h(x)))\n */\nexport function compose() {\n  let args = arguments;\n  let start = args.length - 1;\n  return function() {\n    let i = start, result = args[start].apply(this, arguments);\n    while (i--) result = args[i].call(this, result);\n    return result;\n  };\n}\n\n/**\n * Given a varargs list of functions, returns a function that is composes the argument functions, left-to-right\n * given: f(x), g(x), h(x)\n * let piped = pipe(f,g,h);\n * then, piped is: h(g(f(x)))\n */\nexport function pipe(...funcs: Function[]): (obj: any) => any {\n  return compose.apply(null, [].slice.call(arguments).reverse());\n}\n\n/**\n * Given a property name, returns a function that returns that property from an object\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = prop(\"name\");\n * getName(obj) === \"blarg\"\n */\nexport const prop = (name: string) =>\n    (obj: any) => obj && obj[name];\n\n/**\n * Given a property name and a value, returns a function that returns a boolean based on whether\n * the passed object has a property that matches the value\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = propEq(\"name\", \"blarg\");\n * getName(obj) === true\n */\nexport const propEq = curry((name: string, val: any, obj: any) => obj && obj[name] === val);\n\n/**\n * Given a dotted property name, returns a function that returns a nested property from an object, or undefined\n * let obj = { id: 1, nestedObj: { foo: 1, name: \"blarg\" }, };\n * let getName = prop(\"nestedObj.name\");\n * getName(obj) === \"blarg\"\n * let propNotFound = prop(\"this.property.doesnt.exist\");\n * propNotFound(obj) === undefined\n */\nexport const parse = (name: string) =>\n    pipe.apply(null, name.split(\".\").map(prop));\n\n/**\n * Given a function that returns a truthy or falsey value, returns a\n * function that returns the opposite (falsey or truthy) value given the same inputs\n */\nexport const not: (fn: Predicate<any>) => Predicate<any> = (fn: Predicate<any>) =>\n    (...args: any[]) => !fn.apply(null, args);\n\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if both functions return truthy for the given arguments\n */\nexport function and(fn1: Predicate<any>, fn2: Predicate<any>): Predicate<any> {\n  return (...args: any[]) => fn1.apply(null, args) && fn2.apply(null, args);\n}\n\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if at least one of the functions returns truthy for the given arguments\n */\nexport function or(fn1: Predicate<any>, fn2: Predicate<any>): Predicate<any> {\n  return (...args: any[]) => fn1.apply(null, args) || fn2.apply(null, args);\n}\n\n/**\n * Check if all the elements of an array match a predicate function\n *\n * @param fn1 a predicate function `fn1`\n * @returns a function which takes an array and returns true if `fn1` is true for all elements of the array\n */\nexport const all = (fn1: Predicate<any>) =>\n    (arr: any[]) => arr.reduce((b, x) => b && !!fn1(x), true) as boolean;\nexport const any = (fn1: Predicate<any>) =>\n    (arr: any[]) => arr.reduce((b, x) => b || !!fn1(x), false) as boolean;\n\n/** Given a class, returns a Predicate function that returns true if the object is of that class */\nexport const is = (ctor: Function): Predicate<any> => obj => \n    (obj != null && obj.constructor === ctor || obj instanceof ctor);\n\n/** Given a value, returns a Predicate function that returns true if another value is === equal to the original value */\nexport const eq: (comp: any) => Predicate<any> = (val: any) => (other: any) =>\n    val === other;\n\n/** Given a value, returns a function which returns the value */\nexport const val = <T> (v: T) => () => v;\n\n\n\nexport function invoke(fnName: string): Function;\nexport function invoke(fnName: string, args: any[]): Function;\nexport function invoke(fnName: string, args?: any[]): Function {\n  return (obj: any) =>\n      obj[fnName].apply(obj, args);\n}\n\n/**\n * Sorta like Pattern Matching (a functional programming conditional construct)\n *\n * See http://c2.com/cgi/wiki?PatternMatching\n *\n * This is a conditional construct which allows a series of predicates and output functions\n * to be checked and then applied.  Each predicate receives the input.  If the predicate\n * returns truthy, then its matching output function (mapping function) is provided with\n * the input and, then the result is returned.\n *\n * Each combination (2-tuple) of predicate + output function should be placed in an array\n * of size 2: [ predicate, mapFn ]\n *\n * These 2-tuples should be put in an outer array.\n *\n * @example\n * ```\n *\n * // Here's a 2-tuple where the first element is the isString predicate\n * // and the second element is a function that returns a description of the input\n * let firstTuple = [ angular.isString, (input) => `Heres your string ${input}` ];\n *\n * // Second tuple: predicate \"isNumber\", mapfn returns a description\n * let secondTuple = [ angular.isNumber, (input) => `(${input}) That's a number!` ];\n *\n * let third = [ (input) => input === null,  (input) => `Oh, null...` ];\n *\n * let fourth = [ (input) => input === undefined,  (input) => `notdefined` ];\n *\n * let descriptionOf = pattern([ firstTuple, secondTuple, third, fourth ]);\n *\n * console.log(descriptionOf(undefined)); // 'notdefined'\n * console.log(descriptionOf(55)); // '(55) That's a number!'\n * console.log(descriptionOf(\"foo\")); // 'Here's your string foo'\n * ```\n *\n * @param struct A 2D array.  Each element of the array should be an array, a 2-tuple,\n * with a Predicate and a mapping/output function\n * @returns {function(any): *}\n */\nexport function pattern(struct: Function[][]): Function {\n  return function(x: any) {\n    for (var i = 0; i < struct.length; i++) {\n      if (struct[i][0](x)) return struct[i][1](x);\n    }\n  };\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./common/hof.ts\n **/","/**\n * This module is a stub for core services such as Dependency Injection or Browser Location.\n * Core services may be implemented by a specific framework, such as ng1 or ng2, or be pure javascript.\n *\n * @module common\n */\n/** for typedoc */\nimport {IInjectable, Obj} from \"./common\";\n\nlet notImplemented = (fnname: string) => () => {\n  throw new Error(`${fnname}(): No coreservices implementation for UI-Router is loaded. You should include one of: ['angular1.js']`);\n};\n\nlet services: CoreServices = {\n  $q: undefined,\n  $injector: undefined,\n  location: <any> {},\n  locationConfig: <any> {},\n  template: <any> {}\n};\n\n[\"setUrl\", \"path\", \"search\", \"hash\", \"onChange\"]\n    .forEach(key => services.location[key] = notImplemented(key));\n\n[\"port\", \"protocol\", \"host\", \"baseHref\", \"html5Mode\", \"hashPrefix\" ]\n    .forEach(key => services.locationConfig[key] = notImplemented(key));\n\nexport interface $QLikeDeferred {\n  resolve: (val?: any) => void;\n  reject: (reason?: any) => void;\n  promise: Promise<any>;\n}\n\nexport interface $QLike {\n  when<T>(val?: T): Promise<T>;\n  reject<T>(reason: any): Promise<T>;\n  defer(): $QLikeDeferred;\n  all(promises: { [key: string]: Promise<any> }): Promise<any>;\n  all(promises: Promise<any>[]): Promise<any[]>;\n}\n\nexport interface $InjectorLike {\n  get(token: any): any;\n  has(token: any): boolean;\n  invoke(fn: IInjectable, context?: any, locals?: Obj): any;\n  annotate(fn: IInjectable, strictDi?: boolean): any[];\n  strictDi?: boolean;\n}\n\nexport interface CoreServices {\n  $q: $QLike;\n  $injector: $InjectorLike;\n  /** Services related to getting or setting the browser location (url) */\n  location: LocationServices;\n  /** Retrieves configuration for how to construct a URL. */\n  locationConfig: LocationConfig;\n  template: TemplateServices;\n}\n\nexport interface LocationServices {\n  setUrl(newurl: string, replace?: boolean): void;\n  path(): string;\n  search(): string;\n  hash(): string;\n  onChange(callback: Function): Function;\n}\n\nexport interface LocationConfig {\n  port(): number;\n  protocol(): string;\n  host(): string;\n\n  baseHref(): string;\n  html5Mode(): boolean;\n  hashPrefix(): string;\n  hashPrefix(newprefix: string): string;\n}\n\nexport interface TemplateServices {\n  get(url: string): Promise<string>;\n}\n\n\nexport {services};\n\n\n/** WEBPACK FOOTER **\n ** ./common/coreservices.ts\n **/","/** @module common */ \n/** \n * Matches state names using glob-like pattern strings.\n *\n * Globs can be used in specific APIs including:\n *\n * - [[StateService.is]]\n * - [[StateService.includes]]\n * - [[HookMatchCriteria.to]]\n * - [[HookMatchCriteria.from]]\n * - [[HookMatchCriteria.exiting]]\n * - [[HookMatchCriteria.retained]]\n * - [[HookMatchCriteria.entering]]\n *\n * A `Glob` string is a pattern which matches state names.\n * Nested state names are split into segments (separated by a dot) when processing.\n * The state named `foo.bar.baz` is split into three segments ['foo', 'bar', 'baz']\n *\n * Globs work according to the following rules:\n *\n * ### Exact match:\n *\n * The glob `'A.B'` matches the state named exactly `'A.B'`.\n *\n * | Glob        |Matches states named|Does not match state named|\n * |:------------|:--------------------|:---------------------|\n * | `'A'`       | `'A'`               | `'B'` , `'A.C'`      |\n * | `'A.B'`     | `'A.B'`             | `'A'` , `'A.B.C'`    |\n * | `'foo'`     | `'foo'`             | `'FOO'` , `'foo.bar'`|\n *\n * ### Single star (`*`)\n *\n * A single star (`*`) is a wildcard that matches exactly one segment.\n *\n * | Glob        |Matches states named  |Does not match state named |\n * |:------------|:---------------------|:--------------------------|\n * | `'*'`       | `'A'` , `'Z'`        | `'A.B'` , `'Z.Y.X'`       |\n * | `'A.*'`     | `'A.B'` , `'A.C'`    | `'A'` , `'A.B.C'`         |\n * | `'A.*.*'`   | `'A.B.C'` , `'A.X.Y'`| `'A'`, `'A.B'` , `'Z.Y.X'`|\n *\n * ### Double star (`**`)\n *\n * A double star (`'**'`) is a wildcard that matches *zero or more segments*\n *\n * | Glob        |Matches states named                           |Does not match state named         |\n * |:------------|:----------------------------------------------|:----------------------------------|\n * | `'**'`      | `'A'` , `'A.B'`, `'Z.Y.X'`                    | (matches all states)              |\n * | `'A.**'`    | `'A'` , `'A.B'` , `'A.C.X'`                   | `'Z.Y.X'`                         |\n * | `'**.X'`    | `'X'` , `'A.X'` , `'Z.Y.X'`                   | `'A'` , `'A.login.Z'`             |\n * | `'A.**.X'`  | `'A.X'` , `'A.B.X'` , `'A.B.C.X'`             | `'A'` , `'A.B.C'`                 |\n *\n */\nexport class Glob {\n  text: string;\n  glob: Array<string>;\n  regexp: RegExp;\n\n  constructor(text: string) {\n    this.text = text;\n    this.glob = text.split('.');\n\n    let regexpString = this.text.split('.')\n        .map(seg => {\n          if (seg === '**') return '(?:|(?:\\\\.[^.]*)*)';\n          if (seg === '*')  return '\\\\.[^.]*';\n          return                   '\\\\.' + seg;\n        }).join('');\n\n    this.regexp = new RegExp(\"^\" + regexpString + \"$\");\n  }\n\n  matches(name: string) {\n    return this.regexp.test('.' + name);\n  }\n\n  /** @deprecated whats the point? */\n  static is(text: string) {\n    return text.indexOf('*') > -1;\n  }\n\n  /** @deprecated whats the point? */\n  static fromString(text: string) {\n    if (!this.is(text)) return null;\n    return new Glob(text);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./common/glob.ts\n **/","/** @module common */ /** for typedoc */\n\nexport class Queue<T> {\n  constructor(private _items: T[] = [], private _limit: number = null) { }\n\n  enqueue(item: T) {\n    let items = this._items;\n    items.push(item);\n    if (this._limit && items.length > this._limit) items.shift();\n    return item;\n  }\n\n  dequeue(): T {\n    if (this.size())\n      return this._items.splice(0, 1)[0];\n  }\n\n  clear(): Array<T> {\n    let current = this._items;\n    this._items = [];\n    return current;\n  }\n\n  size(): number {\n    return this._items.length;\n  }\n\n  remove(item: T) {\n    let idx = this._items.indexOf(item);\n    return idx > -1 && this._items.splice(idx, 1)[0];\n  }\n\n  peekTail(): T {\n    return this._items[this._items.length - 1];\n  }\n\n  peekHead(): T {\n    if (this.size())\n      return this._items[0];\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./common/queue.ts\n **/","/** @module common_strings */ /** */\n\nimport {isString, isArray, isDefined, isNull, isPromise, isInjectable, isObject} from \"./predicates\";\nimport {Rejection} from \"../transition/rejectFactory\";\nimport {IInjectable, identity, Obj} from \"./common\";\nimport {pattern, is, not, val, invoke} from \"./hof\";\nimport {Transition} from \"../transition/transition\";\nimport {Resolvable} from \"../resolve/resolvable\";\n\n/**\n * Returns a string shortened to a maximum length\n *\n * If the string is already less than the `max` length, return the string.\n * Else return the string, shortened to `max - 3` and append three dots (\"...\").\n *\n * @param max the maximum length of the string to return\n * @param str the input string\n */\nexport function maxLength(max: number, str: string) {\n  if (str.length <= max) return str;\n  return str.substr(0, max - 3) + \"...\";\n}\n\n/**\n * Returns a string, with spaces added to the end, up to a desired str length\n *\n * If the string is already longer than the desired length, return the string.\n * Else returns the string, with extra spaces on the end, such that it reaches `length` characters.\n *\n * @param length the desired length of the string to return\n * @param str the input string\n */\nexport function padString(length: number, str: string) {\n  while (str.length < length) str += \" \";\n  return str;\n}\n\nexport function kebobString(camelCase: string) {\n  return camelCase\n      .replace(/^([A-Z])/, $1 => $1.toLowerCase()) // replace first char\n      .replace(/([A-Z])/g, $1 => \"-\" + $1.toLowerCase()); // replace rest\n}\n\nfunction _toJson(obj: Obj) {\n  return JSON.stringify(obj);\n}\n\nfunction _fromJson(json: string) {\n  return isString(json) ? JSON.parse(json) : json;\n}\n\n\nfunction promiseToString(p: Promise<any>) {\n  return `Promise(${JSON.stringify(p)})`;\n}\n\nexport function functionToString(fn: Function) {\n  let fnStr = fnToString(fn);\n  let namedFunctionMatch = fnStr.match(/^(function [^ ]+\\([^)]*\\))/);\n  let toStr = namedFunctionMatch ? namedFunctionMatch[1] : fnStr;\n\n  let fnName = fn['name'] || \"\";\n  if (fnName && toStr.match(/function \\(/)) {\n    return 'function ' + fnName + toStr.substr(9);\n  }\n  return toStr;\n}\n\nexport function fnToString(fn: IInjectable) {\n  let _fn = isArray(fn) ? fn.slice(-1)[0] : fn;\n  return _fn && _fn.toString() || \"undefined\";\n}\n\nlet stringifyPatternFn: (val: any) => string = null;\nlet stringifyPattern = function(value: any) {\n  let isTransitionRejectionPromise = Rejection.isTransitionRejectionPromise;\n\n  stringifyPatternFn = <any> stringifyPatternFn || pattern([\n    [not(isDefined),                  val(\"undefined\")],\n    [isNull,                          val(\"null\")],\n    [isPromise,                       val(\"[Promise]\")],\n    [isTransitionRejectionPromise,    (x: any) => x._transitionRejection.toString()],\n    [is(Rejection),                   invoke(\"toString\")],\n    [is(Transition),                  invoke(\"toString\")],\n    [is(Resolvable),                  invoke(\"toString\")],\n    [isInjectable,                    functionToString],\n    [val(true),                       identity]\n  ]);\n\n  return stringifyPatternFn(value);\n};\n\nexport function stringify(o: any) {\n  var seen: any[] = [];\n\n  function format(val: any) {\n    if (isObject(val)) {\n      if (seen.indexOf(val) !== -1) return '[circular ref]';\n      seen.push(val);\n    }\n    return stringifyPattern(val);\n  }\n\n  return JSON.stringify(o, (key, val) => format(val)).replace(/\\\\\"/g, '\"');\n}\n\n/** Returns a function that splits a string on a character or substring */\nexport const beforeAfterSubstr = (char: string) => (str: string) => {\n  if (!str) return [\"\", \"\"];\n  let idx = str.indexOf(char);\n  if (idx === -1) return [str, \"\"];\n  return [str.substr(0, idx), str.substr(idx + 1)];\n};\n\n\n/** WEBPACK FOOTER **\n ** ./common/strings.ts\n **/","/** @module transition */ /** for typedoc */\n\"use strict\";\nimport {extend, silentRejection} from \"../common/common\";\nimport {stringify} from \"../common/strings\";\n\nexport enum RejectType {\n  SUPERSEDED = 2, ABORTED = 3, INVALID = 4, IGNORED = 5, ERROR = 6\n}\n\nexport class Rejection {\n  type: number;\n  message: string;\n  detail: any;\n  redirected: boolean;\n\n  constructor(type: number, message?: string, detail?: any) {\n    this.type = type;\n    this.message = message;\n    this.detail = detail;\n  }\n\n  toString() {\n    const detailString = (d: any) => \n        d && d.toString !== Object.prototype.toString ? d.toString() : stringify(d);\n    let type = this.type, message = this.message, detail = detailString(this.detail);\n    return `TransitionRejection(type: ${type}, message: ${message}, detail: ${detail})`;\n  }\n\n  toPromise() {\n    return extend(silentRejection(this), { _transitionRejection: this });\n  }\n\n  /** Returns true if the obj is a rejected promise created from the `asPromise` factory */\n  static isTransitionRejectionPromise(obj: any) {\n    return obj && (typeof obj.then === 'function') && obj._transitionRejection instanceof Rejection;\n  }\n\n  /** Returns a TransitionRejection due to transition superseded */\n  static superseded(detail?: any, options?: any) {\n    let message = \"The transition has been superseded by a different transition\";\n    let rejection = new Rejection(RejectType.SUPERSEDED, message, detail);\n    if (options && options.redirected) {\n      rejection.redirected = true;\n    }\n    return rejection;\n  }\n\n  /** Returns a TransitionRejection due to redirected transition */\n  static redirected(detail?: any) {\n    return Rejection.superseded(detail, {redirected: true});\n  }\n\n  /** Returns a TransitionRejection due to invalid transition */\n  static invalid(detail?: any) {\n    let message = \"This transition is invalid\";\n    return new Rejection(RejectType.INVALID, message, detail);\n  }\n\n  /** Returns a TransitionRejection due to ignored transition */\n  static ignored(detail?: any) {\n    let message = \"The transition was ignored\";\n    return new Rejection(RejectType.IGNORED, message, detail);\n  }\n\n  /** Returns a TransitionRejection due to aborted transition */\n  static aborted(detail?: any) {\n    // TODO think about how to encapsulate an Error() object\n    let message = \"The transition has been aborted\";\n    return new Rejection(RejectType.ABORTED, message, detail);\n  }\n\n  /** Returns a TransitionRejection due to aborted transition */\n  static errored(detail?: any) {\n    // TODO think about how to encapsulate an Error() object\n    let message = \"The transition errored\";\n    return new Rejection(RejectType.ERROR, message, detail);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./transition/rejectFactory.ts\n **/","/** @module transition */ /** for typedoc */\nimport {stringify} from \"../common/strings\";\nimport {trace} from \"../common/trace\";\nimport {services} from \"../common/coreservices\";\nimport {\n    map, find, extend, mergeR,  tail,\n    omit, toJson, arrayTuples, unnestR, identity, anyTrueR\n} from \"../common/common\";\nimport { isObject, isArray } from \"../common/predicates\";\nimport { prop, propEq, val, not } from \"../common/hof\";\n\nimport {StateDeclaration, StateOrName} from \"../state/interface\";\nimport {\n    TransitionOptions, TransitionHookOptions, TreeChanges, IHookRegistry, IHookGetter,\n    HookMatchCriteria, TransitionHookFn, TransitionStateHookFn, HookRegOptions\n} from \"./interface\";\n\nimport {TransitionHook} from \"./transitionHook\";\nimport {HookRegistry, matchState} from \"./hookRegistry\";\nimport {HookBuilder} from \"./hookBuilder\";\nimport {PathNode} from \"../path/node\";\nimport {PathFactory} from \"../path/pathFactory\";\nimport {State} from \"../state/stateObject\";\nimport {TargetState} from \"../state/targetState\";\nimport {Param} from \"../params/param\";\nimport {Resolvable} from \"../resolve/resolvable\";\nimport {ViewConfig} from \"../view/interface\";\nimport {Rejection} from \"./rejectFactory\";\nimport {ResolveContext} from \"../resolve/resolveContext\";\nimport {UIRouter} from \"../router\";\nimport {Globals} from \"../globals\";\nimport {UIInjector} from \"../common/interface\";\nimport {RawParams} from \"../params/interface\";\n\n\nlet transitionCount = 0;\nconst stateSelf: (_state: State) => StateDeclaration = prop(\"self\");\n\n/**\n * Represents a transition between two states.\n *\n * When navigating to a state, we are transitioning **from** the current state **to** the new state.\n *\n * This object contains all contextual information about the to/from states, parameters, resolves.\n * It has information about all states being entered and exited as a result of the transition.\n */\nexport class Transition implements IHookRegistry {\n  static diToken = Transition;\n  \n  $id: number;\n\n  /**\n   * A reference to the [[UIRouter]] instance\n   *\n   * This reference can be used to access the router services, such as the [[StateService]]\n   */\n  router: UIRouter;\n\n  /** @hidden */\n  private _deferred = services.$q.defer();\n  /**\n   * This promise is resolved or rejected based on the outcome of the Transition.\n   *\n   * When the transition is successful, the promise is resolved\n   * When the transition is unsuccessful, the promise is rejected with the [[TransitionRejection]] or javascript error\n   */\n  promise: Promise<any> = this._deferred.promise;\n  /**\n   * A boolean which indicates if the transition was successful\n   *\n   * After a successful transition, this value is set to true.\n   * After a failed transition, this value is set to false.\n   */\n  success: boolean;\n  /** @hidden */\n  private _error: any;\n\n  private _options: TransitionOptions;\n  private _treeChanges: TreeChanges;\n  private _targetState: TargetState;\n\n  /** @inheritdoc */\n  onBefore (matchCriteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions) : Function { throw \"\"; };\n  /** @inheritdoc */\n  onStart (matchCriteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions) : Function { throw \"\"; };\n  /** @inheritdoc */\n  onExit (matchCriteria: HookMatchCriteria, callback: TransitionStateHookFn, options?: HookRegOptions) : Function { throw \"\"; };\n  /** @inheritdoc */\n  onRetain (matchCriteria: HookMatchCriteria, callback: TransitionStateHookFn, options?: HookRegOptions) : Function { throw \"\"; };\n  /** @inheritdoc */\n  onEnter (matchCriteria: HookMatchCriteria, callback: TransitionStateHookFn, options?: HookRegOptions) : Function { throw \"\"; };\n  /** @inheritdoc */\n  onFinish (matchCriteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions) : Function { throw \"\"; };\n  /** @inheritdoc */\n  onSuccess (matchCriteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions) : Function { throw \"\"; };\n  /** @inheritdoc */\n  onError (matchCriteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions) : Function { throw \"\"; };\n\n  getHooks:   IHookGetter;\n\n  /**\n   * Creates a new Transition object.\n   *\n   * If the target state is not valid, an error is thrown.\n   *\n   * @param fromPath The path of [[PathNode]]s from which the transition is leaving.  The last node in the `fromPath`\n   *        encapsulates the \"from state\".\n   * @param targetState The target state and parameters being transitioned to (also, the transition options)\n   * @param router The [[UIRouter]] instance\n   */\n  constructor(fromPath: PathNode[], targetState: TargetState, router: UIRouter) {\n    this.router = router;\n    this._targetState = targetState;\n\n    if (!targetState.valid()) {\n      throw new Error(targetState.error());\n    }\n\n    // Makes the Transition instance a hook registry (onStart, etc)\n    HookRegistry.mixin(new HookRegistry(), this);\n\n    // current() is assumed to come from targetState.options, but provide a naive implementation otherwise.\n    this._options = extend({ current: val(this) }, targetState.options());\n    this.$id = transitionCount++;\n    let toPath = PathFactory.buildToPath(fromPath, targetState);\n    this._treeChanges = PathFactory.treeChanges(fromPath, toPath, this._options.reloadState);\n    let enteringStates = this._treeChanges.entering.map(node => node.state);\n    PathFactory.applyViewConfigs(router.transitionService.$view, this._treeChanges.to, enteringStates);\n\n    let rootResolvables: Resolvable[] = [\n      new Resolvable(UIRouter, () => router, [], undefined, router),\n      new Resolvable(Transition, () => this, [], undefined, this),\n      new Resolvable('$transition$', () => this, [], undefined, this),\n      new Resolvable('$stateParams', () => this.params(), [], undefined, this.params())\n    ];\n\n    let rootNode: PathNode = this._treeChanges.to[0];\n    let context = new ResolveContext(this._treeChanges.to);\n    context.addResolvables(rootResolvables, rootNode.state);\n  }\n\n  $from() {\n    return tail(this._treeChanges.from).state;\n  }\n\n  $to() {\n    return tail(this._treeChanges.to).state;\n  }\n\n  /**\n   * Returns the \"from state\"\n   *\n   * @returns The state object for the Transition's \"from state\".\n   */\n  from(): StateDeclaration {\n    return this.$from().self;\n  }\n\n  /**\n   * Returns the \"to state\"\n   *\n   * @returns The state object for the Transition's target state (\"to state\").\n   */\n  to() {\n    return this.$to().self;\n  }\n\n  /**\n   * Gets the Target State\n   *\n   * A transition's [[TargetState]] encapsulates the [[to]] state, the [[params]], and the [[options]].\n   *\n   * @returns the [[TargetState]] of this Transition\n   */\n  targetState() {\n    return this._targetState;\n  }\n\n  /**\n   * Determines whether two transitions are equivalent.\n   */\n  is(compare: (Transition|{to?: any, from?: any})): boolean {\n    if (compare instanceof Transition) {\n      // TODO: Also compare parameters\n      return this.is({ to: compare.$to().name, from: compare.$from().name });\n    }\n    return !(\n      (compare.to && !matchState(this.$to(), compare.to)) ||\n      (compare.from && !matchState(this.$from(), compare.from))\n    );\n  }\n\n  /**\n   * Gets transition parameter values\n   *\n   * @param pathname Pick which treeChanges path to get parameters for:\n   *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n   * @returns transition parameter values for the desired path.\n   */\n  params(pathname: string = \"to\"): { [key: string]: any } {\n    return this._treeChanges[pathname].map(prop(\"paramValues\")).reduce(mergeR, {});\n  }\n\n\n  /**\n   * Creates a [[UIInjector]] Dependency Injector\n   *\n   * Returns a Dependency Injector for the Transition's target state (to state).\n   * The injector provides resolve values which the target state has access to.\n   *\n   * The `UIInjector` can also provide values from the native root/global injector (ng1/ng2).\n   *\n   * If a `state` is provided, the injector that is returned will be limited to resolve values that the provided state has access to.\n   *\n   * @param state Limits the resolves provided to only the resolves the provided state has access to.\n   * @returns a [[UIInjector]]\n   */\n  injector(state?: StateOrName): UIInjector {\n    let path: PathNode[] = this.treeChanges().to;\n    if (state) path = PathFactory.subPath(path, node => node.state === state || node.state.name === state);\n    return new ResolveContext(path).injector();\n  }\n\n  /**\n   * Gets all available resolve tokens (keys)\n   *\n   * This method can be used in conjunction with [[getResolve]] to inspect the resolve values\n   * available to the Transition.\n   *\n   * The returned tokens include those defined on [[StateDeclaration.resolve]] blocks, for the states\n   * in the Transition's [[TreeChanges.to]] path.\n   *\n   * @returns an array of resolve tokens (keys)\n   */\n  getResolveTokens(): any[] {\n    return new ResolveContext(this._treeChanges.to).getTokens();\n  }\n\n\n  /**\n   * Gets resolved values\n   *\n   * This method can be used in conjunction with [[getResolveTokens]] to inspect what resolve values\n   * are available to the Transition.\n   *\n   * Given a token, returns the resolved data for that token.\n   * Given an array of tokens, returns an array of resolved data for those tokens.\n   *\n   * If a resolvable hasn't yet been fetched, returns `undefined` for that token\n   * If a resolvable doesn't exist for the token, throws an error.\n   *\n   * @param token the token (or array of tokens)\n   *\n   * @returns an array of resolve tokens (keys)\n   */\n  getResolveValue(token: (any|any[])): (any|any[]) {\n    let resolveContext = new ResolveContext(this._treeChanges.to);\n    const getData = (token: any) => {\n      var resolvable = resolveContext.getResolvable(token);\n      if (resolvable === undefined) {\n        throw new Error(`Dependency Injection token not found: ${stringify(token)}`);\n      }\n      return resolvable.data;\n    };\n\n    if (isArray(token)) {\n      return token.map(getData);\n    }\n\n    return getData(token);\n  }\n\n  /**\n   * Gets a [[Resolvable]] primitive\n   *\n   * This is a lower level API that returns a [[Resolvable]] from the Transition for a given token.\n   *\n   * @param token the DI token\n   *\n   * @returns the [[Resolvable]] in the transition's to path, or undefined\n   */\n  getResolvable(token: any): Resolvable {\n    return new ResolveContext(this._treeChanges.to).getResolvable(token);\n  }\n\n  /**\n   * Dynamically adds a new [[Resolvable]] (`resolve`) to this transition.\n   *\n   * @param resolvable an [[Resolvable]] object\n   * @param state the state in the \"to path\" which should receive the new resolve (otherwise, the root state)\n   */\n  addResolvable(resolvable: Resolvable, state: StateOrName = \"\"): void {\n    let stateName: string = (typeof state === \"string\") ? state : state.name;\n    let topath = this._treeChanges.to;\n    let targetNode = find(topath, node => node.state.name === stateName);\n    let resolveContext: ResolveContext = new ResolveContext(topath);\n    resolveContext.addResolvables([resolvable], targetNode.state);\n  }\n\n  /**\n   * If the current transition is a redirect, returns the transition that was redirected.\n   *\n   * Gets the transition from which this transition was redirected.\n   *\n   *\n   * @example\n   * ```js\n   *\n   * let transitionA = $state.go('A').transitionA\n   * transitionA.onStart({}, () => $state.target('B'));\n   * $transitions.onSuccess({ to: 'B' }, (trans) => {\n   *   trans.to().name === 'B'; // true\n   *   trans.redirectedFrom() === transitionA; // true\n   * });\n   * ```\n   *\n   * @returns The previous Transition, or null if this Transition is not the result of a redirection\n   */\n  redirectedFrom(): Transition {\n    return this._options.redirectedFrom || null;\n  }\n\n  /**\n   * Get the transition options\n   *\n   * @returns the options for this Transition.\n   */\n  options(): TransitionOptions {\n    return this._options;\n  }\n\n  /**\n   * Gets the states being entered.\n   *\n   * @returns an array of states that will be entered during this transition.\n   */\n  entering(): StateDeclaration[] {\n    return map(this._treeChanges.entering, prop('state')).map(stateSelf);\n  }\n\n  /**\n   * Gets the states being exited.\n   *\n   * @returns an array of states that will be exited during this transition.\n   */\n  exiting(): StateDeclaration[] {\n    return map(this._treeChanges.exiting, prop('state')).map(stateSelf).reverse();\n  }\n\n  /**\n   * Gets the states being retained.\n   *\n   * @returns an array of states that are already entered from a previous Transition, that will not be\n   *    exited during this Transition\n   */\n  retained(): StateDeclaration[] {\n    return map(this._treeChanges.retained, prop('state')).map(stateSelf);\n  }\n\n  /**\n   * Get the [[ViewConfig]]s associated with this Transition\n   *\n   * Each state can define one or more views (template/controller), which are encapsulated as `ViewConfig` objects.\n   * This method fetches the `ViewConfigs` for a given path in the Transition (e.g., \"to\" or \"entering\").\n   *\n   * @param pathname the name of the path to fetch views for:\n   *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n   * @param state If provided, only returns the `ViewConfig`s for a single state in the path\n   *\n   * @returns a list of ViewConfig objects for the given path.\n   */\n  views(pathname: string = \"entering\", state?: State): ViewConfig[] {\n    let path = this._treeChanges[pathname];\n    path = !state ? path : path.filter(propEq('state', state));\n    return path.map(prop(\"views\")).filter(identity).reduce(unnestR, []);\n  }\n\n  treeChanges = () => this._treeChanges;\n\n  /**\n   * Creates a new transition that is a redirection of the current one.\n   *\n   * This transition can be returned from a [[TransitionService]] hook to\n   * redirect a transition to a new state and/or set of parameters.\n   *\n   * @returns Returns a new [[Transition]] instance.\n   */\n  redirect(targetState: TargetState): Transition {\n    let newOptions = extend({}, this.options(), targetState.options(), { redirectedFrom: this, source: \"redirect\" });\n    targetState = new TargetState(targetState.identifier(), targetState.$state(), targetState.params(), newOptions);\n\n    let newTransition = this.router.transitionService.create(this._treeChanges.from, targetState);\n    let originalEnteringNodes = this.treeChanges().entering;\n    let redirectEnteringNodes = newTransition.treeChanges().entering;\n\n    // --- Re-use resolve data from original transition ---\n    // When redirecting from a parent state to a child state where the parent parameter values haven't changed\n    // (because of the redirect), the resolves fetched by the original transition are still valid in the\n    // redirected transition.\n    //\n    // This allows you to define a redirect on a parent state which depends on an async resolve value.\n    // You can wait for the resolve, then redirect to a child state based on the result.\n    // The redirected transition does not have to re-fetch the resolve.\n    // ---------------------------------------------------------\n\n    const nodeIsReloading = (reloadState: State) => (node: PathNode) => {\n      return reloadState && node.state.includes[reloadState.name];\n    };\n\n    // Find any \"entering\" nodes in the redirect path that match the original path and aren't being reloaded\n    let matchingEnteringNodes: PathNode[] = PathNode.matching(redirectEnteringNodes, originalEnteringNodes)\n        .filter(not(nodeIsReloading(targetState.options().reloadState)));\n\n    // Use the existing (possibly pre-resolved) resolvables for the matching entering nodes.\n    matchingEnteringNodes.forEach((node, idx) => {\n      node.resolvables = originalEnteringNodes[idx].resolvables;\n    });\n\n    return newTransition;\n  }\n\n  /** @hidden If a transition doesn't exit/enter any states, returns any [[Param]] whose value changed */\n  private _changedParams(): Param[] {\n    let {to, from} = this._treeChanges;\n    if (this._options.reload || tail(to).state !== tail(from).state) return undefined;\n\n    let nodeSchemas: Param[][] = to.map((node: PathNode) => node.paramSchema);\n    let [toValues, fromValues] = [to, from].map(path => path.map(x => x.paramValues));\n    let tuples = arrayTuples(nodeSchemas, toValues, fromValues);\n\n    return tuples.map(([schema, toVals, fromVals]) => Param.changed(schema, toVals, fromVals)).reduce(unnestR, []);\n  }\n\n  /**\n   * Returns true if the transition is dynamic.\n   *\n   * A transition is dynamic if no states are entered nor exited, but at least one dynamic parameter has changed.\n   *\n   * @returns true if the Transition is dynamic\n   */\n  dynamic(): boolean {\n    let changes = this._changedParams();\n    return !changes ? false : changes.map(x => x.dynamic).reduce(anyTrueR, false);\n  }\n\n  /**\n   * Returns true if the transition is ignored.\n   *\n   * A transition is ignored if no states are entered nor exited, and no parameter values have changed.\n   *\n   * @returns true if the Transition is ignored.\n   */\n  ignored(): boolean {\n    let changes = this._changedParams();\n    return !changes ? false : changes.length === 0;\n  }\n\n  /**\n   * @hidden\n   */\n  hookBuilder(): HookBuilder {\n    return new HookBuilder(this.router.transitionService, this, <TransitionHookOptions> {\n      transition: this,\n      current: this._options.current\n    });\n  }\n\n  /**\n   * Runs the transition\n   *\n   * This method is generally called from the [[StateService.transitionTo]]\n   *\n   * @returns a promise for a successful transition.\n   */\n  run(): Promise<any> {\n    let runSynchronousHooks = TransitionHook.runSynchronousHooks;\n    let hookBuilder = this.hookBuilder();\n    let globals = <Globals> this.router.globals;\n    globals.transitionHistory.enqueue(this);\n\n    let syncResult = runSynchronousHooks(hookBuilder.getOnBeforeHooks());\n\n    if (Rejection.isTransitionRejectionPromise(syncResult)) {\n      syncResult.catch(() => 0); // issue #2676\n      let rejectReason = (<any> syncResult)._transitionRejection;\n      this._deferred.reject(rejectReason);\n      return this.promise;\n    }\n\n    if (!this.valid()) {\n      let error = new Error(this.error());\n      this._deferred.reject(error);\n      return this.promise;\n    }\n\n    if (this.ignored()) {\n      trace.traceTransitionIgnored(this);\n      this._deferred.reject(Rejection.ignored());\n      return this.promise;\n    }\n\n    // When the chain is complete, then resolve or reject the deferred\n    const transitionSuccess = () => {\n      trace.traceSuccess(this.$to(), this);\n      this.success = true;\n      this._deferred.resolve(this.to());\n      runSynchronousHooks(hookBuilder.getOnSuccessHooks(), true);\n    };\n\n    const transitionError = (reason: any) => {\n      trace.traceError(reason, this);\n      this.success = false;\n      this._deferred.reject(reason);\n      this._error = reason;\n      runSynchronousHooks(hookBuilder.getOnErrorHooks(), true);\n    };\n\n    trace.traceTransitionStart(this);\n\n    // Chain the next hook off the previous\n    const appendHookToChain = (prev: Promise<any>, nextHook: TransitionHook) =>\n        prev.then(() => nextHook.invokeHook());\n\n    // Run the hooks, then resolve or reject the overall deferred in the .then() handler\n    hookBuilder.asyncHooks()\n        .reduce(appendHookToChain, syncResult)\n        .then(transitionSuccess, transitionError);\n\n    return this.promise;\n  }\n\n  isActive = () => this === this._options.current();\n\n  /**\n   * Checks if the Transition is valid\n   *\n   * @returns true if the Transition is valid\n   */\n  valid() {\n    return !this.error() || this.success !== undefined;\n  }\n\n  /**\n   * The Transition error reason.\n   *\n   * If the transition is invalid (and could not be run), returns the reason the transition is invalid.\n   * If the transition was valid and ran, but was not successful, returns the reason the transition failed.\n   *\n   * @returns an error message explaining why the transition is invalid, or the reason the transition failed.\n   */\n  error() {\n    let state: State = this.$to();\n\n    let redirects = 0, trans: Transition = this;\n    while((trans = trans.redirectedFrom()) != null) {\n      if (++redirects > 20) return `Too many Transition redirects (20+)`;\n    }\n\n    if (state.self.abstract)\n      return `Cannot transition to abstract state '${state.name}'`;\n    if (!Param.validates(state.parameters(), this.params()))\n      return `Param values not valid for state '${state.name}'`;\n    if (this.success === false)\n      return this._error;\n  }\n\n  /**\n   * A string representation of the Transition\n   *\n   * @returns A string representation of the Transition\n   */\n  toString () {\n    let fromStateOrName = this.from();\n    let toStateOrName = this.to();\n\n    const avoidEmptyHash = (params: RawParams) =>\n      (params[\"#\"] !== null && params[\"#\"] !== undefined) ? params : omit(params, \"#\");\n\n    // (X) means the to state is invalid.\n    let id = this.$id,\n        from = isObject(fromStateOrName) ? fromStateOrName.name : fromStateOrName,\n        fromParams = toJson(avoidEmptyHash(this._treeChanges.from.map(prop('paramValues')).reduce(mergeR, {}))),\n        toValid = this.valid() ? \"\" : \"(X) \",\n        to = isObject(toStateOrName) ? toStateOrName.name : toStateOrName,\n        toParams = toJson(avoidEmptyHash(this.params()));\n\n    return `Transition#${id}( '${from}'${fromParams} -> ${toValid}'${to}'${toParams} )`;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./transition/transition.ts\n **/","/**\n * UI-Router Transition Tracing\n *\n * Enable transition tracing to print transition information to the console, in order to help debug your application.\n * Tracing logs detailed information about each Transition to your console.\n *\n * To enable tracing, import the [[trace]] singleton and enable one or more categories.\n *\n * ES6\n * ```\n *\n * import {trace} from \"ui-router-ng2\"; // or \"angular-ui-router\"\n * trace.enable(1, 5); // TRANSITION and VIEWCONFIG\n * ```\n *\n * CJS\n * ```\n *\n * let trace = require(\"angular-ui-router\").trace; // or \"ui-router-ng2\"\n * trace.enable(\"TRANSITION\", \"VIEWCONFIG\");\n * ```\n *\n * Globals\n * ```\n *\n * let trace = window[\"angular-ui-router\"].trace; // or \"ui-router-ng2\"\n * trace.enable(); // Trace everything (very verbose)\n * ```\n *\n * @module trace\n */ /** for typedoc */\nimport {parse} from \"../common/hof\";\nimport {isNumber} from \"../common/predicates\";\nimport {Transition}  from \"../transition/transition\";\nimport {ActiveUIView, ViewConfig, ViewContext}  from \"../view/interface\";\nimport {stringify, functionToString, maxLength, padString} from \"./strings\";\nimport {Resolvable} from \"../resolve/resolvable\";\nimport {PathNode} from \"../path/node\";\nimport {PolicyWhen} from \"../resolve/interface\";\nimport {TransitionHook} from \"../transition/transitionHook\";\nimport {HookResult} from \"../transition/interface\";\nimport {State} from \"../state/stateObject\";\n\n/** @hidden */\nfunction uiViewString (viewData: ActiveUIView) {\n    if (!viewData) return 'ui-view (defunct)';\n    return `[ui-view#${viewData.id} tag ` +\n        `in template from '${viewData.creationContext && viewData.creationContext.name || '(root)'}' state]: ` +\n        `fqn: '${viewData.fqn}', ` +\n        `name: '${viewData.name}@${viewData.creationContext}')`;\n}\n\n/** @hidden */\nconst viewConfigString = (viewConfig: ViewConfig) =>\n    `[ViewConfig#${viewConfig.$id} from '${viewConfig.viewDecl.$context.name || '(root)'}' state]: target ui-view: '${viewConfig.viewDecl.$uiViewName}@${viewConfig.viewDecl.$uiViewContextAnchor}'`;\n\n/** @hidden */\nfunction normalizedCat(input: Category|string): string {\n  return isNumber(input) ? Category[input] : Category[Category[input]];\n}\n\n\n/**\n * Trace categories\n *\n * [[Trace.enable]] or [[Trace.disable]] a category\n *\n * `trace.enable(Category.TRANSITION)`\n *\n * These can also be provided using a matching string, or position ordinal\n *\n * `trace.enable(\"TRANSITION\")`\n *\n * `trace.enable(1)`\n */\nexport enum Category {\n  RESOLVE, TRANSITION, HOOK, UIVIEW, VIEWCONFIG\n}\n\n/**\n * Prints UI-Router Transition trace information to the console.\n */\nexport class Trace {\n  approximateDigests: number;\n\n  constructor() {\n    this.approximateDigests = 0;\n  }\n\n  /** @hidden */\n  private _enabled: { [key: string]: boolean } = {};\n\n   /** @hidden */\n  private _set(enabled: boolean, categories: Category[]) {\n    if (!categories.length) {\n      categories = <any> Object.keys(Category)\n          .map(k => parseInt(k, 10))\n          .filter(k => !isNaN(k))\n          .map(key => Category[key]);\n    }\n    categories.map(normalizedCat).forEach(category => this._enabled[category] = enabled);\n  }\n\n  /**\n   * Enables a trace [[Category]]\n   *\n   * ```\n   * trace.enable(\"TRANSITION\");\n   * ```\n   *\n   * @param categories categories to enable. If `categories` is omitted, all categories are enabled.\n   *        Also takes strings (category name) or ordinal (category position)\n   */\n  enable(...categories: Category[]) { this._set(true, categories) }\n  /**\n   * Disables a trace [[Category]]\n   *\n   * ```\n   * trace.disable(\"VIEWCONFIG\");\n   * ```\n   *\n   * @param categories categories to disable. If `categories` is omitted, all categories are disabled.\n   *        Also takes strings (category name) or ordinal (category position)\n   */\n  disable(...categories: Category[]) { this._set(false, categories) }\n\n  /**\n   * Retrieves the enabled stateus of a [[Category]]\n   *\n   * ```\n   * trace.enabled(\"VIEWCONFIG\"); // true or false\n   * ```\n   *\n   * @returns boolean true if the category is enabled\n   */\n  enabled(category: Category): boolean {\n    return !!this._enabled[normalizedCat(category)];\n  }\n\n  /** called by ui-router code */\n  traceTransitionStart(transition: Transition) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    let tid = transition.$id,\n        digest = this.approximateDigests,\n        transitionStr = stringify(transition);\n    console.log(`Transition #${tid} Digest #${digest}: Started  -> ${transitionStr}`);\n  }\n\n  /** called by ui-router code */\n  traceTransitionIgnored(trans: Transition) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    let tid = trans && trans.$id,\n        digest = this.approximateDigests,\n        transitionStr = stringify(trans);\n    console.log(`Transition #${tid} Digest #${digest}: Ignored  <> ${transitionStr}`);\n  }\n\n  /** called by ui-router code */\n  traceHookInvocation(step: TransitionHook, options: any) {\n    if (!this.enabled(Category.HOOK)) return;\n    let tid = parse(\"transition.$id\")(options),\n        digest = this.approximateDigests,\n        event = parse(\"traceData.hookType\")(options) || \"internal\",\n        context = parse(\"traceData.context.state.name\")(options) || parse(\"traceData.context\")(options) || \"unknown\",\n        name = functionToString((step as any).eventHook.callback);\n    console.log(`Transition #${tid} Digest #${digest}:   Hook -> ${event} context: ${context}, ${maxLength(200, name)}`);\n  }\n\n  /** called by ui-router code */\n  traceHookResult(hookResult: HookResult, transitionOptions: any) {\n    if (!this.enabled(Category.HOOK)) return;\n    let tid = parse(\"transition.$id\")(transitionOptions),\n        digest = this.approximateDigests,\n        hookResultStr = stringify(hookResult);\n    console.log(`Transition #${tid} Digest #${digest}:   <- Hook returned: ${maxLength(200, hookResultStr)}`);\n  }\n\n  /** called by ui-router code */\n  traceResolvePath(path: PathNode[], when: PolicyWhen, trans?: Transition) {\n    if (!this.enabled(Category.RESOLVE)) return;\n    let tid = trans && trans.$id,\n        digest = this.approximateDigests,\n        pathStr = path && path.toString();\n    console.log(`Transition #${tid} Digest #${digest}:         Resolving ${pathStr} (${when})`);\n  }\n\n  /** called by ui-router code */\n  traceResolvableResolved(resolvable: Resolvable, trans?: Transition) {\n    if (!this.enabled(Category.RESOLVE)) return;\n    let tid = trans && trans.$id,\n        digest = this.approximateDigests,\n        resolvableStr = resolvable && resolvable.toString(),\n        result = stringify(resolvable.data);\n    console.log(`Transition #${tid} Digest #${digest}:               <- Resolved  ${resolvableStr} to: ${maxLength(200, result)}`);\n  }\n\n  /** called by ui-router code */\n  traceError(reason: any, trans: Transition) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    let tid = trans && trans.$id,\n        digest = this.approximateDigests,\n        transitionStr = stringify(trans);\n    console.log(`Transition #${tid} Digest #${digest}: <- Rejected ${transitionStr}, reason: ${reason}`);\n  }\n\n  /** called by ui-router code */\n  traceSuccess(finalState: State, trans: Transition) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    let tid = trans && trans.$id,\n        digest = this.approximateDigests,\n        state = finalState.name,\n        transitionStr = stringify(trans);\n    console.log(`Transition #${tid} Digest #${digest}: <- Success  ${transitionStr}, final state: ${state}`);\n  }\n\n  /** called by ui-router code */\n  traceUIViewEvent(event: string, viewData: ActiveUIView, extra = \"\") {\n    if (!this.enabled(Category.UIVIEW)) return;\n    console.log(`ui-view: ${padString(30, event)} ${uiViewString(viewData)}${extra}`);\n  }\n\n  /** called by ui-router code */\n  traceUIViewConfigUpdated(viewData: ActiveUIView, context: ViewContext) {\n    if (!this.enabled(Category.UIVIEW)) return;\n    this.traceUIViewEvent(\"Updating\", viewData, ` with ViewConfig from context='${context}'`);\n  }\n\n  /** called by ui-router code */\n  traceUIViewFill(viewData: ActiveUIView, html: string) {\n    if (!this.enabled(Category.UIVIEW)) return;\n    this.traceUIViewEvent(\"Fill\", viewData, ` with: ${maxLength(200, html)}`);\n  }\n\n  /** called by ui-router code */\n  traceViewServiceEvent(event: string, viewConfig: ViewConfig) {\n    if (!this.enabled(Category.VIEWCONFIG)) return;\n    console.log(`VIEWCONFIG: ${event} ${viewConfigString(viewConfig)}`);\n  }\n\n  /** called by ui-router code */\n  traceViewServiceUIViewEvent(event: string, viewData: ActiveUIView) {\n    if (!this.enabled(Category.VIEWCONFIG)) return;\n    console.log(`VIEWCONFIG: ${event} ${uiViewString(viewData)}`);\n  }\n}\n\n/**\n * The [[Trace]] singleton\n *\n * @example\n * ```js\n *\n * import {trace} from \"angular-ui-router\";\n * trace.enable(1, 5);\n * ```\n */\nlet trace = new Trace();\nexport {trace};\n\n\n\n/** WEBPACK FOOTER **\n ** ./common/trace.ts\n **/","/** @module transition */ /** for typedoc */\nimport {TransitionHookOptions, IEventHook, HookResult} from \"./interface\";\nimport {defaults, noop} from \"../common/common\";\nimport {fnToString, maxLength} from \"../common/strings\";\nimport {isPromise} from \"../common/predicates\";\nimport {val, is, parse } from \"../common/hof\";\nimport {trace} from \"../common/trace\";\nimport {services} from \"../common/coreservices\";\n\nimport {Rejection} from \"./rejectFactory\";\nimport {TargetState} from \"../state/targetState\";\nimport {Transition} from \"./transition\";\nimport {State} from \"../state/stateObject\";\n\nlet defaultOptions: TransitionHookOptions = {\n  async: true,\n  rejectIfSuperseded: true,\n  current: noop,\n  transition: null,\n  traceData: {},\n  bind: null\n};\n\n/** @hidden */\nexport class TransitionHook {\n  constructor(private transition: Transition,\n              private stateContext: State,\n              private eventHook: IEventHook,\n              private options: TransitionHookOptions) {\n    this.options = defaults(options, defaultOptions);\n  }\n\n  private isSuperseded = () =>\n    this.options.current() !== this.options.transition;\n\n  invokeHook(): Promise<HookResult> {\n    let { options, eventHook } = this;\n    trace.traceHookInvocation(this, options);\n    if (options.rejectIfSuperseded && this.isSuperseded()) {\n      return Rejection.superseded(options.current()).toPromise();\n    }\n\n    let synchronousHookResult = !eventHook._deregistered\n      ? eventHook.callback.call(options.bind, this.transition, this.stateContext)\n      : undefined;\n\n    return this.handleHookResult(synchronousHookResult);\n  }\n\n  /**\n   * This method handles the return value of a Transition Hook.\n   *\n   * A hook can return false (cancel), a TargetState (redirect),\n   * or a promise (which may later resolve to false or a redirect)\n   *\n   * This also handles \"transition superseded\" -- when a new transition\n   * was started while the hook was still running\n   */\n  handleHookResult(result: HookResult): Promise<any> {\n    // This transition is no longer current.\n    // Another transition started while this hook was still running.\n    if (this.isSuperseded()) {\n      // Abort this transition\n      return Rejection.superseded(this.options.current()).toPromise();\n    }\n\n    // Hook returned a promise\n    if (isPromise(result)) {\n      // Wait for the promise, then reprocess the resolved value\n      return result.then(this.handleHookResult.bind(this));\n    }\n\n    trace.traceHookResult(result, this.options);\n\n    // Hook returned false\n    if (result === false) {\n      // Abort this Transition\n      return Rejection.aborted(\"Hook aborted transition\").toPromise();\n    }\n\n    const isTargetState = is(TargetState);\n    // hook returned a TargetState\n    if (isTargetState(result)) {\n      // Halt the current Transition and start a redirected Transition (to the TargetState).\n      return Rejection.redirected(result).toPromise();\n    }\n  }\n\n  toString() {\n    let { options, eventHook } = this;\n    let event = parse(\"traceData.hookType\")(options) || \"internal\",\n        context = parse(\"traceData.context.state.name\")(options) || parse(\"traceData.context\")(options) || \"unknown\",\n        name = fnToString(eventHook.callback);\n    return `${event} context: ${context}, ${maxLength(200, name)}`;\n  }\n\n\n  /**\n   * Given an array of TransitionHooks, runs each one synchronously and sequentially.\n   *\n   * Returns a promise chain composed of any promises returned from each hook.invokeStep() call\n   */\n  static runSynchronousHooks(hooks: TransitionHook[], swallowExceptions: boolean = false): Promise<any> {\n    let results: Promise<HookResult>[] = [];\n    for (let i = 0; i < hooks.length; i++) {\n      let hook = hooks[i];\n      try {\n        results.push(hook.invokeHook());\n      } catch (exception) {\n        if (!swallowExceptions) {\n          return Rejection.errored(exception).toPromise();\n        }\n\n        let errorHandler = hook.transition.router.stateService.defaultErrorHandler();\n        errorHandler(exception);\n      }\n    }\n\n    let rejections = results.filter(Rejection.isTransitionRejectionPromise);\n    if (rejections.length) return rejections[0];\n\n    return results\n        .filter(isPromise)\n        .reduce((chain: Promise<any>, promise: Promise<any>) => chain.then(val(promise)), services.$q.when());\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./transition/transitionHook.ts\n **/","/** @module state */ /** for typedoc */\n\nimport {StateDeclaration, StateOrName} from \"./interface\";\nimport {ParamsOrArray} from \"../params/interface\";\nimport {TransitionOptions} from \"../transition/interface\";\n\nimport {State} from \"./stateObject\";\nimport {toJson} from \"../common/common\";\n\n/**\n * @ngdoc object\n * @name ui.router.state.type:TargetState\n *\n * @description\n * Encapsulate the desired target of a transition.\n * Wraps an identifier for a state, a set of parameters, and transition options with the definition of the state.\n *\n * @param {StateOrName} _identifier  An identifier for a state. Either a fully-qualified path, or the object\n *            used to define the state.\n * @param {IState} _definition The `State` object definition.\n * @param {ParamsOrArray} _params Parameters for the target state\n * @param {TransitionOptions} _options Transition options.\n */\nexport class TargetState {\n  private _params: ParamsOrArray;\n\n  constructor(\n    private _identifier: StateOrName,\n    private _definition?: State,\n    _params: ParamsOrArray = {},\n    private _options: TransitionOptions = {}\n  ) {\n    this._params = _params || {};\n  }\n\n  name() {\n    return this._definition && this._definition.name || this._identifier;\n  }\n\n  identifier(): StateOrName {\n    return this._identifier;\n  }\n\n  params(): ParamsOrArray {\n    return this._params;\n  }\n\n  $state(): State {\n    return this._definition;\n  }\n\n  state(): StateDeclaration {\n    return this._definition && this._definition.self;\n  }\n\n  options() {\n    return this._options;\n  }\n\n  exists(): boolean {\n    return !!(this._definition && this._definition.self);\n  }\n\n  valid(): boolean {\n    return !this.error();\n  }\n\n  error(): string {\n    let base = <any> this.options().relative;\n    if (!this._definition && !!base) {\n      let stateName = base.name ? base.name : base;\n      return `Could not resolve '${this.name()}' from state '${stateName}'`;\n    }\n    if (!this._definition)\n      return `No such state '${this.name()}'`;\n    if (!this._definition.self)\n      return `State '${this.name()}' has an invalid definition`;\n  }\n\n  toString() {\n    return `'${this.name()}'${toJson(this.params())}`;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./state/targetState.ts\n **/","/** @module transition */ /** for typedoc */\nimport {extend, removeFrom, allTrueR, tail} from \"../common/common\";\nimport {isString, isFunction} from \"../common/predicates\";\nimport {PathNode} from \"../path/node\";\nimport {TransitionStateHookFn, TransitionHookFn} from \"./interface\"; // has or is using\n\nimport {\n    HookRegOptions, HookMatchCriteria, IEventHook, IHookRegistry, IHookRegistration, TreeChanges,\n    HookMatchCriterion, IMatchingNodes, HookFn\n} from \"./interface\";\nimport {Glob} from \"../common/glob\";\nimport {State} from \"../state/stateObject\";\n\n/**\n * Determines if the given state matches the matchCriteria\n *\n * @hidden\n *\n * @param state a State Object to test against\n * @param criterion\n * - If a string, matchState uses the string as a glob-matcher against the state name\n * - If an array (of strings), matchState uses each string in the array as a glob-matchers against the state name\n *   and returns a positive match if any of the globs match.\n * - If a function, matchState calls the function with the state and returns true if the function's result is truthy.\n * @returns {boolean}\n */\nexport function matchState(state: State, criterion: HookMatchCriterion) {\n  let toMatch = isString(criterion) ? [criterion] : criterion;\n\n  function matchGlobs(_state: State) {\n    let globStrings = <string[]> toMatch;\n    for (let i = 0; i < globStrings.length; i++) {\n      let glob = Glob.fromString(globStrings[i]);\n\n      if ((glob && glob.matches(_state.name)) || (!glob && globStrings[i] === _state.name)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  let matchFn = <any> (isFunction(toMatch) ? toMatch : matchGlobs);\n  return !!matchFn(state);\n}\n\n/** @hidden */\nexport class EventHook implements IEventHook {\n  callback: HookFn;\n  matchCriteria: HookMatchCriteria;\n  priority: number;\n  bind: any;\n  _deregistered: boolean;\n\n  constructor(matchCriteria: HookMatchCriteria, callback: HookFn, options: HookRegOptions = <any>{}) {\n    this.callback = callback;\n    this.matchCriteria = extend({ to: true, from: true, exiting: true, retained: true, entering: true }, matchCriteria);\n    this.priority = options.priority || 0;\n    this.bind = options.bind || null;\n    this._deregistered = false;\n  }\n\n  private static _matchingNodes(nodes: PathNode[], criterion: HookMatchCriterion): PathNode[] {\n    if (criterion === true) return nodes;\n    let matching = nodes.filter(node => matchState(node.state, criterion));\n    return matching.length ? matching : null;\n  }\n\n  /**\n   * Determines if this hook's [[matchCriteria]] match the given [[TreeChanges]]\n   *\n   * @returns an IMatchingNodes object, or null. If an IMatchingNodes object is returned, its values\n   * are the matching [[PathNode]]s for each [[HookMatchCriterion]] (to, from, exiting, retained, entering)\n   */\n  matches(treeChanges: TreeChanges): IMatchingNodes {\n    let mc = this.matchCriteria, _matchingNodes = EventHook._matchingNodes;\n\n    let matches: IMatchingNodes = {\n      to: _matchingNodes([tail(treeChanges.to)], mc.to),\n      from: _matchingNodes([tail(treeChanges.from)], mc.from),\n      exiting: _matchingNodes(treeChanges.exiting, mc.exiting),\n      retained: _matchingNodes(treeChanges.retained, mc.retained),\n      entering: _matchingNodes(treeChanges.entering, mc.entering),\n    };\n\n    // Check if all the criteria matched the TreeChanges object\n    let allMatched: boolean = [\"to\", \"from\", \"exiting\", \"retained\", \"entering\"]\n        .map(prop => matches[prop])\n        .reduce(allTrueR, true);\n\n    return allMatched ? matches : null;\n  }\n}\n\n/** @hidden */\ninterface ITransitionEvents { [key: string]: IEventHook[]; }\n\n/** @hidden Return a registration function of the requested type. */\nfunction makeHookRegistrationFn(hooks: ITransitionEvents, name: string): IHookRegistration {\n  return function (matchObject, callback, options = {}) {\n    let eventHook = new EventHook(matchObject, callback, options);\n    hooks[name].push(eventHook);\n\n    return function deregisterEventHook() {\n      eventHook._deregistered = true;\n      removeFrom(hooks[name])(eventHook);\n    };\n  };\n}\n\n/**\n * Mixin class acts as a Transition Hook registry.\n *\n * Holds the registered [[HookFn]] objects.\n * Exposes functions to register new hooks.\n *\n * This is a Mixin class which can be applied to other objects.\n *\n * The hook registration functions are [[onBefore]], [[onStart]], [[onEnter]], [[onRetain]], [[onExit]], [[onFinish]], [[onSuccess]], [[onError]].\n *\n * This class is mixed into both the [[TransitionService]] and every [[Transition]] object.\n * Global hooks are added to the [[TransitionService]].\n * Since each [[Transition]] is itself a `HookRegistry`, hooks can also be added to individual Transitions\n * (note: the hook criteria still must match the Transition).\n */\nexport class HookRegistry implements IHookRegistry {\n  static mixin(source: HookRegistry, target: IHookRegistry) {\n    Object.keys(source._transitionEvents).concat([\"getHooks\"]).forEach(key => target[key] = source[key]);\n  }\n\n  private _transitionEvents: ITransitionEvents = {\n    onBefore: [], onStart: [], onEnter: [], onRetain: [], onExit: [], onFinish: [], onSuccess: [], onError: []\n  };\n\n  getHooks = (name: string) => this._transitionEvents[name];\n\n  /** @inheritdoc */\n  onBefore  = makeHookRegistrationFn(this._transitionEvents, \"onBefore\");\n  /** @inheritdoc */\n  onStart   = makeHookRegistrationFn(this._transitionEvents, \"onStart\");\n  /** @inheritdoc */\n  onEnter   = makeHookRegistrationFn(this._transitionEvents, \"onEnter\");\n  /** @inheritdoc */\n  onRetain  = makeHookRegistrationFn(this._transitionEvents, \"onRetain\");\n  /** @inheritdoc */\n  onExit    = makeHookRegistrationFn(this._transitionEvents, \"onExit\");\n  /** @inheritdoc */\n  onFinish  = makeHookRegistrationFn(this._transitionEvents, \"onFinish\");\n  /** @inheritdoc */\n  onSuccess = makeHookRegistrationFn(this._transitionEvents, \"onSuccess\");\n  /** @inheritdoc */\n  onError   = makeHookRegistrationFn(this._transitionEvents, \"onError\");\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./transition/hookRegistry.ts\n **/","/** @module transition */ /** for typedoc */\n\nimport {extend, tail, assertPredicate, unnestR, identity} from \"../common/common\";\nimport {isArray} from \"../common/predicates\";\n\nimport {TransitionOptions, TransitionHookOptions, IHookRegistry, TreeChanges, IEventHook, IMatchingNodes} from \"./interface\";\n\nimport {Transition} from \"./transition\";\nimport {TransitionHook} from \"./transitionHook\";\nimport {State} from \"../state/stateObject\";\nimport {PathNode} from \"../path/node\";\nimport {TransitionService} from \"./transitionService\";\nimport {ResolveContext} from \"../resolve/resolveContext\";\n\n/**\n * This class returns applicable TransitionHooks for a specific Transition instance.\n *\n * Hooks (IEventHook) may be registered globally, e.g., $transitions.onEnter(...), or locally, e.g.\n * myTransition.onEnter(...).  The HookBuilder finds matching IEventHooks (where the match criteria is\n * determined by the type of hook)\n *\n * The HookBuilder also converts IEventHooks objects to TransitionHook objects, which are used to run a Transition.\n *\n * The HookBuilder constructor is given the $transitions service and a Transition instance.  Thus, a HookBuilder\n * instance may only be used for one specific Transition object. (side note: the _treeChanges accessor is private\n * in the Transition class, so we must also provide the Transition's _treeChanges)\n *\n */\nexport class HookBuilder {\n\n  treeChanges: TreeChanges;\n  transitionOptions: TransitionOptions;\n\n  toState: State;\n  fromState: State;\n\n  constructor(private $transitions: TransitionService, private transition: Transition, private baseHookOptions: TransitionHookOptions) {\n    this.treeChanges        = transition.treeChanges();\n    this.toState            = tail(this.treeChanges.to).state;\n    this.fromState          = tail(this.treeChanges.from).state;\n    this.transitionOptions  = transition.options();\n  }\n\n  getOnBeforeHooks  = () => this._buildNodeHooks(\"onBefore\",  \"to\",       tupleSort(), { async: false });\n  getOnStartHooks   = () => this._buildNodeHooks(\"onStart\",   \"to\",       tupleSort());\n  getOnExitHooks    = () => this._buildNodeHooks(\"onExit\",    \"exiting\",  tupleSort(true),  { stateHook: true });\n  getOnRetainHooks  = () => this._buildNodeHooks(\"onRetain\",  \"retained\", tupleSort(false), { stateHook: true });\n  getOnEnterHooks   = () => this._buildNodeHooks(\"onEnter\",   \"entering\", tupleSort(false), { stateHook: true });\n  getOnFinishHooks  = () => this._buildNodeHooks(\"onFinish\",  \"to\",       tupleSort());\n  getOnSuccessHooks = () => this._buildNodeHooks(\"onSuccess\", \"to\",       tupleSort(), { async: false, rejectIfSuperseded: false });\n  getOnErrorHooks   = () => this._buildNodeHooks(\"onError\",   \"to\",       tupleSort(), { async: false, rejectIfSuperseded: false });\n\n  asyncHooks() {\n    let onStartHooks    = this.getOnStartHooks();\n    let onExitHooks     = this.getOnExitHooks();\n    let onRetainHooks   = this.getOnRetainHooks();\n    let onEnterHooks    = this.getOnEnterHooks();\n    let onFinishHooks   = this.getOnFinishHooks();\n\n    let asyncHooks = [onStartHooks, onExitHooks, onRetainHooks, onEnterHooks, onFinishHooks];\n    return asyncHooks.reduce(unnestR, []).filter(identity);\n  }\n\n  /**\n   * Returns an array of newly built TransitionHook objects.\n   *\n   * - Finds all IEventHooks registered for the given `hookType` which matched the transition's [[TreeChanges]].\n   * - Finds [[PathNode]] (or `PathNode[]`) to use as the TransitionHook context(s)\n   * - For each of the [[PathNode]]s, creates a TransitionHook\n   *\n   * @param hookType the name of the hook registration function, e.g., 'onEnter', 'onFinish'.\n   * @param matchingNodesProp selects which [[PathNode]]s from the [[IMatchingNodes]] object to create hooks for.\n   * @param getLocals a function which accepts a [[PathNode]] and returns additional locals to provide to the hook as injectables\n   * @param sortHooksFn a function which compares two HookTuple and returns <1, 0, or >1\n   * @param options any specific Transition Hook Options\n   */\n  private _buildNodeHooks(hookType: string,\n                          matchingNodesProp: string,\n                          sortHooksFn: (l: HookTuple, r: HookTuple) => number,\n                          options?: TransitionHookOptions): TransitionHook[] {\n\n    // Find all the matching registered hooks for a given hook type\n    let matchingHooks = this._matchingHooks(hookType, this.treeChanges);\n    if (!matchingHooks) return [];\n\n     const makeTransitionHooks = (hook: IEventHook) => {\n       // Fetch the Nodes that caused this hook to match.\n       let matches: IMatchingNodes = hook.matches(this.treeChanges);\n       // Select the PathNode[] that will be used as TransitionHook context objects\n       let matchingNodes: PathNode[] = matches[matchingNodesProp];\n\n       // When invoking 'exiting' hooks, give them the \"from path\" for resolve data.\n       // Everything else gets the \"to path\"\n       let resolvePath = matchingNodesProp === 'exiting' ? this.treeChanges.from : this.treeChanges.to;\n       let resolveContext = new ResolveContext(resolvePath);\n\n       // Return an array of HookTuples\n       return matchingNodes.map(node => {\n         let _options = extend({ bind: hook.bind, traceData: { hookType, context: node} }, this.baseHookOptions, options);\n         let state = _options.stateHook ? node.state : null;\n         let transitionHook = new TransitionHook(this.transition, state, hook, _options);\n         return <HookTuple> { hook, node, transitionHook };\n       });\n    };\n\n    return matchingHooks.map(makeTransitionHooks)\n        .reduce(unnestR, [])\n        .sort(sortHooksFn)\n        .map(tuple => tuple.transitionHook);\n  }\n\n  /**\n   * Finds all IEventHooks from:\n   * - The Transition object instance hook registry\n   * - The TransitionService ($transitions) global hook registry\n   *\n   * which matched:\n   * - the eventType\n   * - the matchCriteria (to, from, exiting, retained, entering)\n   *\n   * @returns an array of matched [[IEventHook]]s\n   */\n  private _matchingHooks(hookName: string, treeChanges: TreeChanges): IEventHook[] {\n    return [ this.transition, this.$transitions ]                             // Instance and Global hook registries\n        .map((reg: IHookRegistry) => reg.getHooks(hookName))                  // Get named hooks from registries\n        .filter(assertPredicate(isArray, `broken event named: ${hookName}`))  // Sanity check\n        .reduce(unnestR, [])                                                  // Un-nest IEventHook[][] to IEventHook[] array\n        .filter(hook => hook.matches(treeChanges));                           // Only those satisfying matchCriteria\n  }\n}\n\ninterface HookTuple { hook: IEventHook, node: PathNode, transitionHook: TransitionHook }\n\n/**\n * A factory for a sort function for HookTuples.\n *\n * The sort function first compares the PathNode depth (how deep in the state tree a node is), then compares\n * the EventHook priority.\n *\n * @param reverseDepthSort a boolean, when true, reverses the sort order for the node depth\n * @returns a tuple sort function\n */\nfunction tupleSort(reverseDepthSort = false) {\n  return function nodeDepthThenPriority(l: HookTuple, r: HookTuple): number {\n    let factor = reverseDepthSort ? -1 : 1;\n    let depthDelta = (l.node.state.path.length - r.node.state.path.length) * factor;\n    return depthDelta !== 0 ? depthDelta : r.hook.priority - l.hook.priority;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./transition/hookBuilder.ts\n **/","/** @module resolve */ /** for typedoc */\nimport { find, tail, uniqR, unnestR, inArray } from \"../common/common\";\nimport {propEq} from \"../common/hof\";\nimport {trace} from \"../common/trace\";\nimport {services, $InjectorLike} from \"../common/coreservices\";\nimport {resolvePolicies, PolicyWhen} from \"./interface\";\n\nimport {PathNode} from \"../path/node\";\nimport {Resolvable} from \"./resolvable\";\nimport {State} from \"../state/stateObject\";\nimport {PathFactory} from \"../path/pathFactory\";\nimport {stringify} from \"../common/strings\";\nimport {Transition} from \"../transition/transition\";\nimport {UIInjector} from \"../common/interface\";\n\nconst when = resolvePolicies.when;\nconst ALL_WHENS = [when.EAGER, when.LAZY];\nconst EAGER_WHENS = [when.EAGER];\n\nexport const NATIVE_INJECTOR_TOKEN = \"Native Injector\";\n\n/**\n * Encapsulates Depenency Injection for a path of nodes\n *\n * UI-Router states are organized as a tree.\n * A nested state has a path of ancestors to the root of the tree.\n * When a state is being activated, each element in the path is wrapped as a [[PathNode]].\n * A `PathNode` is a stateful object that holds things like parameters and resolvables for the state being activated.\n *\n * The ResolveContext closes over the [[PathNode]]s, and provides DI for the last node in the path.\n */\nexport class ResolveContext {\n  _injector: UIInjector;\n\n  constructor(private _path: PathNode[]) { }\n\n  /** Gets all the tokens found in the resolve context, de-duplicated */\n  getTokens(): any[] {\n    return this._path.reduce((acc, node) => acc.concat(node.resolvables.map(r => r.token)), []).reduce(uniqR, []);\n  }\n\n  /**\n   * Gets the Resolvable that matches the token\n   *\n   * Gets the last Resolvable that matches the token in this context, or undefined.\n   * Throws an error if it doesn't exist in the ResolveContext\n   */\n  getResolvable(token: any): Resolvable {\n    var matching = this._path.map(node => node.resolvables)\n        .reduce(unnestR, [])\n        .filter((r: Resolvable) => r.token === token);\n    return tail(matching);\n  }\n\n  /**\n   * Returns a ResolveContext that includes a portion of this one\n   *\n   * Given a state, this method creates a new ResolveContext from this one.\n   * The new context starts at the first node (root) and stops at the node for the `state` parameter.\n   *\n   * #### Why\n   *\n   * When a transition is created, the nodes in the \"To Path\" are injected from a ResolveContext.\n   * A ResolveContext closes over a path of [[PathNode]]s and processes the resolvables.\n   * The \"To State\" can inject values from its own resolvables, as well as those from all its ancestor state's (node's).\n   * This method is used to create a narrower context when injecting ancestor nodes.\n   *\n   * @example\n   * `let ABCD = new ResolveContext([A, B, C, D]);`\n   *\n   * Given a path `[A, B, C, D]`, where `A`, `B`, `C` and `D` are nodes for states `a`, `b`, `c`, `d`:\n   * When injecting `D`, `D` should have access to all resolvables from `A`, `B`, `C`, `D`.\n   * However, `B` should only be able to access resolvables from `A`, `B`.\n   *\n   * When resolving for the `B` node, first take the full \"To Path\" Context `[A,B,C,D]` and limit to the subpath `[A,B]`.\n   * `let AB = ABCD.subcontext(a)`\n   */\n  subContext(state: State): ResolveContext {\n    return new ResolveContext(PathFactory.subPath(this._path, node => node.state === state));\n  }\n\n  /**\n   * Adds Resolvables to the node that matches the state\n   *\n   * This adds a [[Resolvable]] (generally one created on the fly; not declared on a [[StateDeclaration.resolve]] block).\n   * The resolvable is added to the node matching the `state` parameter.\n   *\n   * These new resolvables are not automatically fetched.\n   * The calling code should either fetch them, fetch something that depends on them,\n   * or rely on [[resolvePath]] being called when some state is being entered.\n   *\n   * Note: each resolvable's [[ResolvePolicy]] is merged with the state's policy, and the global default.\n   *\n   * @param newResolvables the new Resolvables\n   * @param state Used to find the node to put the resolvable on\n   */\n  addResolvables(newResolvables: Resolvable[], state: State) {\n    var node = <PathNode> find(this._path, propEq('state', state));\n    var keys = newResolvables.map(r => r.token);\n    node.resolvables = node.resolvables.filter(r => keys.indexOf(r.token) === -1).concat(newResolvables);\n  }\n  \n  /**\n   * Returns a promise for an array of resolved path Element promises\n   *\n   * @param when\n   * @param trans\n   * @returns {Promise<any>|any}\n   */\n  resolvePath(when: PolicyWhen = \"LAZY\", trans?: Transition): Promise<{ token: any, value: any }[]> {\n    // This option determines which 'when' policy Resolvables we are about to fetch.\n    let whenOption: string = inArray(ALL_WHENS, when) ? when : \"LAZY\";\n    // If the caller specified EAGER, only the EAGER Resolvables are fetched.\n    // if the caller specified LAZY, both EAGER and LAZY Resolvables are fetched.`\n    let matchedWhens = whenOption === resolvePolicies.when.EAGER ? EAGER_WHENS : ALL_WHENS;\n    \n    // get the subpath to the state argument, if provided\n    trace.traceResolvePath(this._path, when, trans);\n\n    let promises: Promise<any>[] = this._path.reduce((acc, node) => {\n      const matchesRequestedPolicy = (resolvable: Resolvable) =>\n          inArray(matchedWhens, resolvable.getPolicy(node.state).when);\n      let nodeResolvables = node.resolvables.filter(matchesRequestedPolicy);\n      let subContext = this.subContext(node.state);\n\n      // For the matching Resolvables, start their async fetch process.\n      var getResult = (r: Resolvable) => r.get(subContext, trans)\n          // Return a tuple that includes the Resolvable's token\n          .then(value => ({ token: r.token, value: value }));\n      return acc.concat(nodeResolvables.map(getResult));\n    }, []);\n\n    return services.$q.all(promises);\n  }\n\n  injector(): UIInjector {\n    return this._injector || (this._injector = new UIInjectorImpl(this));\n  }\n\n  findNode(resolvable: Resolvable): PathNode {\n    return find(this._path, (node: PathNode) => inArray(node.resolvables, resolvable));\n  }\n\n  /**\n   * Gets the async dependencies of a Resolvable\n   *\n   * Given a Resolvable, returns its dependencies as a Resolvable[]\n   */\n  getDependencies(resolvable: Resolvable): Resolvable[] {\n    let node = this.findNode(resolvable);\n    // Find which other resolvables are \"visible\" to the `resolvable` argument\n    // subpath stopping at resolvable's node, or the whole path (if the resolvable isn't in the path)\n    let subPath: PathNode[] = PathFactory.subPath(this._path, x => x === node) || this._path;\n    let availableResolvables: Resolvable[] = subPath\n        .reduce((acc, node) => acc.concat(node.resolvables), []) //all of subpath's resolvables\n        .filter(res => res !== resolvable); // filter out the `resolvable` argument\n\n    const getDependency = (token: any) => {\n      let matching = availableResolvables.filter(r => r.token === token);\n      if (matching.length) return tail(matching);\n\n      let fromInjector = this.injector().getNative(token);\n      if (!fromInjector) {\n        throw new Error(\"Could not find Dependency Injection token: \" + stringify(token));\n      }\n\n      return new Resolvable(token, () => fromInjector, [], fromInjector);\n    };\n\n    return resolvable.deps.map(getDependency);\n  }\n}\n\nclass UIInjectorImpl implements UIInjector {\n  native: $InjectorLike;\n\n  constructor(public context: ResolveContext) {\n    this.native = this.get(NATIVE_INJECTOR_TOKEN) || services.$injector;\n  }\n\n  get(token: any) {\n    var resolvable = this.context.getResolvable(token);\n    if (resolvable) {\n      if (!resolvable.resolved) {\n        throw new Error(\"Resolvable async .get() not complete:\" + stringify(resolvable.token))\n      }\n      return resolvable.data;\n    }\n    return this.native && this.native.get(token);\n  }\n\n  getAsync(token: any) {\n    var resolvable = this.context.getResolvable(token);\n    if (resolvable) return resolvable.get(this.context);\n    return services.$q.when(this.native.get(token));\n  }\n\n  getNative(token: any) {\n    return this.native.get(token);\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./resolve/resolveContext.ts\n **/","/** @module resolve */ /** for typedoc */\nimport {Resolvable} from \"./resolvable\";\n\nexport interface Resolvables {\n  [key: string]: Resolvable;\n}\n\n/**\n * A plain object used to describe a [[Resolvable]]\n *\n * These objects may be defined in [[StateDefinition.resolve]] blocks to declare\n * async data that the state or substates require.\n */\nexport interface ResolvableLiteral {\n  /** The Dependency Injection token that will be used to inject/access the resolvable */\n  token: any;\n\n  /**\n   * The function that returns one of:\n   *\n   * - The resolved value (synchronously)\n   * - A promise for the resolved value\n   * - An Observable of the resolved value(s)\n   *\n   * This function will be provided the dependencies listed in [[deps]] as its arguments.\n   * The resolve system will asynchronously fetch the dependencies before invoking this function.\n   */\n  resolveFn: Function;\n\n  /** A policy that defines when to invoke the resolve, and whether to wait for async and unwrap the data */\n  policy?: ResolvePolicy;\n\n  /**\n   * The Dependency Injection tokens for dependencies of the [[resolveFn]].\n   * The DI tokens are references to other `Resolvables`, or to global services.\n   */\n  deps?: any[];\n\n  /** Pre-resolved value. */\n  data?: any\n}\n\n/**\n * Defines how a resolve is processed during a transition\n *\n * This object is the [[StateDeclaration.resolvePolicy]] property.\n *\n * @example\n * ```js\n *\n * // Fetched when the resolve's state is being entered.\n * // Wait for the promise to resolve.\n * var policy1 = { when: \"LAZY\", async: \"WAIT\" }\n *\n * // Fetched when the Transition is starting.\n * // Do not wait for the returned promise to resolve.\n * // Inject the raw promise/value\n * var policy2 = { when: \"EAGER\", async: \"NOWAIT\" }\n * ```\n *\n * The policy for a given Resolvable is merged from three sources (highest priority first):\n *\n * 1) Individual resolve definition\n * 2) State definition\n * 3) Global default\n *\n * @example\n * ```js\n *\n * // Wait for an Observable to emit one item.\n * // Since `wait` is not specified, it uses the `wait`\n * // policy defined on the state, or the global default\n * // if no `wait` policy is defined on the state\n * var myResolvablePolicy = { async: \"RXWAIT\" }\n * ```\n */\nexport interface ResolvePolicy {\n  /**\n   * Defines when a Resolvable is resolved (fetched) during a transition\n   *\n   * - `LAZY` (default) resolved as the resolve's state is being entered\n   * - `EAGER` resolved as the transition is starting\n   */\n  when?: PolicyWhen;\n\n  /**\n   * Determines the unwrapping behavior of asynchronous resolve values.\n   *\n   * - `WAIT` (default) if a promise is returned from the resolveFn, wait for the promise before proceeding\n   * - `NOWAIT` if a promise is returned from the resolve, do not wait for the promise.\n   *            The promise will not be unwrapped.\n   *            The promise itself will be provided when the resolve is injected or bound elsewhere.\n   * - `RXWAIT` When an Observable is returned from the resolveFn, wait until the Observable emits at least one item.\n   *            The Observable item will not be unwrapped.\n   *            The Observable stream itself will be provided when the resolve is injected or bound elsewhere.\n   */\n  async?: PolicyAsync;\n}\n\nexport type PolicyWhen = \"LAZY\" | \"EAGER\" ;\nexport type PolicyAsync = \"WAIT\" | \"NOWAIT\" | \"RXWAIT\" ;\n\nexport let resolvePolicies = {\n  when: {\n    LAZY: \"LAZY\",\n    EAGER: \"EAGER\"\n  },\n  async: {\n    WAIT: \"WAIT\",\n    NOWAIT: \"NOWAIT\",\n    RXWAIT: \"RXWAIT\"\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./resolve/interface.ts\n **/","/** @module resolve */ /** for typedoc */\nimport {extend, equals, inArray, identity} from \"../common/common\";\nimport {services} from \"../common/coreservices\";\nimport {trace} from \"../common/trace\";\nimport {ResolvePolicy, ResolvableLiteral, resolvePolicies} from \"./interface\";\n\nimport {ResolveContext} from \"./resolveContext\";\nimport {stringify} from \"../common/strings\";\nimport {isFunction, isObject} from \"../common/predicates\";\nimport {Transition} from \"../transition/transition\";\nimport {State} from \"../state/stateObject\";\nimport {PathNode} from \"../path/node\";\n\n\n// TODO: explicitly make this user configurable\nexport let defaultResolvePolicy: ResolvePolicy = {\n  when: \"LAZY\",\n  async: \"WAIT\"\n};\n\n/**\n * The basic building block for the resolve system.\n *\n * Resolvables encapsulate a state's resolve's resolveFn, the resolveFn's declared dependencies, the wrapped (.promise),\n * and the unwrapped-when-complete (.data) result of the resolveFn.\n *\n * Resolvable.get() either retrieves the Resolvable's existing promise, or else invokes resolve() (which invokes the\n * resolveFn) and returns the resulting promise.\n *\n * Resolvable.get() and Resolvable.resolve() both execute within a context path, which is passed as the first\n * parameter to those fns.\n */\nexport class Resolvable implements ResolvableLiteral {\n  token: any;\n  policy: ResolvePolicy;\n  resolveFn: Function;\n  deps: any[];\n\n  data: any;\n  resolved: boolean = false;\n  promise: Promise<any> = undefined;\n\n  /** This constructor creates a Resolvable copy */\n  constructor(resolvable: Resolvable)\n\n  /** This constructor creates a new Resolvable from the plain old [[ResolvableLiteral]] javascript object */\n  constructor(resolvable: ResolvableLiteral)\n\n  /**\n   * This constructor creates a new `Resolvable`\n   *\n   * @example\n   * ```js\n   *\n   * var resolvable1 = new Resolvable('mytoken', http => http.get('foo.json').toPromise(), [Http]);\n   *\n   * var resolvable2 = new Resolvable(UserService, dep => new UserService(dep.data), [SomeDependency]);\n   *\n   * var resolvable1Clone = new Resolvable(resolvable1);\n   * ```\n   *\n   * @param token The new resolvable's injection token, such as `\"userList\"` (a string) or `UserService` (a class).\n   *              When this token is used during injection, the resolved value will be injected.\n   * @param resolveFn The function that returns the resolved value, or a promise for the resolved value\n   * @param deps An array of dependencies, which will be injected into the `resolveFn`\n   * @param policy the [[ResolvePolicy]] defines when and how the Resolvable is processed\n   * @param data Pre-resolved data. If the resolve value is already known, it may be provided here.\n   */\n  constructor(token: any, resolveFn: Function, deps?: any[], policy?: ResolvePolicy, data?: any)\n  constructor(arg1: any, resolveFn?: Function, deps?: any[], policy?: ResolvePolicy, data?: any) {\n    if (arg1 instanceof Resolvable) {\n      extend(this, arg1);\n    } else if (isFunction(resolveFn)) {\n      if (arg1 == null || arg1 == undefined) throw new Error(\"new Resolvable(): token argument is required\");\n      if (!isFunction(resolveFn)) throw new Error(\"new Resolvable(): resolveFn argument must be a function\");\n\n      this.token = arg1;\n      this.policy = policy;\n      this.resolveFn = resolveFn;\n      this.deps = deps || [];\n\n      this.data = data;\n      this.resolved = data !== undefined;\n      this.promise = this.resolved ? services.$q.when(this.data) : undefined;\n    } else if (isObject(arg1) && arg1.token && isFunction(arg1.resolveFn)) {\n      let literal = <ResolvableLiteral> arg1;\n      return new Resolvable(literal.token, literal.resolveFn, literal.deps, literal.policy, literal.data);\n    }\n  }\n\n  getPolicy(state:State): ResolvePolicy {\n    let thisPolicy = this.policy || {};\n    let statePolicy = state && state.resolvePolicy || {};\n    return {\n      when: thisPolicy.when || statePolicy.when || defaultResolvePolicy.when,\n      async: thisPolicy.async || statePolicy.async || defaultResolvePolicy.async,\n    }\n  }\n\n  /**\n   * Asynchronously resolve this Resolvable's data\n   *\n   * Given a ResolveContext that this Resolvable is found in:\n   * Wait for this Resolvable's dependencies, then invoke this Resolvable's function\n   * and update the Resolvable's state\n   */\n  resolve(resolveContext: ResolveContext, trans?: Transition) {\n    let $q = services.$q;\n\n    // Gets all dependencies from ResolveContext and wait for them to be resolved\n    const getResolvableDependencies = () =>\n        $q.all(resolveContext.getDependencies(this).map(r =>\n            r.get(resolveContext, trans))) as Promise<any[]>;\n\n    // Invokes the resolve function passing the resolved dependencies as arguments\n    const invokeResolveFn = (resolvedDeps: any[]) =>\n        this.resolveFn.apply(null, resolvedDeps);\n\n    /**\n     * For RXWAIT policy:\n     *\n     * Given an observable returned from a resolve function:\n     * - enables .cache() mode (this allows multicast subscribers)\n     * - then calls toPromise() (this triggers subscribe() and thus fetches)\n     * - Waits for the promise, then return the cached observable (not the first emitted value).\n     */\n    const waitForRx = (observable$: any) => {\n      let cached = observable$.cache(1);\n      return cached.take(1).toPromise().then(() => cached);\n    };\n\n    // If the resolve policy is RXWAIT, wait for the observable to emit something. otherwise pass through.\n    let node: PathNode = resolveContext.findNode(this);\n    let state: State = node && node.state;\n    let maybeWaitForRx = this.getPolicy(state).async === \"RXWAIT\" ? waitForRx : identity;\n\n    // After the final value has been resolved, update the state of the Resolvable\n    const applyResolvedValue = (resolvedValue: any) => {\n      this.data = resolvedValue;\n      this.resolved = true;\n      trace.traceResolvableResolved(this, trans);\n      return this.data;\n    };\n\n    // Sets the promise property first, then getsResolvableDependencies in the context of the promise chain. Always waits one tick.\n    return this.promise = $q.when()\n        .then(getResolvableDependencies)\n        .then(invokeResolveFn)\n        .then(maybeWaitForRx)\n        .then(applyResolvedValue);\n  }\n\n  /**\n   * Gets a promise for this Resolvable's data.\n   *\n   * Fetches the data and returns a promise.\n   * Returns the existing promise if it has already been fetched once.\n   */\n  get(resolveContext: ResolveContext, trans?: Transition): Promise<any> {\n    return this.promise || this.resolve(resolveContext, trans);\n  }\n\n  toString() {\n    return `Resolvable(token: ${stringify(this.token)}, requires: [${this.deps.map(stringify)}])`;\n  }\n\n  clone(): Resolvable {\n    return new Resolvable(this);\n  }\n  \n  static fromData = (token: any, data: any) =>  \n      new Resolvable(token, () => data, null, null, data);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./resolve/resolvable.ts\n **/","/** @module path */ /** for typedoc */\n\nimport {extend, find, pick, omit, tail, mergeR, values, unnestR, Predicate, inArray} from \"../common/common\";\nimport {prop, propEq, not} from \"../common/hof\";\n\nimport {RawParams} from \"../params/interface\";\nimport {TreeChanges} from \"../transition/interface\";\nimport {ViewConfig} from \"../view/interface\";\nimport {_ViewDeclaration} from \"../state/interface\";\n\nimport {State} from \"../state/stateObject\";\nimport {TargetState} from \"../state/targetState\";\nimport {PathNode} from \"../path/node\";\nimport {ViewService} from \"../view/view\";\n\n/**\n * This class contains functions which convert TargetStates, Nodes and paths from one type to another.\n */\nexport class PathFactory {\n\n  constructor() { }\n\n  /** Given a PathNode[], create an TargetState */\n  static makeTargetState(path: PathNode[]): TargetState {\n    let state = tail(path).state;\n    return new TargetState(state, state, path.map(prop(\"paramValues\")).reduce(mergeR, {}));\n  }\n\n  static buildPath(targetState: TargetState) {\n    let toParams = targetState.params();\n    return targetState.$state().path.map(state => new PathNode(state).applyRawParams(toParams));\n  }\n\n  /** Given a fromPath: PathNode[] and a TargetState, builds a toPath: PathNode[] */\n  static buildToPath(fromPath: PathNode[], targetState: TargetState): PathNode[] {\n    let toPath: PathNode[] = PathFactory.buildPath(targetState);\n    if (targetState.options().inherit) {\n      return PathFactory.inheritParams(fromPath, toPath, Object.keys(targetState.params()));\n    }\n    return toPath;\n  }\n\n  /**\n   * Creates ViewConfig objects and adds to nodes.\n   *\n   * On each [[PathNode]], creates ViewConfig objects from the views: property of the node's state\n   */\n  static applyViewConfigs($view: ViewService, path: PathNode[], states: State[]) {\n    // Only apply the viewConfigs to the nodes for the given states\n    path.filter(node => inArray(states, node.state)).forEach(node => {\n      let viewDecls: _ViewDeclaration[] = values(node.state.views || {});\n      let subPath = PathFactory.subPath(path, n => n === node);\n      let viewConfigs: ViewConfig[][] = viewDecls.map(view => $view.createViewConfig(subPath, view));\n      node.views = viewConfigs.reduce(unnestR, []);\n    });\n  }\n\n  /**\n   * Given a fromPath and a toPath, returns a new to path which inherits parameters from the fromPath\n   *\n   * For a parameter in a node to be inherited from the from path:\n   * - The toPath's node must have a matching node in the fromPath (by state).\n   * - The parameter name must not be found in the toKeys parameter array.\n   *\n   * Note: the keys provided in toKeys are intended to be those param keys explicitly specified by some\n   * caller, for instance, $state.transitionTo(..., toParams).  If a key was found in toParams,\n   * it is not inherited from the fromPath.\n   */\n  static inheritParams(fromPath: PathNode[], toPath: PathNode[], toKeys: string[] = []): PathNode[] {\n    function nodeParamVals(path: PathNode[], state: State): RawParams {\n      let node: PathNode = find(path, propEq('state', state));\n      return extend({}, node && node.paramValues);\n    }\n\n    /**\n     * Given an [[PathNode]] \"toNode\", return a new [[PathNode]] with param values inherited from the\n     * matching node in fromPath.  Only inherit keys that aren't found in \"toKeys\" from the node in \"fromPath\"\"\n     */\n    function makeInheritedParamsNode(toNode: PathNode): PathNode {\n      // All param values for the node (may include default key/vals, when key was not found in toParams)\n      let toParamVals = extend({}, toNode && toNode.paramValues);\n      // limited to only those keys found in toParams\n      let incomingParamVals = pick(toParamVals, toKeys);\n      toParamVals = omit(toParamVals, toKeys);\n      let fromParamVals = nodeParamVals(fromPath, toNode.state) || {};\n      // extend toParamVals with any fromParamVals, then override any of those those with incomingParamVals\n      let ownParamVals: RawParams = extend(toParamVals, fromParamVals, incomingParamVals);\n      return new PathNode(toNode.state).applyRawParams(ownParamVals);\n    }\n\n    // The param keys specified by the incoming toParams\n    return <PathNode[]> toPath.map(makeInheritedParamsNode);\n  }\n\n  /**\n   * Computes the tree changes (entering, exiting) between a fromPath and toPath.\n   */\n  static treeChanges(fromPath: PathNode[], toPath: PathNode[], reloadState: State): TreeChanges {\n    let keep = 0, max = Math.min(fromPath.length, toPath.length);\n    const staticParams = (state: State) => \n        state.parameters({ inherit: false }).filter(not(prop('dynamic'))).map(prop('id'));\n    const nodesMatch = (node1: PathNode, node2: PathNode) =>\n        node1.equals(node2, staticParams(node1.state));\n\n    while (keep < max && fromPath[keep].state !== reloadState && nodesMatch(fromPath[keep], toPath[keep])) {\n      keep++;\n    }\n\n    /** Given a retained node, return a new node which uses the to node's param values */\n    function applyToParams(retainedNode: PathNode, idx: number): PathNode {\n      let cloned = PathNode.clone(retainedNode);\n      cloned.paramValues = toPath[idx].paramValues;\n      return cloned;\n    }\n\n    let from: PathNode[], retained: PathNode[], exiting: PathNode[], entering: PathNode[], to: PathNode[];\n\n    from                  = fromPath;\n    retained              = from.slice(0, keep);\n    exiting               = from.slice(keep);\n\n    // Create a new retained path (with shallow copies of nodes) which have the params of the toPath mapped\n    let retainedWithToParams  = retained.map(applyToParams);\n    entering              = toPath.slice(keep);\n    to                    = (retainedWithToParams).concat(entering);\n\n    return { from, to, retained, exiting, entering };\n  }\n\n  /**\n   * Return a subpath of a path, which stops at the first matching node\n   *\n   * Given an array of nodes, returns a subset of the array starting from the first node,\n   * stopping when the first node matches the predicate.\n   *\n   * @param path a path of [[PathNode]]s\n   * @param predicate a [[Predicate]] fn that matches [[PathNode]]s\n   * @returns a subpath up to the matching node, or undefined if no match is found\n   */\n  static subPath(path: PathNode[], predicate: Predicate<PathNode>): PathNode[] {\n    let node = find(path, predicate);\n    let elementIdx = path.indexOf(node);\n    return elementIdx === -1 ? undefined : path.slice(0, elementIdx + 1);\n  }\n\n  /** Gets the raw parameter values from a path */\n  static paramValues = (path: PathNode[]) => path.reduce((acc, node) => extend(acc, node.paramValues), {});\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./path/pathFactory.ts\n **/","/** @module path */ /** for typedoc */\nimport {extend, applyPairs, find, allTrueR} from \"../common/common\";\nimport {propEq} from \"../common/hof\";\nimport {State} from \"../state/stateObject\";\nimport {RawParams} from \"../params/interface\";\nimport {Param} from \"../params/param\";\nimport {Resolvable} from \"../resolve/resolvable\";\nimport {ViewConfig} from \"../view/interface\";\n\n/**\n * A node in a [[TreeChanges]] path\n *\n * For a [[TreeChanges]] path, this class holds the stateful information for a single node in the path.\n * Each PathNode corresponds to a state being entered, exited, or retained.\n * The stateful information includes parameter values and resolve data.\n */\nexport class PathNode {\n  /** The state being entered, exited, or retained */\n  public state: State;\n  /** The parameters declared on the state */\n  public paramSchema: Param[];\n  /** The parameter values that belong to the state */\n  public paramValues: { [key: string]: any };\n  /** The individual (stateful) resolvable objects that belong to the state */\n  public resolvables: Resolvable[];\n  /** The state's declared view configuration objects */\n  public views: ViewConfig[];\n\n  /** Creates a copy of a PathNode */\n  constructor(state: PathNode);\n  /** Creates a new (empty) PathNode for a State */\n  constructor(state: State);\n  constructor(stateOrPath: any) {\n    if (stateOrPath instanceof PathNode) {\n      let node: PathNode = stateOrPath;\n      this.state = node.state;\n      this.paramSchema = node.paramSchema.slice();\n      this.paramValues = extend({}, node.paramValues);\n      this.resolvables = node.resolvables.slice();\n      this.views = node.views && node.views.slice();\n    } else {\n      let state: State = stateOrPath;\n      this.state = state;\n      this.paramSchema = state.parameters({ inherit: false });\n      this.paramValues = {};\n      this.resolvables = state.resolvables.map(res => res.clone());\n    }\n  }\n\n  /** Sets [[paramValues]] for the node, from the values of an object hash */\n  applyRawParams(params: RawParams): PathNode {\n    const getParamVal = (paramDef: Param) => [ paramDef.id, paramDef.value(params[paramDef.id]) ];\n    this.paramValues = this.paramSchema.reduce((memo, pDef) => applyPairs(memo, getParamVal(pDef)), {});\n    return this;\n  }\n\n  /** Gets a specific [[Param]] metadata that belongs to the node */\n  parameter(name: string): Param {\n    return find(this.paramSchema, propEq(\"id\", name));\n  }\n\n  /**\n   * @returns true if the state and parameter values for another PathNode are\n   * equal to the state and param values for this PathNode\n   */\n  equals(node: PathNode, keys = this.paramSchema.map(p => p.id)): boolean {\n    const paramValsEq = (key: string) =>\n        this.parameter(key).type.equals(this.paramValues[key], node.paramValues[key]);\n    return this.state === node.state && keys.map(paramValsEq).reduce(allTrueR, true);\n  }\n\n  /** Returns a clone of the PathNode */\n  static clone(node: PathNode) {\n    return new PathNode(node);\n  }\n\n  /**\n   * Returns a new path which is a subpath of the first path which matched the second path.\n   *\n   * The new path starts from root and contains any nodes that match the nodes in the second path.\n   * Nodes are compared using their state property and parameter values.\n   *\n   * @param pathA the first path\n   * @param pathB the second path\n   * @param ignoreDynamicParams don't compare dynamic parameter values\n   */\n  static matching(pathA: PathNode[], pathB: PathNode[], ignoreDynamicParams = true): PathNode[] {\n    let matching: PathNode[] = [];\n\n    for (let i = 0; i < pathA.length && i < pathB.length; i++) {\n      let a = pathA[i], b = pathB[i];\n\n      if (a.state !== b.state) break;\n\n      let changedParams = Param.changed(a.paramSchema, a.paramValues, b.paramValues)\n          .filter(param => !(ignoreDynamicParams && param.dynamic));\n      if (changedParams.length) break;\n\n      matching.push(a);\n    }\n\n    return matching\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./path/node.ts\n **/","/** @module params */ /** for typedoc */\nimport {extend, filter, map, applyPairs, allTrueR} from \"../common/common\";\nimport {prop, propEq} from \"../common/hof\";\nimport {isInjectable, isDefined, isString, isArray} from \"../common/predicates\";\nimport {RawParams, ParamDeclaration} from \"../params/interface\";\nimport {services} from \"../common/coreservices\";\nimport {matcherConfig} from \"../url/urlMatcherConfig\";\nimport {ParamType} from \"./type\";\nimport {ParamTypes} from \"./paramTypes\";\n\nlet hasOwn = Object.prototype.hasOwnProperty;\nlet isShorthand = (cfg: ParamDeclaration) =>\n    [\"value\", \"type\", \"squash\", \"array\", \"dynamic\"].filter(hasOwn.bind(cfg || {})).length === 0;\n\nexport enum DefType {\n  PATH, SEARCH, CONFIG\n}\n\nfunction unwrapShorthand(cfg: ParamDeclaration): ParamDeclaration {\n  cfg = isShorthand(cfg) && { value: cfg } as any || cfg;\n\n  return extend(cfg, {\n    $$fn: isInjectable(cfg.value) ? cfg.value : () => cfg.value\n  });\n}\n\nfunction getType(cfg: ParamDeclaration, urlType: ParamType, location: DefType, id: string, paramTypes: ParamTypes) {\n  if (cfg.type && urlType && urlType.name !== 'string') throw new Error(`Param '${id}' has two type configurations.`);\n  if (cfg.type && urlType && urlType.name === 'string' && paramTypes.type(cfg.type as string)) return paramTypes.type(cfg.type as string);\n  if (urlType) return urlType;\n  if (!cfg.type) return (location === DefType.CONFIG ? paramTypes.type(\"any\") : paramTypes.type(\"string\"));\n  return cfg.type instanceof ParamType ? cfg.type : paramTypes.type(cfg.type as string);\n}\n\n/**\n * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n */\nfunction getSquashPolicy(config: ParamDeclaration, isOptional: boolean) {\n  let squash = config.squash;\n  if (!isOptional || squash === false) return false;\n  if (!isDefined(squash) || squash == null) return matcherConfig.defaultSquashPolicy();\n  if (squash === true || isString(squash)) return squash;\n  throw new Error(`Invalid squash policy: '${squash}'. Valid policies: false, true, or arbitrary string`);\n}\n\nfunction getReplace(config: ParamDeclaration, arrayMode: boolean, isOptional: boolean, squash: (string|boolean)) {\n  let replace: any, configuredKeys: string[], defaultPolicy = [\n    {from: \"\", to: (isOptional || arrayMode ? undefined : \"\")},\n    {from: null, to: (isOptional || arrayMode ? undefined : \"\")}\n  ];\n  replace = isArray(config.replace) ? config.replace : [];\n  if (isString(squash)) replace.push({ from: squash, to: undefined });\n  configuredKeys = map(replace, prop(\"from\"));\n  return filter(defaultPolicy, item => configuredKeys.indexOf(item.from) === -1).concat(replace);\n}\n\n\nexport class Param {\n  id: string;\n  type: ParamType;\n  location: DefType;\n  array: boolean;\n  squash: (boolean|string);\n  replace: any;\n  isOptional: boolean;\n  dynamic: boolean;\n  config: any;\n\n  constructor(id: string, type: ParamType, config: ParamDeclaration, location: DefType, paramTypes: ParamTypes) {\n    config = unwrapShorthand(config);\n    type = getType(config, type, location, id, paramTypes);\n    let arrayMode = getArrayMode();\n    type = arrayMode ? type.$asArray(arrayMode, location === DefType.SEARCH) : type;\n    let isOptional = config.value !== undefined;\n    let dynamic = isDefined(config.dynamic) ? !!config.dynamic : !!type.dynamic;\n    let squash = getSquashPolicy(config, isOptional);\n    let replace = getReplace(config, arrayMode, isOptional, squash);\n\n    // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n    function getArrayMode() {\n      let arrayDefaults = { array: (location === DefType.SEARCH ? \"auto\" : false) };\n      let arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n      return extend(arrayDefaults, arrayParamNomenclature, config).array;\n    }\n\n    extend(this, {id, type, location, squash, replace, isOptional, dynamic, config, array: arrayMode});\n  }\n\n  isDefaultValue(value: any): boolean {\n    return this.isOptional && this.type.equals(this.value(), value);\n  }\n\n  /**\n   * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n   * default value, which may be the result of an injectable function.\n   */\n  value(value?: any): any {\n    /**\n     * [Internal] Get the default value of a parameter, which may be an injectable function.\n     */\n    const $$getDefaultValue = () => {\n      if (!services.$injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n      let defaultValue = services.$injector.invoke(this.config.$$fn);\n      if (defaultValue !== null && defaultValue !== undefined && !this.type.is(defaultValue))\n        throw new Error(`Default value (${defaultValue}) for parameter '${this.id}' is not an instance of ParamType (${this.type.name})`);\n      return defaultValue;\n    };\n\n    const $replace = (val: any) => {\n      let replacement: any = map(filter(this.replace, propEq('from', val)), prop(\"to\"));\n      return replacement.length ? replacement[0] : val;\n    };\n\n    value = $replace(value);\n    return !isDefined(value) ? $$getDefaultValue() : this.type.$normalize(value);\n  }\n\n  isSearch(): boolean {\n    return this.location === DefType.SEARCH;\n  }\n\n  validates(value: any): boolean {\n    // There was no parameter value, but the param is optional\n    if ((!isDefined(value) || value === null) && this.isOptional) return true;\n\n    // The value was not of the correct ParamType, and could not be decoded to the correct ParamType\n    const normalized = this.type.$normalize(value);\n    if (!this.type.is(normalized)) return false;\n\n    // The value was of the correct type, but when encoded, did not match the ParamType's regexp\n    const encoded = this.type.encode(normalized);\n    return !(isString(encoded) && !this.type.pattern.exec(<string> encoded));\n  }\n\n  toString() {\n    return `{Param:${this.id} ${this.type} squash: '${this.squash}' optional: ${this.isOptional}}`;\n  }\n\n  /** Creates a new [[Param]] from a CONFIG block */\n  static fromConfig(id: string, type: ParamType, config: any, paramTypes: ParamTypes): Param {\n    return new Param(id, type, config, DefType.CONFIG, paramTypes);\n  }\n\n  /** Creates a new [[Param]] from a url PATH */\n  static fromPath(id: string, type: ParamType, config: any, paramTypes: ParamTypes): Param {\n    return new Param(id, type, config, DefType.PATH, paramTypes);\n  }\n\n  /** Creates a new [[Param]] from a url SEARCH */\n  static fromSearch(id: string, type: ParamType, config: any, paramTypes: ParamTypes): Param {\n    return new Param(id, type, config, DefType.SEARCH, paramTypes);\n  }\n\n  static values(params: Param[], values: RawParams = {}): RawParams {\n    return <RawParams> params.map(param => [param.id, param.value(values[param.id])]).reduce(applyPairs, {});\n  }\n\n  /**\n   * Finds [[Param]] objects which have different param values\n   *\n   * Filters a list of [[Param]] objects to only those whose parameter values differ in two param value objects\n   *\n   * @param params: The list of Param objects to filter\n   * @param values1: The first set of parameter values\n   * @param values2: the second set of parameter values\n   *\n   * @returns any Param objects whose values were different between values1 and values2\n   */\n  static changed(params: Param[], values1: RawParams = {}, values2: RawParams = {}): Param[] {\n    return params.filter(param => !param.type.equals(values1[param.id], values2[param.id]));\n  }\n\n  /**\n   * Checks if two param value objects are equal (for a set of [[Param]] objects)\n   *\n   * @param params The list of [[Param]] objects to check\n   * @param values1 The first set of param values\n   * @param values2 The second set of param values\n   *\n   * @returns true if the param values in values1 and values2 are equal\n   */\n  static equals(params: Param[], values1 = {}, values2 = {}): boolean {\n    return Param.changed(params, values1, values2).length === 0;\n  }\n\n  /** Returns true if a the parameter values are valid, according to the Param definitions */\n  static validates(params: Param[], values: RawParams = {}): boolean {\n    return params.map(param => param.validates(values[param.id])).reduce(allTrueR, true);\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./params/param.ts\n **/","/** @module url */ /** for typedoc */\nimport {isDefined, isString} from \"../common/predicates\";\n\nexport class MatcherConfig {\n  _isCaseInsensitive: boolean = false;\n  _isStrictMode: boolean = true;\n  _defaultSquashPolicy: (boolean|string) = false;\n\n  caseInsensitive(value?: boolean): boolean {\n    return this._isCaseInsensitive = isDefined(value) ? value : this._isCaseInsensitive;\n  }\n\n  strictMode(value?: boolean): boolean {\n    return this._isStrictMode = isDefined(value) ? value : this._isStrictMode;\n  }\n\n  defaultSquashPolicy(value?: (boolean|string)): (boolean|string) {\n    if (isDefined(value) && value !== true && value !== false && !isString(value))\n      throw new Error(`Invalid squash policy: ${value}. Valid policies: false, true, arbitrary-string`);\n    return this._defaultSquashPolicy = isDefined(value) ? value : this._defaultSquashPolicy;\n  }\n}\n\n// TODO: Do not export global instance; create one in UIRouter() constructor\nexport let matcherConfig = new MatcherConfig();\n\n\n\n/** WEBPACK FOOTER **\n ** ./url/urlMatcherConfig.ts\n **/","/** @module params */ /** for typedoc */\nimport {extend, filter, map} from \"../common/common\";\nimport {isArray, isDefined} from \"../common/predicates\";\nimport {ParamTypeDefinition} from \"./interface\";\n\n/**\n * Wraps up a `ParamType` object to handle array values.\n */\nfunction ArrayType(type: ParamType, mode: (boolean|\"auto\")) {\n  // Wrap non-array value as array\n  function arrayWrap(val: any): any[] {\n    return isArray(val) ? val : (isDefined(val) ? [ val ] : []);\n  }\n\n  // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n  function arrayUnwrap(val: any) {\n    switch (val.length) {\n      case 0: return undefined;\n      case 1: return mode === \"auto\" ? val[0] : val;\n      default: return val;\n    }\n  }\n\n  // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n  function arrayHandler(callback: (x: any) => any, allTruthyMode?: boolean) {\n    return function handleArray(val: any) {\n      if (isArray(val) && val.length === 0) return val;\n      let arr = arrayWrap(val);\n      let result = map(arr, callback);\n      return (allTruthyMode === true) ? filter(result, x => !x).length === 0 : arrayUnwrap(result);\n    };\n  }\n\n  // Wraps type (.equals) functions to operate on each value of an array\n  function arrayEqualsHandler(callback: (l: any, r: any) => boolean) {\n    return function handleArray(val1: any, val2: any) {\n      let left = arrayWrap(val1), right = arrayWrap(val2);\n      if (left.length !== right.length) return false;\n      for (let i = 0; i < left.length; i++) {\n        if (!callback(left[i], right[i])) return false;\n      }\n      return true;\n    };\n  }\n\n  ['encode', 'decode', 'equals', '$normalize'].forEach(name => {\n    var paramTypeFn = type[name].bind(type);\n    var wrapperFn: Function = name === 'equals' ? arrayEqualsHandler : arrayHandler;\n    this[name] = wrapperFn(paramTypeFn);\n  });\n\n  extend(this, {\n    dynamic: type.dynamic,\n    name: type.name,\n    pattern: type.pattern,\n    is: arrayHandler(type.is.bind(type), true),\n    $arrayMode: mode\n  });\n}\n\n/**\n * A class that implements Custom Parameter Type functionality.\n *\n * This class has naive implementations for all the [[ParamTypeDefinition]] methods.\n *\n * An instance of this class is created when a custom [[ParamTypeDefinition]] object is registered with the [[UrlMatcherFactory.type]].\n *\n * Used by [[UrlMatcher]] when matching or formatting URLs, or comparing and validating parameter values.\n *\n * @example\n * ```\n *\n * {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) && isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n * ```\n */\nexport class ParamType implements ParamTypeDefinition {\n  pattern: RegExp = /.*/;\n  name: string;\n  raw: boolean;\n  dynamic: boolean;\n\n  /**\n   * @param def  A configuration object which contains the custom type definition.  The object's\n   *        properties will override the default methods and/or pattern in `ParamType`'s public interface.\n   * @returns a new ParamType object\n   */\n  constructor(def: ParamTypeDefinition) {\n    extend(this, def);\n  }\n\n\n  // consider these four methods to be \"abstract methods\" that should be overridden\n  /** @inheritdoc */\n  is(val: any, key?: string): boolean { return true; }\n  /** @inheritdoc */\n  encode(val: any, key?: string): (string|string[]) { return val; }\n  /** @inheritdoc */\n  decode(val: string, key?: string): any { return val; }\n  /** @inheritdoc */\n  equals(a: any, b: any): boolean { return a == b; }\n\n\n  $subPattern() {\n    let sub = this.pattern.toString();\n    return sub.substr(1, sub.length - 2);\n  }\n\n  toString() {\n    return `{ParamType:${this.name}}`;\n  }\n\n  /** Given an encoded string, or a decoded object, returns a decoded object */\n  $normalize(val: any) {\n    return this.is(val) ? val : this.decode(val);\n  }\n\n  /**\n   * Wraps an existing custom ParamType as an array of ParamType, depending on 'mode'.\n   * e.g.:\n   * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n   * - url: \"/path?queryParam=1&queryParam=2\n   * - $stateParams.queryParam will be [1, 2]\n   * if `mode` is \"auto\", then\n   * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n   * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n   */\n  $asArray(mode: (boolean|\"auto\"), isSearch: boolean) {\n    if (!mode) return this;\n    if (mode === \"auto\" && !isSearch) throw new Error(\"'auto' array mode is for query parameters only\");\n    return new (<any> ArrayType)(this, mode);\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./params/type.ts\n **/","/** @module core */ /** */\nimport {UrlMatcherFactory} from \"./url/urlMatcherFactory\";\nimport {UrlRouterProvider} from \"./url/urlRouter\";\nimport {UrlRouter} from \"./url/urlRouter\";\nimport {TransitionService} from \"./transition/transitionService\";\nimport {ViewService} from \"./view/view\";\nimport {StateRegistry} from \"./state/stateRegistry\";\nimport {StateService} from \"./state/stateService\";\nimport {UIRouterGlobals, Globals} from \"./globals\";\n\n/**\n * The master class used to instantiate an instance of UI-Router.\n *\n * This class instantiates and wires the global UI-Router services.\n *\n * After instantiating a new instance of the Router class, configure it for your app.  For instance, register\n * your app states with the [[stateRegistry]] (and set url options using ...).  Then, tell UI-Router to monitor\n * the URL by calling `urlRouter.listen()` ([[URLRouter.listen]])\n */\nexport class UIRouter {\n  viewService = new ViewService();\n\n  transitionService: TransitionService = new TransitionService(this);\n\n  globals: UIRouterGlobals = new Globals(this.transitionService);\n\n  urlMatcherFactory: UrlMatcherFactory = new UrlMatcherFactory();\n\n  urlRouterProvider: UrlRouterProvider = new UrlRouterProvider(this.urlMatcherFactory, this.globals.params);\n\n  urlRouter: UrlRouter = new UrlRouter(this.urlRouterProvider);\n\n  stateRegistry: StateRegistry = new StateRegistry(this.urlMatcherFactory, this.urlRouterProvider);\n\n  stateService = new StateService(this);\n\n  constructor() {\n    this.viewService.rootContext(this.stateRegistry.root());\n    this.globals.$current = this.stateRegistry.root();\n    this.globals.current = this.globals.$current.self;\n  }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./router.ts\n **/","/** @module url */ /** for typedoc */\nimport {forEach, extend} from \"../common/common\";\nimport {isObject, isDefined, isFunction} from \"../common/predicates\";\n\nimport {UrlMatcher} from \"./urlMatcher\";\nimport {matcherConfig} from \"./urlMatcherConfig\";\nimport {Param} from \"../params/param\";\nimport {ParamTypes} from \"../params/paramTypes\";\nimport {ParamTypeDefinition} from \"../params/interface\";\n\n/** @hidden */\nfunction getDefaultConfig() {\n  return {\n    strict: matcherConfig.strictMode(),\n    caseInsensitive: matcherConfig.caseInsensitive()\n  };\n}\n\n/**\n * Factory for [[UrlMatcher]] instances.\n *\n * The factory is available to ng1 services as\n * `$urlMatcherFactor` or ng1 providers as `$urlMatcherFactoryProvider`.\n */\nexport class UrlMatcherFactory {\n  paramTypes = new ParamTypes();\n\n  constructor() {\n    extend(this, { UrlMatcher, Param });\n  }\n\n  /**\n   * Defines whether URL matching should be case sensitive (the default behavior), or not.\n   *\n   * @param value `false` to match URL in a case sensitive manner; otherwise `true`;\n   * @returns the current value of caseInsensitive\n   */\n  caseInsensitive(value: boolean) {\n    return matcherConfig.caseInsensitive(value);\n  }\n\n  /**\n   * Defines whether URLs should match trailing slashes, or not (the default behavior).\n   *\n   * @param value `false` to match trailing slashes in URLs, otherwise `true`.\n   * @returns the current value of strictMode\n   */\n  strictMode(value: boolean) {\n    return matcherConfig.strictMode(value);\n  }\n\n  /**\n   * Sets the default behavior when generating or matching URLs with default parameter values.\n   *\n   * @param value A string that defines the default parameter URL squashing behavior.\n   *    - `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n   *    - `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n   *             parameter is surrounded by slashes, squash (remove) one slash from the URL\n   *    - any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n   *             the parameter value from the URL and replace it with this string.\n   * @returns the current value of defaultSquashPolicy\n   */\n  defaultSquashPolicy(value: string) {\n    return matcherConfig.defaultSquashPolicy(value);\n  }\n\n  /**\n   * Creates a [[UrlMatcher]] for the specified pattern.\n   *\n   * @param pattern  The URL pattern.\n   * @param config  The config object hash.\n   * @returns The UrlMatcher.\n   */\n  compile(pattern: string, config?: { [key: string]: any }) {\n    return new UrlMatcher(pattern, this.paramTypes, extend(getDefaultConfig(), config));\n  }\n\n  /**\n   * Returns true if the specified object is a [[UrlMatcher]], or false otherwise.\n   *\n   * @param object  The object to perform the type check against.\n   * @returns `true` if the object matches the `UrlMatcher` interface, by\n   *          implementing all the same methods.\n   */\n  isMatcher(object: any) {\n    // TODO: typeof?\n    if (!isObject(object)) return false;\n    let result = true;\n\n    forEach(UrlMatcher.prototype, (val, name) => {\n      if (isFunction(val)) result = result && (isDefined(object[name]) && isFunction(object[name]));\n    });\n    return result;\n  };\n\n  /**\n   * Creates and registers a custom [[ParamType]] object\n   *\n   * A [[ParamType]] can be used to generate URLs with typed parameters.\n   *\n   * @param name  The type name.\n   * @param definition The type definition. See [[ParamTypeDefinition]] for information on the values accepted.\n   * @param definitionFn A function that is injected before the app runtime starts.\n   *        The result of this function should be a [[ParamTypeDefinition]].\n   *        The result is merged into the existing `definition`.\n   *        See [[ParamType]] for information on the values accepted.\n   *\n   * @returns - if a type was registered: the [[UrlMatcherFactory]]\n   *   - if only the `name` parameter was specified: the currently registered [[ParamType]] object, or undefined\n   *\n   * Note: Register custom types *before using them* in a state definition.\n   *\n   * See [[ParamTypeDefinition]] for examples\n   */\n  type(name: string, definition?: ParamTypeDefinition, definitionFn?: () => ParamTypeDefinition) {\n    let type = this.paramTypes.type(name, definition, definitionFn);\n    return !isDefined(definition) ? type : this;\n  };\n\n  /** @hidden */\n  $get() {\n    this.paramTypes.enqueue = false;\n    this.paramTypes._flushTypeQueue();\n    return this;\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./url/urlMatcherFactory.ts\n **/","/** @module url */ /** for typedoc */\nimport {\n  map, defaults, extend, inherit, identity,\n  unnest, tail, forEach, find, Obj, pairs, allTrueR\n} from \"../common/common\";\nimport {prop, propEq } from \"../common/hof\";\nimport {isArray, isString} from \"../common/predicates\";\nimport {Param} from \"../params/param\";\nimport {ParamTypes} from \"../params/paramTypes\";\nimport {isDefined} from \"../common/predicates\";\nimport {DefType} from \"../params/param\";\nimport {unnestR} from \"../common/common\";\nimport {arrayTuples} from \"../common/common\";\nimport {RawParams} from \"../params/interface\";\n\n/** @hidden */\nfunction quoteRegExp(string: any, param?: any) {\n  let surroundPattern = ['', ''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\n  if (!param) return result;\n\n  switch (param.squash) {\n    case false:\n      surroundPattern = ['(', ')' + (param.isOptional ? '?' : '')]; break;\n    case true:\n      result = result.replace(/\\/$/, '');\n      surroundPattern = ['(?:\\/(', ')|\\/)?'];\n      break;\n    default:\n      surroundPattern = [`(${param.squash}|`, ')?']; break;\n  }\n  return result + surroundPattern[0] + param.type.pattern.source + surroundPattern[1];\n}\n\n/** @hidden */\nconst memoizeTo = (obj: Obj, prop: string, fn: Function) =>\n    obj[prop] = obj[prop] || fn();\n\n/**\n * Matches URLs against patterns.\n *\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL.\n *\n * A URL pattern consists of a path pattern, optionally followed by '?' and a list of search (query)\n * parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by [[UrlMatcher.exec]].\n *\n * - *Path parameters* are defined using curly brace placeholders (`/somepath/{param}`)\n * or colon placeholders (`/somePath/:param`).\n *\n * - *A parameter RegExp* may be defined for a param after a colon\n * (`/somePath/{param:[a-zA-Z0-9]+}`) in a curly brace placeholder.\n * The regexp must match for the url to be matched.\n * Should the regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n *\n * - *Custom parameter types* may also be specified after a colon (`/somePath/{param:int}`)\n * in curly brace parameters.  See [[UrlMatcherFactory.type]] for more information.\n *\n * - *Catch-all parameters* are defined using an asterisk placeholder (`/somepath/*catchallparam`).  A catch-all\n * parameter value will contain the remainder of the URL.\n *\n * ---\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters).\n * A path parameter matches any number of characters other than '/'. For catch-all\n * placeholders the path parameter matches any number of characters.\n *\n * Examples:\n *\n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` ParamType matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n */\nexport class UrlMatcher {\n  /** @hidden */\n  static nameValidator: RegExp = /^\\w+([-.]+\\w+)*(?:\\[\\])?$/;\n\n  /** @hidden */\n  private _cache: { path: UrlMatcher[], pattern?: RegExp } = { path: [], pattern: null };\n  /** @hidden */\n  private _children: UrlMatcher[] = [];\n  /** @hidden */\n  private _params:   Param[]      = [];\n  /** @hidden */\n  private _segments: string[]     = [];\n  /** @hidden */\n  private _compiled: string[]     = [];\n\n  /**\n   * A static prefix of this pattern.\n   *\n   * The matcher guarantees that any\n   *   URL matching this matcher (i.e. any string for which {@link ui.router.util.type:UrlMatcher#methods_exec exec()} returns\n   *   non-null) will start with this prefix.\n   */\n  public prefix: string;\n  /** The pattern that was passed into the constructor */\n  public pattern: string;\n\n  /**\n   * @param pattern The pattern to compile into a matcher.\n   * @param paramTypes The [[ParamTypes]] registry\n   * @param config  A configuration object\n   * - `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n   * - `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\n   */\n  constructor(pattern: string, paramTypes: ParamTypes, public config?: any) {\n    this.pattern = pattern;\n    this.config = defaults(this.config, {\n      params: {},\n      strict: true,\n      caseInsensitive: false,\n      paramMap: identity\n    });\n\n    // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n    //   '*' name\n    //   ':' name\n    //   '{' name '}'\n    //   '{' name ':' regexp '}'\n    // The regular expression is somewhat complicated due to the need to allow curly braces\n    // inside the regular expression. The placeholder regexp breaks down as follows:\n    //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n    //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n    //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n    //    [^{}\\\\]+                       - anything other than curly braces or backslash\n    //    \\\\.                            - a backslash escape\n    //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n    let placeholder = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n        searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n        last = 0, m: RegExpExecArray, patterns: any[][] = [];\n\n    const checkParamErrors = (id: string) => {\n      if (!UrlMatcher.nameValidator.test(id)) throw new Error(`Invalid parameter name '${id}' in pattern '${pattern}'`);\n      if (find(this._params, propEq('id', id))) throw new Error(`Duplicate parameter name '${id}' in pattern '${pattern}'`);\n    };\n\n    // Split into static segments separated by path parameter placeholders.\n    // The number of segments is always 1 more than the number of parameters.\n    const matchDetails = (m: RegExpExecArray, isSearch: boolean) => {\n      // IE[78] returns '' for unmatched groups instead of null\n      let id = m[2] || m[3], regexp = isSearch ? m[4] : m[4] || (m[1] === '*' ? '.*' : null);\n\n      return {\n        id,\n        regexp,\n        cfg:     this.config.params[id],\n        segment: pattern.substring(last, m.index),\n        type:    !regexp ? null : paramTypes.type(regexp || \"string\") || inherit(paramTypes.type(\"string\"), {\n          pattern: new RegExp(regexp, this.config.caseInsensitive ? 'i' : undefined)\n        })\n      };\n    }\n\n    let p: any, segment: string;\n\n    while ((m = placeholder.exec(pattern))) {\n      p = matchDetails(m, false);\n      if (p.segment.indexOf('?') >= 0) break; // we're into the search part\n\n      checkParamErrors(p.id);\n      this._params.push(Param.fromPath(p.id, p.type, this.config.paramMap(p.cfg, false), paramTypes));\n      this._segments.push(p.segment);\n      patterns.push([p.segment, tail(this._params)]);\n      last = placeholder.lastIndex;\n    }\n    segment = pattern.substring(last);\n\n    // Find any search parameter names and remove them from the last segment\n    let i = segment.indexOf('?');\n\n    if (i >= 0) {\n      let search = segment.substring(i);\n      segment = segment.substring(0, i);\n\n      if (search.length > 0) {\n        last = 0;\n\n        while ((m = searchPlaceholder.exec(search))) {\n          p = matchDetails(m, true);\n          checkParamErrors(p.id);\n          this._params.push(Param.fromSearch(p.id, p.type, this.config.paramMap(p.cfg, true), paramTypes));\n          last = placeholder.lastIndex;\n          // check if ?&\n        }\n      }\n    }\n\n    this._segments.push(segment);\n\n    extend(this, {\n      _compiled: patterns.map(pattern => quoteRegExp.apply(null, pattern)).concat(quoteRegExp(segment)),\n      prefix: this._segments[0]\n    });\n\n    Object.freeze(this);\n  }\n\n  /**\n   * Creates a new concatenated UrlMatcher\n   *\n   * Builds a new UrlMatcher by appending another UrlMatcher to this one.\n   *\n   * @param url A `UrlMatcher` instance to append as a child of the current `UrlMatcher`.\n   */\n  append(url: UrlMatcher): UrlMatcher {\n    this._children.push(url);\n    forEach(url._cache, (val, key) => url._cache[key] = isArray(val) ? [] : null);\n    url._cache.path = this._cache.path.concat(this);\n    return url;\n  }\n\n  /** @hidden */\n  isRoot(): boolean {\n    return this._cache.path.length === 0;\n  }\n\n  /** Returns the input pattern string */\n  toString(): string {\n    return this.pattern;\n  }\n\n  /**\n   * Tests the specified url/path against this matcher.\n   *\n   * Tests if the given url matches this matcher's pattern, and returns an object containing the captured\n   * parameter values.  Returns null if the path does not match.\n   *\n   * The returned object contains the values\n   * of any search parameters that are mentioned in the pattern, but their value may be null if\n   * they are not present in `search`. This means that search parameters are always treated\n   * as optional.\n   *\n   * @example\n   * ```js\n   *\n   * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n   *   x: '1', q: 'hello'\n   * });\n   * // returns { id: 'bob', q: 'hello', r: null }\n   * ```\n   *\n   * @param path    The URL path to match, e.g. `$location.path()`.\n   * @param search  URL search parameters, e.g. `$location.search()`.\n   * @param hash    URL hash e.g. `$location.hash()`.\n   * @param options\n   *\n   * @returns The captured parameter values.\n   */\n  exec(path: string, search: any = {}, hash?: string, options: any = {}): RawParams {\n    let match = memoizeTo(this._cache, 'pattern', () => {\n      return new RegExp([\n        '^',\n        unnest(this._cache.path.concat(this).map(prop('_compiled'))).join(''),\n        this.config.strict === false ? '\\/?' : '',\n        '$'\n      ].join(''), this.config.caseInsensitive ? 'i' : undefined);\n    }).exec(path);\n\n    if (!match) return null;\n\n    //options = defaults(options, { isolate: false });\n\n    let allParams:    Param[] = this.parameters(),\n        pathParams:   Param[] = allParams.filter(param => !param.isSearch()),\n        searchParams: Param[] = allParams.filter(param => param.isSearch()),\n        nPathSegments  = this._cache.path.concat(this).map(urlm => urlm._segments.length - 1).reduce((a, x) => a + x),\n        values: RawParams = {};\n\n    if (nPathSegments !== match.length - 1)\n      throw new Error(`Unbalanced capture group in route '${this.pattern}'`);\n\n    function decodePathArray(string: string) {\n      const reverseString = (str: string) => str.split(\"\").reverse().join(\"\");\n      const unquoteDashes = (str: string) => str.replace(/\\\\-/g, \"-\");\n\n      let split = reverseString(string).split(/-(?!\\\\)/);\n      let allReversed = map(split, reverseString);\n      return map(allReversed, unquoteDashes).reverse();\n    }\n\n    for (let i = 0; i < nPathSegments; i++) {\n      let param: Param = pathParams[i];\n      let value: (any|any[]) = match[i + 1];\n\n      // if the param value matches a pre-replace pair, replace the value before decoding.\n      for (let j = 0; j < param.replace.length; j++) {\n        if (param.replace[j].from === value) value = param.replace[j].to;\n      }\n      if (value && param.array === true) value = decodePathArray(value);\n      if (isDefined(value)) value = param.type.decode(value);\n      values[param.id] = param.value(value);\n    }\n    searchParams.forEach(param => {\n      let value = search[param.id];\n      for (let j = 0; j < param.replace.length; j++) {\n        if (param.replace[j].from === value) value = param.replace[j].to;\n      }\n      if (isDefined(value)) value = param.type.decode(value);\n      values[param.id] = param.value(value);\n    });\n\n    if (hash) values[\"#\"] = hash;\n\n    return values;\n  }\n\n  /**\n   * @hidden\n   * Returns all the [[Param]] objects of all path and search parameters of this pattern in order of appearance.\n   *\n   * @returns {Array.<Param>}  An array of [[Param]] objects. Must be treated as read-only. If the\n   *    pattern has no parameters, an empty array is returned.\n   */\n  parameters(opts: any = {}): Param[] {\n    if (opts.inherit === false) return this._params;\n    return unnest(this._cache.path.concat(this).map(prop('_params')));\n  }\n\n  /**\n   * @hidden\n   * Returns a single parameter from this UrlMatcher by id\n   *\n   * @param id\n   * @param opts\n   * @returns {T|Param|any|boolean|UrlMatcher|null}\n   */\n  parameter(id: string, opts: any = {}): Param {\n    const parent = tail(this._cache.path);\n\n    return (\n      find(this._params, propEq('id', id)) ||\n      (opts.inherit !== false && parent && parent.parameter(id)) ||\n      null\n    );\n  }\n\n  /**\n   * Validates the input parameter values against this UrlMatcher\n   *\n   * Checks an object hash of parameters to validate their correctness according to the parameter\n   * types of this `UrlMatcher`.\n   *\n   * @param params The object hash of parameters to validate.\n   * @returns Returns `true` if `params` validates, otherwise `false`.\n   */\n  validates(params: RawParams): boolean {\n    const validParamVal = (param: Param, val: any) => \n        !param || param.validates(val);\n    return pairs(params || {}).map(([key, val]) => validParamVal(this.parameter(key), val)).reduce(allTrueR, true);\n  }\n\n  /**\n   * Given a set of parameter values, creates a URL from this UrlMatcher.\n   *\n   * Creates a URL that matches this pattern by substituting the specified values\n   * for the path and search parameters.\n   *\n   * @example\n   * ```js\n   *\n   * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n   * // returns '/user/bob?q=yes'\n   * ```\n   *\n   * @param values  the values to substitute for the parameters in this pattern.\n   * @returns the formatted URL (path and optionally search part).\n   */\n  format(values: RawParams = {}) {\n    if (!this.validates(values)) return null;\n\n    // Build the full path of UrlMatchers (including all parent UrlMatchers)\n    let urlMatchers = this._cache.path.slice().concat(this);\n\n    // Extract all the static segments and Params into an ordered array\n    let pathSegmentsAndParams: Array<string|Param> =\n        urlMatchers.map(UrlMatcher.pathSegmentsAndParams).reduce(unnestR, []);\n\n    // Extract the query params into a separate array\n    let queryParams: Array<Param> =\n        urlMatchers.map(UrlMatcher.queryParams).reduce(unnestR, []);\n\n    /**\n     * Given a Param,\n     * Applies the parameter value, then returns details about it\n     */\n    function getDetails(param: Param): ParamDetails {\n      // Normalize to typed value\n      let value = param.value(values[param.id]);\n      let isDefaultValue = param.isDefaultValue(value);\n      // Check if we're in squash mode for the parameter\n      let squash = isDefaultValue ? param.squash : false;\n      // Allow the Parameter's Type to encode the value\n      let encoded = param.type.encode(value);\n\n      return { param, value, isDefaultValue, squash, encoded };\n    }\n\n    // Build up the path-portion from the list of static segments and parameters\n    let pathString = pathSegmentsAndParams.reduce((acc: string, x: string|Param) => {\n      // The element is a static segment (a raw string); just append it\n      if (isString(x)) return acc + x;\n\n      // Otherwise, it's a Param.  Fetch details about the parameter value\n      let {squash, encoded, param} = getDetails(<Param> x);\n\n      // If squash is === true, try to remove a slash from the path\n      if (squash === true) return (acc.match(/\\/$/)) ? acc.slice(0, -1) : acc;\n      // If squash is a string, use the string for the param value\n      if (isString(squash)) return acc + squash;\n      if (squash !== false) return acc; // ?\n      if (encoded == null) return acc;\n      // If this parameter value is an array, encode the value using encodeDashes\n      if (isArray(encoded)) return acc + map(<string[]> encoded, UrlMatcher.encodeDashes).join(\"-\");\n      // If the parameter type is \"raw\", then do not encodeURIComponent\n      if (param.type.raw) return acc + encoded;\n      // Encode the value\n      return acc + encodeURIComponent(<string> encoded);\n    }, \"\");\n\n    // Build the query string by applying parameter values (array or regular)\n    // then mapping to key=value, then flattening and joining using \"&\"\n    let queryString = queryParams.map((param: Param) => {\n      let {squash, encoded, isDefaultValue} = getDetails(param);\n      if (encoded == null || (isDefaultValue && squash !== false)) return;\n      if (!isArray(encoded)) encoded = [<string> encoded];\n      if (encoded.length === 0) return;\n      if (!param.type.raw) encoded = map(<string[]> encoded, encodeURIComponent);\n\n      return (<string[]> encoded).map(val => `${param.id}=${val}`);\n    }).filter(identity).reduce(unnestR, []).join(\"&\");\n\n    // Concat the pathstring with the queryString (if exists) and the hashString (if exists)\n    return pathString + (queryString ? `?${queryString}` : \"\") + (values[\"#\"] ? \"#\" + values[\"#\"] : \"\");\n  }\n\n  /** @hidden */\n  static encodeDashes(str: string) { // Replace dashes with encoded \"\\-\"\n    return encodeURIComponent(str).replace(/-/g, c => `%5C%${c.charCodeAt(0).toString(16).toUpperCase()}`);\n  }\n\n  /** @hidden Given a matcher, return an array with the matcher's path segments and path params, in order */\n  static pathSegmentsAndParams(matcher: UrlMatcher) {\n    let staticSegments = matcher._segments;\n    let pathParams = matcher._params.filter(p => p.location === DefType.PATH);\n    return arrayTuples(staticSegments, pathParams.concat(undefined)).reduce(unnestR, []).filter(x => x !== \"\" && isDefined(x));\n  }\n\n  /** @hidden Given a matcher, return an array with the matcher's query params */\n  static queryParams(matcher: UrlMatcher): Param[] {\n    return matcher._params.filter(p => p.location === DefType.SEARCH);\n  }\n}\n\n/** @hidden */\ninterface ParamDetails {\n  param: Param;\n  value: any;\n  isDefaultValue: boolean;\n  squash: (boolean|string);\n  encoded: (string|string[]);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./url/urlMatcher.ts\n **/","/** @module params */ /** for typedoc */\nimport {fromJson, toJson, identity, equals, inherit, map, extend} from \"../common/common\";\nimport {isDefined} from \"../common/predicates\";\nimport {is, val} from \"../common/hof\";\nimport {services} from \"../common/coreservices\";\nimport {ParamType} from \"./type\";\nimport {ParamTypeDefinition} from \"./interface\";\n\n// Use tildes to pre-encode slashes.\n// If the slashes are simply URLEncoded, the browser can choose to pre-decode them,\n// and bidirectional encoding/decoding fails.\n// Tilde was chosen because it's not a RFC 3986 section 2.2 Reserved Character\nfunction valToString(val: any) { return val != null ? val.toString().replace(/(~|\\/)/g, m => ({'~':'~~', '/':'~2F'}[m])) : val; }\nfunction valFromString(val: string) { return val != null ? val.toString().replace(/(~~|~2F)/g, m => ({'~~':'~', '~2F':'/'}[m])) : val; }\n\nexport class ParamTypes {\n  types: any;\n  enqueue: boolean = true;\n  typeQueue: any[] = [];\n\n  private defaultTypes: any = {\n    \"hash\": {\n      encode: valToString,\n      decode: valFromString,\n      is: is(String),\n      pattern: /.*/,\n      equals: (a: any, b: any) => a == b // allow coersion for null/undefined/\"\"\n    },\n    \"string\": {\n      encode: valToString,\n      decode: valFromString,\n      is: is(String),\n      pattern: /[^/]*/\n    },\n    \"int\": {\n      encode: valToString,\n      decode(val: string) { return parseInt(val, 10); },\n      is(val: any) { return isDefined(val) && this.decode(val.toString()) === val; },\n      pattern: /-?\\d+/\n    },\n    \"bool\": {\n      encode: (val: any) => val && 1 || 0,\n      decode: (val: string) => parseInt(val, 10) !== 0,\n      is: is(Boolean),\n      pattern: /0|1/\n    },\n    \"date\": {\n      encode(val: any) {\n        return !this.is(val) ? undefined : [\n          val.getFullYear(),\n          ('0' + (val.getMonth() + 1)).slice(-2),\n          ('0' + val.getDate()).slice(-2)\n        ].join(\"-\");\n      },\n      decode(val: string) {\n        if (this.is(val)) return <any> val as Date;\n        let match = this.capture.exec(val);\n        return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n      },\n      is: (val: any) => val instanceof Date && !isNaN(val.valueOf()),\n      equals(l: any, r: any) {\n        return ['getFullYear', 'getMonth', 'getDate']\n            .reduce((acc, fn) => acc && l[fn]() === r[fn](), true)\n      },\n      pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n      capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\n    },\n    \"json\": {\n      encode: toJson,\n      decode: fromJson,\n      is: is(Object),\n      equals: equals,\n      pattern: /[^/]*/\n    },\n    \"any\": { // does not encode/decode\n      encode: identity,\n      decode: identity,\n      equals: equals,\n      pattern: /.*/\n    }\n  };\n\n  constructor() {\n    // Register default types. Store them in the prototype of this.types.\n    const makeType = (definition: ParamTypeDefinition, name: string) => new ParamType(extend({ name }, definition));\n    this.types = inherit(map(this.defaultTypes, makeType), {});\n  }\n\n  type(name: string, definition?: ParamTypeDefinition, definitionFn?: () => ParamTypeDefinition) {\n    if (!isDefined(definition)) return this.types[name];\n    if (this.types.hasOwnProperty(name)) throw new Error(`A type named '${name}' has already been defined.`);\n\n    this.types[name] = new ParamType(extend({ name }, definition));\n\n    if (definitionFn) {\n      this.typeQueue.push({ name, def: definitionFn });\n      if (!this.enqueue) this._flushTypeQueue();\n    }\n    return this;\n  }\n\n  _flushTypeQueue() {\n    while (this.typeQueue.length) {\n      let type = this.typeQueue.shift();\n      if (type.pattern) throw new Error(\"You cannot override a type's .pattern at runtime.\");\n      extend(this.types[type.name], services.$injector.invoke(type.def));\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./params/paramTypes.ts\n **/","/** @module url */ /** for typedoc */\nimport {extend, bindFunctions, IInjectable, removeFrom} from \"../common/common\";\nimport {isFunction, isString, isDefined, isArray} from \"../common/predicates\";\nimport {UrlMatcher} from \"./urlMatcher\";\nimport {services, $InjectorLike, LocationServices} from \"../common/coreservices\";\nimport {UrlMatcherFactory} from \"./urlMatcherFactory\";\nimport {StateParams} from \"../params/stateParams\";\nimport {RawParams} from \"../params/interface\";\n\n/** @hidden */\nlet $location = services.location;\n\n/** @hidden Returns a string that is a prefix of all strings matching the RegExp */\nfunction regExpPrefix(re: RegExp) {\n  let prefix = /^\\^((?:\\\\[^a-zA-Z0-9]|[^\\\\\\[\\]\\^$*+?.()|{}]+)*)/.exec(re.source);\n  return (prefix != null) ? prefix[1].replace(/\\\\(.)/g, \"$1\") : '';\n}\n\n/** @hidden Interpolates matched values into a String.replace()-style pattern */\nfunction interpolate(pattern: string, match: RegExpExecArray) {\n  return pattern.replace(/\\$(\\$|\\d{1,2})/, function (m, what) {\n    return match[what === '$' ? 0 : Number(what)];\n  });\n}\n\n/** @hidden */\nfunction handleIfMatch($injector: $InjectorLike, $stateParams: RawParams, handler: IInjectable, match: RawParams) {\n  if (!match) return false;\n  let result = $injector.invoke(handler, handler, { $match: match, $stateParams: $stateParams });\n  return isDefined(result) ? result : true;\n}\n\n/** @hidden */\nfunction appendBasePath(url: string, isHtml5: boolean, absolute: boolean): string {\n  let baseHref = services.locationConfig.baseHref();\n  if (baseHref === '/') return url;\n  if (isHtml5) return baseHref.slice(0, -1) + url;\n  if (absolute) return baseHref.slice(1) + url;\n  return url;\n}\n\n// TODO: Optimize groups of rules with non-empty prefix into some sort of decision tree\n/** @hidden */\nfunction update(rules: Function[], otherwiseFn: Function, evt?: any) {\n  if (evt && evt.defaultPrevented) return;\n\n  function check(rule: Function) {\n    let handled = rule(services.$injector, $location);\n\n    if (!handled) return false;\n    if (isString(handled)) {\n      $location.setUrl(handled, true);\n    }\n    return true;\n  }\n  let n = rules.length;\n\n  for (let i = 0; i < n; i++) {\n    if (check(rules[i])) return;\n  }\n  // always check otherwise last to allow dynamic updates to the set of rules\n  if (otherwiseFn) check(otherwiseFn);\n}\n\n\n/**\n * Manages rules for client-side URL\n *\n * This class manages the router rules for what to do when the URL changes.\n */\nexport class UrlRouterProvider {\n  /** @hidden */\n  rules: Function[] = [];\n  /** @hidden */\n  otherwiseFn: ($injector: $InjectorLike, $location: LocationServices) => string;\n  /** @hidden */\n  interceptDeferred = false;\n\n  /** @hidden */\n  private $urlMatcherFactory: UrlMatcherFactory;\n  /** @hidden */\n  private $stateParams: StateParams;\n\n  constructor($urlMatcherFactory: UrlMatcherFactory, $stateParams: StateParams) {\n    this.$urlMatcherFactory = $urlMatcherFactory;\n    this.$stateParams = $stateParams;\n  }\n\n  /**\n   * Registers a url handler function.\n   *\n   * Registers a low level url handler (a `rule`). A rule detects specific URL patterns and returns\n   * a redirect, or performs some action.\n   *\n   * If a rule returns a string, the URL is replaced with the string, and all rules are fired again.\n   *\n   * @example\n   * ```js\n   *\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // Here's an example of how you might allow case insensitive urls\n   *   $urlRouterProvider.rule(function ($injector, $location) {\n   *     var path = $location.path(),\n   *         normalized = path.toLowerCase();\n   *\n   *     if (path !== normalized) {\n   *       return normalized;\n   *     }\n   *   });\n   * });\n   * ```\n   *\n   * @param rule\n   * Handler function that takes `$injector` and `$location` services as arguments.\n   * You can use them to detect a url and return a different url as a string.\n   *\n   * @return [[$urlRouterProvider]] (`this`)\n   */\n  rule(rule: ($injector: $InjectorLike, $location: LocationServices) => string): UrlRouterProvider {\n    if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n    this.rules.push(rule);\n    return this;\n  };\n\n  /**\n   * Remove a rule previously registered\n   *\n   * @param rule the matcher rule that was previously registered using [[rule]]\n   * @return true if the rule was found (and removed)\n   */\n  removeRule(rule): boolean {\n    return this.rules.length !== removeFrom(this.rules, rule).length;\n  }\n\n  /**\n   * Defines the path or behavior to use when no url can be matched.\n   *\n   * @example\n   * ```js\n   *\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // if the path doesn't match any of the urls you configured\n   *   // otherwise will take care of routing the user to the\n   *   // specified url\n   *   $urlRouterProvider.otherwise('/index');\n   *\n   *   // Example of using function rule as param\n   *   $urlRouterProvider.otherwise(function ($injector, $location) {\n   *     return '/a/valid/url';\n   *   });\n   * });\n   * ```\n   *\n   * @param rule \n   * The url path you want to redirect to or a function rule that returns the url path or performs a `$state.go()`. \n   * The function version is passed two params: `$injector` and `$location` services, and should return a url string.\n   *\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n   */\n  otherwise(rule: string | (($injector: $InjectorLike, $location: LocationServices) => string)): UrlRouterProvider {\n    if (!isFunction(rule) && !isString(rule)) throw new Error(\"'rule' must be a string or function\");\n    this.otherwiseFn = isString(rule) ? () => rule : rule;\n    return this;\n  };\n\n  /**\n   * Registers a handler for a given url matching. \n   * \n   * If the handler is a string, it is\n   * treated as a redirect, and is interpolated according to the syntax of match\n   * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n   *\n   * If the handler is a function, it is injectable.\n   * It gets invoked if `$location` matches.\n   * You have the option of inject the match object as `$match`.\n   *\n   * The handler can return\n   *\n   * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n   *   will continue trying to find another one that matches.\n   * - **string** which is treated as a redirect and passed to `$location.url()`\n   * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n   *\n   * @example\n   * ```js\n   * \n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n   *     if ($state.$current.navigable !== state ||\n   *         !equalForKeys($match, $stateParams) {\n   *      $state.transitionTo(state, $match, false);\n   *     }\n   *   });\n   * });\n   * ```\n   *\n   * @param what A pattern string to match, compiled as a [[UrlMatcher]].\n   * @param handler The path (or function that returns a path) that you want to redirect your user to.\n   * @param ruleCallback [optional] A callback that receives the `rule` registered with [[UrlMatcher.rule]]\n   *\n   * Note: the handler may also invoke arbitrary code, such as `$state.go()`\n   */\n  when(what: (RegExp|UrlMatcher|string), handler: string|IInjectable, ruleCallback = function(rule) {}) {\n    let {$urlMatcherFactory, $stateParams} = this;\n    let redirect, handlerIsString = isString(handler);\n\n    // @todo Queue this\n    if (isString(what)) what = $urlMatcherFactory.compile(<string> what);\n\n    if (!handlerIsString && !isFunction(handler) && !isArray(handler))\n      throw new Error(\"invalid 'handler' in when()\");\n\n    let strategies = {\n      matcher: function (_what, _handler) {\n        if (handlerIsString) {\n          redirect = $urlMatcherFactory.compile(_handler);\n          _handler = ['$match', redirect.format.bind(redirect)];\n        }\n        return extend(function () {\n          return handleIfMatch(services.$injector, $stateParams, _handler, _what.exec($location.path(), $location.search(), $location.hash()));\n        }, {\n          prefix: isString(_what.prefix) ? _what.prefix : ''\n        });\n      },\n      regex: function (_what, _handler) {\n        if (_what.global || _what.sticky) throw new Error(\"when() RegExp must not be global or sticky\");\n\n        if (handlerIsString) {\n          redirect = _handler;\n          _handler = ['$match', ($match) => interpolate(redirect, $match)];\n        }\n        return extend(function () {\n          return handleIfMatch(services.$injector, $stateParams, _handler, _what.exec($location.path()));\n        }, {\n          prefix: regExpPrefix(_what)\n        });\n      }\n    };\n\n    let check = {\n      matcher: $urlMatcherFactory.isMatcher(what),\n      regex: what instanceof RegExp\n    };\n\n    for (var n in check) {\n      if (check[n]) {\n        let rule = strategies[n](what, handler);\n        ruleCallback(rule);\n        return this.rule(rule);\n      }\n    }\n\n    throw new Error(\"invalid 'what' in when()\");\n  };\n\n  /**\n   * Disables monitoring of the URL.\n   *\n   * Call this method before UI-Router has bootstrapped.\n   * It will stop UI-Router from performing the initial url sync.\n   *\n   * This can be useful to perform some asynchronous initialization before the router starts.\n   * Once the initialization is complete, call [[listen]] to tell UI-Router to start watching and synchronizing the URL.\n   *\n   * @example\n   * ```js\n   *\n   * var app = angular.module('app', ['ui.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // Prevent $urlRouter from automatically intercepting URL changes;\n   *   $urlRouterProvider.deferIntercept();\n   * })\n   *\n   * app.run(function (MyService, $urlRouter, $http) {\n   *   $http.get(\"/stuff\").then(function(resp) {\n   *     MyService.doStuff(resp.data);\n   *     $urlRouter.listen();\n   *     $urlRouter.sync();\n   *   });\n   * });\n   * ```\n   *\n   * @param defer Indicates whether to defer location change interception. Passing\n   *        no parameter is equivalent to `true`.\n   */\n  deferIntercept(defer) {\n    if (defer === undefined) defer = true;\n    this.interceptDeferred = defer;\n  };\n}\n\nexport class UrlRouter {\n  /** @hidden */\n  private location: string;\n  /** @hidden */\n  private listener: Function;\n  /** @hidden */\n  private urlRouterProvider: UrlRouterProvider;\n\n\n  /** @hidden */\n  constructor(urlRouterProvider: UrlRouterProvider) {\n    this.urlRouterProvider = urlRouterProvider;\n    bindFunctions(UrlRouter.prototype, this, this);\n  }\n\n  /**\n   * Checks the current URL for a matching rule\n   *\n   * Triggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.\n   * This method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,\n   * perform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed\n   * with the transition by calling `$urlRouter.sync()`.\n   *\n   * @example\n   * ```js\n   *\n   * angular.module('app', ['ui.router'])\n   *   .run(function($rootScope, $urlRouter) {\n   *     $rootScope.$on('$locationChangeSuccess', function(evt) {\n   *       // Halt state change from even starting\n   *       evt.preventDefault();\n   *       // Perform custom logic\n   *       var meetsRequirement = ...\n   *       // Continue with the update and state transition if logic allows\n   *       if (meetsRequirement) $urlRouter.sync();\n   *     });\n   * });\n   * ```\n   */\n  sync() {\n    update(this.urlRouterProvider.rules, this.urlRouterProvider.otherwiseFn);\n  }\n\n  /**\n   * Starts listening for URL changes\n   *\n   * Call this sometime after calling [[deferIntercept]] to start monitoring the url.\n   * This causes [[UrlRouter]] to start listening for changes to the URL, if it wasn't already listening.\n   */\n  listen(): Function {\n    return this.listener = this.listener || $location.onChange(evt => update(this.urlRouterProvider.rules, this.urlRouterProvider.otherwiseFn, evt));\n  }\n\n  /**\n   * Internal API.\n   */\n  update(read?: boolean) {\n    if (read) {\n      this.location = $location.path();\n      return;\n    }\n    if ($location.path() === this.location) return;\n\n    $location.setUrl(this.location, true);\n  }\n\n  /**\n   * Internal API.\n   *\n   * Pushes a new location to the browser history.\n   *\n   * @param urlMatcher\n   * @param params\n   * @param options\n   */\n  push(urlMatcher: UrlMatcher, params: StateParams, options: { replace?: (string|boolean) }) {\n    let replace = options && !!options.replace;\n    $location.setUrl(urlMatcher.format(params || {}), replace);\n  }\n\n  /**\n   * Builds and returns a URL with interpolated parameters\n   *\n   * @example\n   * ```js\n   *\n   * $bob = $urlRouter.href(new UrlMatcher(\"/about/:person\"), {\n   *   person: \"bob\"\n   * });\n   * // $bob == \"/about/bob\";\n   * ```\n   *\n   * @param urlMatcher The [[UrlMatcher]] object which is used as the template of the URL to generate.\n   * @param params An object of parameter values to fill the matcher's required parameters.\n   * @param options Options object. The options are:\n   *\n   * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n   *\n   * @returns Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n   */\n  href(urlMatcher: UrlMatcher, params: any, options: { absolute: boolean }): string {\n    if (!urlMatcher.validates(params)) return null;\n\n    let url = urlMatcher.format(params);\n    options = options || { absolute: false };\n\n    let cfg = services.locationConfig;\n    let isHtml5 = cfg.html5Mode();\n    if (!isHtml5 && url !== null) {\n      url = \"#\" + cfg.hashPrefix() + url;\n    }\n    url = appendBasePath(url, isHtml5, options.absolute);\n\n    if (!options.absolute || !url) {\n      return url;\n    }\n\n    let slash = (!isHtml5 && url ? '/' : ''), port = cfg.port();\n    port = <any> (port === 80 || port === 443 ? '' : ':' + port);\n\n    return [cfg.protocol(), '://', cfg.host(), port, slash, url].join('');\n  }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./url/urlRouter.ts\n **/","/** @module transition */ /** for typedoc */\nimport {\n    IHookRegistry, TransitionOptions, HookMatchCriteria, HookRegOptions,\n    TransitionStateHookFn, TransitionHookFn\n} from \"./interface\";\n\nimport {Transition} from \"./transition\";\nimport {HookRegistry} from \"./hookRegistry\";\nimport {TargetState} from \"../state/targetState\";\nimport {PathNode} from \"../path/node\";\nimport {IEventHook} from \"./interface\";\nimport {ViewService} from \"../view/view\";\nimport {UIRouter} from \"../router\";\n\nimport {registerEagerResolvePath, registerLazyResolveState} from \"../hooks/resolve\";\nimport {registerLoadEnteringViews, registerActivateViews} from \"../hooks/views\";\nimport {registerUpdateUrl} from \"../hooks/url\";\nimport {registerRedirectToHook} from \"../hooks/redirectTo\";\nimport {registerOnExitHook, registerOnRetainHook, registerOnEnterHook} from \"../hooks/onEnterExitRetain\";\nimport {registerLazyLoadHook} from \"../hooks/lazyLoadStates\";\n\n/**\n * The default [[Transition]] options.\n *\n * Include this object when applying custom defaults:\n * let reloadOpts = { reload: true, notify: true }\n * let options = defaults(theirOpts, customDefaults, defaultOptions);\n */\nexport let defaultTransOpts: TransitionOptions = {\n  location    : true,\n  relative    : null,\n  inherit     : false,\n  notify      : true,\n  reload      : false,\n  custom      : {},\n  current     : () => null,\n  source      : \"unknown\"\n};\n\n/**\n * This class provides services related to Transitions.\n *\n * - Most importantly, it allows global Transition Hooks to be registered.\n * - It allows the default transition error handler to be set.\n * - It also has a factory function for creating new [[Transition]] objects, (used internally by the [[StateService]]).\n *\n * At bootstrap, [[UIRouter]] creates a single instance (singleton) of this class.\n */\nexport class TransitionService implements IHookRegistry {\n  /** @hidden */\n  public $view: ViewService;\n\n  /**\n   * This object has hook de-registration functions for the built-in hooks.\n   * This can be used by third parties libraries that wish to customize the behaviors\n   *\n   * @hidden\n   */\n  _deregisterHookFns: {\n    redirectTo: Function;\n    onExit: Function;\n    onRetain: Function;\n    onEnter: Function;\n    eagerResolve: Function;\n    lazyResolve: Function;\n    loadViews: Function;\n    activateViews: Function;\n    updateUrl: Function;\n    lazyLoad: Function;\n  };\n\n  constructor(private _router: UIRouter) {\n    this.$view = _router.viewService;\n    HookRegistry.mixin(new HookRegistry(), this);\n    this._deregisterHookFns = <any> {};\n    this.registerTransitionHooks();\n  }\n\n  /** @hidden */\n  private registerTransitionHooks() {\n    let fns = this._deregisterHookFns;\n\n    // Wire up redirectTo hook\n    fns.redirectTo    = registerRedirectToHook(this);\n    \n    // Wire up onExit/Retain/Enter state hooks\n    fns.onExit        = registerOnExitHook(this);\n    fns.onRetain      = registerOnRetainHook(this);\n    fns.onEnter       = registerOnEnterHook(this);\n\n    // Wire up Resolve hooks\n    fns.eagerResolve  = registerEagerResolvePath(this);\n    fns.lazyResolve   = registerLazyResolveState(this);\n\n    // Wire up the View management hooks\n    fns.loadViews     = registerLoadEnteringViews(this);\n    fns.activateViews = registerActivateViews(this);\n\n    // After globals.current is updated at priority: 10000\n    fns.updateUrl     = registerUpdateUrl(this);\n\n    // Lazy load state trees\n    fns.lazyLoad      = registerLazyLoadHook(this);\n  }\n\n  /** @inheritdoc */\n  onBefore (matchCriteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions) : Function { throw \"\"; };\n  /** @inheritdoc */\n  onStart (matchCriteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions) : Function { throw \"\"; };\n  /** @inheritdoc */\n  onExit (matchCriteria: HookMatchCriteria, callback: TransitionStateHookFn, options?: HookRegOptions) : Function { throw \"\"; };\n  /** @inheritdoc */\n  onRetain (matchCriteria: HookMatchCriteria, callback: TransitionStateHookFn, options?: HookRegOptions) : Function { throw \"\"; };\n  /** @inheritdoc */\n  onEnter (matchCriteria: HookMatchCriteria, callback: TransitionStateHookFn, options?: HookRegOptions) : Function { throw \"\"; };\n  /** @inheritdoc */\n  onFinish (matchCriteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions) : Function { throw \"\"; };\n  /** @inheritdoc */\n  onSuccess (matchCriteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions) : Function { throw \"\"; };\n  /** @inheritdoc */\n  onError (matchCriteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions) : Function { throw \"\"; };\n\n\n  /** @hidden */\n  getHooks  : (hookName: string) => IEventHook[];\n\n  /**\n   * Creates a new [[Transition]] object\n   *\n   * This is a factory function for creating new Transition objects.\n   * It is used internally by the [[StateService]] and should generally not be called by application code.\n   *\n   * @param fromPath the path to the current state (the from state)\n   * @param targetState the target state (destination)\n   * @returns a Transition\n   */\n  create(fromPath: PathNode[], targetState: TargetState): Transition {\n    return new Transition(fromPath, targetState, this._router);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./transition/transitionService.ts\n **/","/** @module hooks */ /** for typedoc */\nimport {noop} from \"../common/common\";\nimport {Transition} from \"../transition/transition\";\nimport {State} from \"../state/stateObject\";\nimport {ResolveContext} from \"../resolve/resolveContext\";\nimport {TransitionStateHookFn, TransitionHookFn} from \"../transition/interface\";\nimport {TransitionService} from \"../transition/transitionService\";\nimport {val} from \"../common/hof\";\n\n/**\n * A [[TransitionHookFn]] which resolves all EAGER Resolvables in the To Path\n *\n * Registered using `transitionService.onStart({}, eagerResolvePath);`\n *\n * When a Transition starts, this hook resolves all the EAGER Resolvables, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nconst eagerResolvePath: TransitionHookFn = (trans: Transition) =>\n    new ResolveContext(trans.treeChanges().to)\n        .resolvePath(\"EAGER\", trans)\n        .then(noop);\n\nexport const registerEagerResolvePath = (transitionService: TransitionService) =>\n    transitionService.onStart({}, eagerResolvePath, {priority: 1000});\n\n/**\n * A [[TransitionHookFn]] which resolves all LAZY Resolvables for the state (and all its ancestors) in the To Path\n *\n * Registered using `transitionService.onEnter({ entering: () => true }, lazyResolveState);`\n *\n * When a State is being entered, this hook resolves all the Resolvables for this state, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nconst lazyResolveState: TransitionStateHookFn = (trans: Transition, state: State) =>\n    new ResolveContext(trans.treeChanges().to)\n        .subContext(state)\n        .resolvePath(\"LAZY\", trans)\n        .then(noop);\n\nexport const registerLazyResolveState = (transitionService: TransitionService) =>\n    transitionService.onEnter({ entering: val(true) }, lazyResolveState, {priority: 1000});\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./hooks/resolve.ts\n **/","/** @module hooks */ /** for typedoc */\nimport {noop} from \"../common/common\";\nimport {services} from \"../common/coreservices\";\nimport {Transition} from \"../transition/transition\";\nimport {ViewService} from \"../view/view\";\nimport {ViewConfig} from \"../view/interface\";\nimport {TransitionHookFn} from \"../transition/interface\";\nimport {TransitionService} from \"../transition/transitionService\";\n\n\n/**\n * A [[TransitionHookFn]] which waits for the views to load\n *\n * Registered using `transitionService.onStart({}, loadEnteringViews);`\n *\n * Allows the views to do async work in [[ViewConfig.load]] before the transition continues.\n * In angular 1, this includes loading the templates.\n */\nconst loadEnteringViews: TransitionHookFn = (transition: Transition) => {\n  let enteringViews = transition.views(\"entering\");\n  if (!enteringViews.length) return;\n  return services.$q.all(enteringViews.map(view => view.load())).then(noop);\n};\n\nexport const registerLoadEnteringViews = (transitionService: TransitionService) =>\n    transitionService.onStart({}, loadEnteringViews);\n\n/**\n * A [[TransitionHookFn]] which activates the new views when a transition is successful.\n *\n * Registered using `transitionService.onSuccess({}, activateViews);`\n *\n * After a transition is complete, this hook deactivates the old views from the previous state,\n * and activates the new views from the destination state.\n *\n * See [[ViewService]]\n */\nconst activateViews: TransitionHookFn = (transition: Transition) => {\n  let enteringViews = transition.views(\"entering\");\n  let exitingViews = transition.views(\"exiting\");\n  if (!enteringViews.length && !exitingViews.length) return;\n\n  let $view: ViewService = transition.router.viewService;\n\n  exitingViews.forEach((vc: ViewConfig) => $view.deactivateViewConfig(vc));\n  enteringViews.forEach((vc: ViewConfig) => $view.activateViewConfig(vc));\n\n  $view.sync();\n};\n\nexport const registerActivateViews = (transitionService: TransitionService) =>\n    transitionService.onSuccess({}, activateViews);\n\n\n\n/** WEBPACK FOOTER **\n ** ./hooks/views.ts\n **/","/** @module hooks */ /** */\nimport {UrlRouter} from \"../url/urlRouter\";\nimport {StateService} from \"../state/stateService\";\nimport {Transition} from \"../transition/transition\";\nimport {TransitionHookFn} from \"../transition/interface\";\nimport {TransitionService} from \"../transition/transitionService\";\n\n/** \n * A [[TransitionHookFn]] which updates the URL after a successful transition\n * \n * Registered using `transitionService.onSuccess({}, updateUrl);`\n */\nconst updateUrl: TransitionHookFn = (transition: Transition) => {\n  let options = transition.options();\n  let $state: StateService = transition.router.stateService;\n  let $urlRouter: UrlRouter = transition.router.urlRouter;\n\n  // Dont update the url in these situations:\n  // The transition was triggered by a URL sync (options.source === 'url')\n  // The user doesn't want the url to update (options.location === false)\n  // The destination state, and all parents have no navigable url\n  if (options.source !== 'url' && options.location && $state.$current.navigable) {\n    var urlOptions = {replace: options.location === 'replace'};\n    $urlRouter.push($state.$current.navigable.url, $state.params, urlOptions);\n  }\n\n  $urlRouter.update(true);\n};\n\nexport const registerUpdateUrl = (transitionService: TransitionService) =>\n    transitionService.onSuccess({}, updateUrl, {priority: 9999});\n\n\n\n/** WEBPACK FOOTER **\n ** ./hooks/url.ts\n **/","/** @module hooks */ /** */\nimport {isString, isFunction} from \"../common/predicates\"\nimport {Transition} from \"../transition/transition\";\nimport {services} from \"../common/coreservices\";\nimport {TargetState} from \"../state/targetState\";\nimport {TransitionService} from \"../transition/transitionService\";\nimport {TransitionHookFn} from \"../transition/interface\";\n\n/**\n * A [[TransitionHookFn]] that redirects to a different state or params\n *\n * Registered using `transitionService.onStart({ to: (state) => !!state.redirectTo }, redirectHook);`\n * \n * See [[StateDeclaration.redirectTo]]\n */\nconst redirectToHook: TransitionHookFn = (trans: Transition) => {\n  let redirect = trans.to().redirectTo;\n  if (!redirect) return;\n\n  function handleResult(result: any) {\n    let $state = trans.router.stateService;\n\n    if (result instanceof TargetState) return result;\n    if (isString(result)) return $state.target(<any> result, trans.params(), trans.options());\n    if (result['state'] || result['params'])\n      return $state.target(result['state'] || trans.to(), result['params'] || trans.params(), trans.options());\n  }\n\n  if (isFunction(redirect)) {\n    return services.$q.when(redirect(trans)).then(handleResult);\n  }\n  return handleResult(redirect);\n};\n\nexport const registerRedirectToHook = (transitionService: TransitionService) =>\n    transitionService.onStart({to: (state) => !!state.redirectTo}, redirectToHook);\n\n\n\n/** WEBPACK FOOTER **\n ** ./hooks/redirectTo.ts\n **/","/** @module hooks */ /** for typedoc */\nimport {TransitionStateHookFn} from \"../transition/interface\";\nimport {State} from \"../state/stateObject\";\nimport {Transition} from \"../transition/transition\";\nimport {TransitionService} from \"../transition/transitionService\";\n\n/**\n * A factory which creates an onEnter, onExit or onRetain transition hook function\n *\n * The returned function invokes the (for instance) state.onEnter hook when the\n * state is being entered.\n *\n * @hidden\n */\nfunction makeEnterExitRetainHook(hookName: string): TransitionStateHookFn {\n  return (transition: Transition, state: State) => {\n    let hookFn: TransitionStateHookFn = state[hookName];\n    return hookFn(transition, state);\n  }\n}\n\n/**\n * The [[TransitionStateHookFn]] for onExit\n *\n * When the state is being exited, the state's .onExit function is invoked.\n *\n * Registered using `transitionService.onExit({ exiting: (state) => !!state.onExit }, onExitHook);`\n *\n * See: [[IHookRegistry.onExit]]\n */\nconst onExitHook: TransitionStateHookFn = makeEnterExitRetainHook('onExit');\nexport const registerOnExitHook = (transitionService: TransitionService) =>\n    transitionService.onExit({exiting: state => !!state.onExit}, onExitHook);\n\n/**\n * The [[TransitionStateHookFn]] for onRetain\n *\n * When the state was already entered, and is not being exited or re-entered, the state's .onRetain function is invoked.\n *\n * Registered using `transitionService.onRetain({ retained: (state) => !!state.onRetain }, onRetainHook);`\n *\n * See: [[IHookRegistry.onRetain]]\n */\nconst onRetainHook: TransitionStateHookFn = makeEnterExitRetainHook('onRetain');\nexport const registerOnRetainHook = (transitionService: TransitionService) =>\n    transitionService.onRetain({retained: state => !!state.onRetain}, onRetainHook);\n\n/**\n * The [[TransitionStateHookFn]] for onEnter\n *\n * When the state is being entered, the state's .onEnter function is invoked.\n *\n * Registered using `transitionService.onEnter({ entering: (state) => !!state.onEnter }, onEnterHook);`\n *\n * See: [[IHookRegistry.onEnter]]\n */\nconst onEnterHook: TransitionStateHookFn = makeEnterExitRetainHook('onEnter');\nexport const registerOnEnterHook = (transitionService: TransitionService) =>\n    transitionService.onEnter({entering: state => !!state.onEnter}, onEnterHook);\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./hooks/onEnterExitRetain.ts\n **/","/** @module hooks */ /** */\nimport {Transition} from \"../transition/transition\";\nimport {TransitionService} from \"../transition/transitionService\";\nimport {TransitionHookFn} from \"../transition/interface\";\nimport {StateDeclaration, LazyLoadResult} from \"../state/interface\";\nimport {State} from \"../state/stateObject\";\nimport {services} from \"../common/coreservices\";\n\n/**\n * A [[TransitionHookFn]] that lazy loads a state tree.\n *\n * When transitioning to a state \"abc\" which has a `lazyLoad` function defined:\n * - Invoke the `lazyLoad` function\n *   - The function should return a promise for an array of lazy loaded [[StateDeclaration]]s\n * - Wait for the promise to resolve\n * - Deregister the original state \"abc\"\n *   - The original state definition is a placeholder for the lazy loaded states\n * - Register the new states\n * - Retry the transition\n *\n * See [[StateDeclaration.lazyLoad]]\n */\nconst lazyLoadHook: TransitionHookFn = (transition: Transition) => {\n  var toState = transition.to();\n  let registry = transition.router.stateRegistry;\n\n  function retryOriginalTransition() {\n    if (transition.options().source === 'url') {\n      let loc = services.location, path = loc.path(), search = loc.search(), hash = loc.hash();\n\n      let matchState = state => [state, state.url && state.url.exec(path, search, hash)];\n      let matches = registry.get().map(s => s.$$state()).map(matchState).filter(([state, params]) => !!params);\n\n      if (matches.length) {\n        let [state, params] = matches[0];\n        return transition.router.stateService.target(state, params, transition.options());\n      }\n      transition.router.urlRouter.sync();\n    }\n\n    // The original transition was not triggered via url sync\n    // The lazy state should be loaded now, so re-try the original transition\n    let orig = transition.targetState();\n    return transition.router.stateService.target(orig.identifier(), orig.params(), orig.options());\n  }\n\n  /**\n   * Replace the placeholder state with the newly loaded states from the NgModule.\n   */\n  function updateStateRegistry(result: LazyLoadResult) {\n    // deregister placeholder state\n    registry.deregister(transition.$to());\n    if (result && Array.isArray(result.states)) {\n      result.states.forEach(state => registry.register(state));\n    }\n  }\n\n  let hook = toState.lazyLoad;\n  // Store/get the lazy load promise on/from the hookfn so it doesn't get re-invoked\n  let promise = hook['_promise'];\n  if (!promise) {\n    promise = hook['_promise'] = hook(transition).then(updateStateRegistry);\n    const cleanup = () => delete hook['_promise'];\n    promise.then(cleanup, cleanup);\n  }\n\n  return promise.then(retryOriginalTransition);\n};\n\nexport const registerLazyLoadHook = (transitionService: TransitionService) =>\n    transitionService.onBefore({ to: (state) => !!state.lazyLoad }, lazyLoadHook);\n\n\n\n/** WEBPACK FOOTER **\n ** ./hooks/lazyLoadStates.ts\n **/","/** @module view */ /** for typedoc */\nimport {equals, applyPairs, removeFrom, TypedMap} from \"../common/common\";\nimport {curry, prop} from \"../common/hof\";\nimport {isString, isArray} from \"../common/predicates\";\nimport {trace} from \"../common/trace\";\nimport {PathNode} from \"../path/node\";\n\nimport {ActiveUIView, ViewContext, ViewConfig} from \"./interface\";\nimport {_ViewDeclaration} from \"../state/interface\";\n\nexport type ViewConfigFactory = (path: PathNode[], decl: _ViewDeclaration) => ViewConfig|ViewConfig[];\n\n/**\n * The View service\n */\nexport class ViewService {\n  private uiViews: ActiveUIView[] = [];\n  private viewConfigs: ViewConfig[] = [];\n  private _rootContext: ViewContext;\n  private _viewConfigFactories: { [key: string]: ViewConfigFactory } = {};\n\n  constructor() { }\n\n  rootContext(context?: ViewContext): ViewContext {\n    return this._rootContext = context || this._rootContext;\n  };\n\n  viewConfigFactory(viewType: string, factory: ViewConfigFactory) {\n    this._viewConfigFactories[viewType] = factory;\n  }\n\n  createViewConfig(path: PathNode[], decl: _ViewDeclaration): ViewConfig[] {\n    let cfgFactory = this._viewConfigFactories[decl.$type];\n    if (!cfgFactory) throw new Error(\"ViewService: No view config factory registered for type \" + decl.$type);\n    let cfgs = cfgFactory(path, decl);\n    return isArray(cfgs) ? cfgs : [cfgs];\n  }\n  \n  /**\n   * De-registers a ViewConfig.\n   *\n   * @param viewConfig The ViewConfig view to deregister.\n   */\n  deactivateViewConfig(viewConfig: ViewConfig) {\n    trace.traceViewServiceEvent(\"<- Removing\", viewConfig);\n    removeFrom(this.viewConfigs, viewConfig);\n  };\n\n  activateViewConfig(viewConfig: ViewConfig) {\n    trace.traceViewServiceEvent(\"-> Registering\", <any> viewConfig);\n    this.viewConfigs.push(viewConfig);\n  };\n\n  sync = () => {\n    let uiViewsByFqn: TypedMap<ActiveUIView> =\n        this.uiViews.map(uiv => [uiv.fqn, uiv]).reduce(applyPairs, <any> {});\n\n    /**\n     * Given a ui-view and a ViewConfig, determines if they \"match\".\n     *\n     * A ui-view has a fully qualified name (fqn) and a context object.  The fqn is built from its overall location in\n     * the DOM, describing its nesting relationship to any parent ui-view tags it is nested inside of.\n     *\n     * A ViewConfig has a target ui-view name and a context anchor.  The ui-view name can be a simple name, or\n     * can be a segmented ui-view path, describing a portion of a ui-view fqn.\n     *\n     * In order for a ui-view to match ViewConfig, ui-view's $type must match the ViewConfig's $type\n     *\n     * If the ViewConfig's target ui-view name is a simple name (no dots), then a ui-view matches if:\n     * - the ui-view's name matches the ViewConfig's target name\n     * - the ui-view's context matches the ViewConfig's anchor\n     *\n     * If the ViewConfig's target ui-view name is a segmented name (with dots), then a ui-view matches if:\n     * - There exists a parent ui-view where:\n     *    - the parent ui-view's name matches the first segment (index 0) of the ViewConfig's target name\n     *    - the parent ui-view's context matches the ViewConfig's anchor\n     * - And the remaining segments (index 1..n) of the ViewConfig's target name match the tail of the ui-view's fqn\n     *\n     * Example:\n     *\n     * DOM:\n     * <div ui-view>                        <!-- created in the root context (name: \"\") -->\n     *   <div ui-view=\"foo\">                <!-- created in the context named: \"A\"      -->\n     *     <div ui-view>                    <!-- created in the context named: \"A.B\"    -->\n     *       <div ui-view=\"bar\">            <!-- created in the context named: \"A.B.C\"  -->\n     *       </div>\n     *     </div>\n     *   </div>\n     * </div>\n     *\n     * uiViews: [\n     *  { fqn: \"$default\",                  creationContext: { name: \"\" } },\n     *  { fqn: \"$default.foo\",              creationContext: { name: \"A\" } },\n     *  { fqn: \"$default.foo.$default\",     creationContext: { name: \"A.B\" } }\n     *  { fqn: \"$default.foo.$default.bar\", creationContext: { name: \"A.B.C\" } }\n     * ]\n     *\n     * These four view configs all match the ui-view with the fqn: \"$default.foo.$default.bar\":\n     *\n     * - ViewConfig1: { uiViewName: \"bar\",                       uiViewContextAnchor: \"A.B.C\" }\n     * - ViewConfig2: { uiViewName: \"$default.bar\",              uiViewContextAnchor: \"A.B\" }\n     * - ViewConfig3: { uiViewName: \"foo.$default.bar\",          uiViewContextAnchor: \"A\" }\n     * - ViewConfig4: { uiViewName: \"$default.foo.$default.bar\", uiViewContextAnchor: \"\" }\n     *\n     * Using ViewConfig3 as an example, it matches the ui-view with fqn \"$default.foo.$default.bar\" because:\n     * - The ViewConfig's segmented target name is: [ \"foo\", \"$default\", \"bar\" ]\n     * - There exists a parent ui-view (which has fqn: \"$default.foo\") where:\n     *    - the parent ui-view's name \"foo\" matches the first segment \"foo\" of the ViewConfig's target name\n     *    - the parent ui-view's context \"A\" matches the ViewConfig's anchor context \"A\"\n     * - And the remaining segments [ \"$default\", \"bar\" ].join(\".\"_ of the ViewConfig's target name match\n     *   the tail of the ui-view's fqn \"default.bar\"\n     */\n    const matches = (uiView: ActiveUIView) => (viewConfig: ViewConfig) => {\n      // Don't supply an ng1 ui-view with an ng2 ViewConfig, etc\n      if (uiView.$type !== viewConfig.viewDecl.$type) return false;\n\n      // Split names apart from both viewConfig and uiView into segments\n      let vc = viewConfig.viewDecl;\n      let vcSegments = vc.$uiViewName.split(\".\");\n      let uivSegments = uiView.fqn.split(\".\");\n\n      // Check if the tails of the segment arrays match. ex, these arrays' tails match:\n      // vc: [\"foo\", \"bar\"], uiv fqn: [\"$default\", \"foo\", \"bar\"]\n      if (!equals(vcSegments, uivSegments.slice(0 - vcSegments.length)))\n        return false;\n\n      // Now check if the fqn ending at the first segment of the viewConfig matches the context:\n      // [\"$default\", \"foo\"].join(\".\") == \"$default.foo\", does the ui-view $default.foo context match?\n      let negOffset = (1 - vcSegments.length) || undefined;\n      let fqnToFirstSegment = uivSegments.slice(0, negOffset).join(\".\");\n      let uiViewContext = uiViewsByFqn[fqnToFirstSegment].creationContext;\n      return vc.$uiViewContextAnchor === (uiViewContext && uiViewContext.name);\n    };\n\n    // Return the number of dots in the fully qualified name\n    function uiViewDepth(uiView: ActiveUIView) {\n      return uiView.fqn.split(\".\").length;\n    }\n\n    // Return the ViewConfig's context's depth in the context tree.\n    function viewConfigDepth(config: ViewConfig) {\n      let context: ViewContext = config.viewDecl.$context, count = 0;\n      while (++count && context.parent) context = context.parent;\n      return count;\n    }\n\n    // Given a depth function, returns a compare function which can return either ascending or descending order\n    const depthCompare = curry((depthFn, posNeg, left, right) => posNeg * (depthFn(left) - depthFn(right)));\n\n    const matchingConfigPair = uiView => {\n      let matchingConfigs = this.viewConfigs.filter(matches(uiView));\n      if (matchingConfigs.length > 1)\n        matchingConfigs.sort(depthCompare(viewConfigDepth, -1)); // descending\n      return [uiView, matchingConfigs[0]];\n    };\n\n    const configureUIView = ([uiView, viewConfig]) => {\n      // If a parent ui-view is reconfigured, it could destroy child ui-views.\n      // Before configuring a child ui-view, make sure it's still in the active uiViews array.\n      if (this.uiViews.indexOf(uiView) !== -1)\n        uiView.configUpdated(viewConfig);\n    };\n\n    this.uiViews.sort(depthCompare(uiViewDepth, 1)).map(matchingConfigPair).forEach(configureUIView);\n  };\n\n  /**\n   * Allows a `ui-view` element to register its canonical name with a callback that allows it to\n   * be updated with a template, controller, and local variables.\n   *\n   * @param {String} name The fully-qualified name of the `ui-view` object being registered.\n   * @param {Function} configUpdatedCallback A callback that receives updates to the content & configuration\n   *                   of the view.\n   * @return {Function} Returns a de-registration function used when the view is destroyed.\n   */\n  registerUIView(uiView: ActiveUIView) {\n    trace.traceViewServiceUIViewEvent(\"-> Registering\", uiView);\n    let uiViews = this.uiViews;\n    const fqnMatches = uiv => uiv.fqn === uiView.fqn;\n    if (uiViews.filter(fqnMatches).length)\n      trace.traceViewServiceUIViewEvent(\"!!!! duplicate uiView named:\", uiView);\n\n    uiViews.push(uiView);\n    this.sync();\n\n    return () => {\n      let idx = uiViews.indexOf(uiView);\n      if (idx === -1) {\n        trace.traceViewServiceUIViewEvent(\"Tried removing non-registered uiView\", uiView);\n        return;\n      }\n      trace.traceViewServiceUIViewEvent(\"<- Deregistering\", uiView);\n      removeFrom(uiViews)(uiView);\n    };\n  };\n\n  /**\n   * Returns the list of views currently available on the page, by fully-qualified name.\n   *\n   * @return {Array} Returns an array of fully-qualified view names.\n   */\n  available() {\n    return this.uiViews.map(prop(\"fqn\"));\n  }\n\n  /**\n   * Returns the list of views on the page containing loaded content.\n   *\n   * @return {Array} Returns an array of fully-qualified view names.\n   */\n  active() {\n    return this.uiViews.filter(prop(\"$config\")).map(prop(\"name\"));\n  }\n\n  /**\n   * Normalizes a view's name from a state.views configuration block.\n   *\n   * @param context the context object (state declaration) that the view belongs to\n   * @param rawViewName the name of the view, as declared in the [[StateDeclaration.views]]\n   *\n   * @returns the normalized uiViewName and uiViewContextAnchor that the view targets\n   */\n  static normalizeUIViewTarget(context: ViewContext, rawViewName = \"\") {\n    // TODO: Validate incoming view name with a regexp to allow:\n    // ex: \"view.name@foo.bar\" , \"^.^.view.name\" , \"view.name@^.^\" , \"\" ,\n    // \"@\" , \"$default@^\" , \"!$default.$default\" , \"!foo.bar\"\n    let viewAtContext: string[] = rawViewName.split(\"@\");\n    let uiViewName = viewAtContext[0] || \"$default\";  // default to unnamed view\n    let uiViewContextAnchor = isString(viewAtContext[1]) ? viewAtContext[1] : \"^\";    // default to parent context\n\n    // Handle relative view-name sugar syntax.\n    // Matches rawViewName \"^.^.^.foo.bar\" into array: [\"^.^.^.foo.bar\", \"^.^.^\", \"foo.bar\"],\n    let relativeViewNameSugar = /^(\\^(?:\\.\\^)*)\\.(.*$)/.exec(uiViewName);\n    if (relativeViewNameSugar) {\n      // Clobbers existing contextAnchor (rawViewName validation will fix this)\n      uiViewContextAnchor = relativeViewNameSugar[1]; // set anchor to \"^.^.^\"\n      uiViewName = relativeViewNameSugar[2]; // set view-name to \"foo.bar\"\n    }\n\n    if (uiViewName.charAt(0) === '!') {\n      uiViewName = uiViewName.substr(1);\n      uiViewContextAnchor = \"\"; // target absolutely from root\n    }\n\n    // handle parent relative targeting \"^.^.^\"\n    let relativeMatch = /^(\\^(?:\\.\\^)*)$/;\n    if (relativeMatch.exec(uiViewContextAnchor)) {\n      let anchor = uiViewContextAnchor.split(\".\").reduce(((anchor, x) => anchor.parent), context);\n      uiViewContextAnchor = anchor.name;\n    }\n\n    return {uiViewName, uiViewContextAnchor};\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./view/view.ts\n **/","/** @module state */ /** for typedoc */\n\nimport {State} from \"./stateObject\";\nimport {StateMatcher} from \"./stateMatcher\";\nimport {StateBuilder} from \"./stateBuilder\";\nimport {StateQueueManager} from \"./stateQueueManager\";\nimport {UrlMatcherFactory} from \"../url/urlMatcherFactory\";\nimport {StateDeclaration} from \"./interface\";\nimport {BuilderFunction} from \"./stateBuilder\";\nimport {StateOrName} from \"./interface\";\nimport {UrlRouterProvider} from \"../url/urlRouter\";\nimport {removeFrom} from \"../common/common\";\n\n/**\n * The signature for the callback function provided to [[StateRegistry.onStateRegistryEvent]].\n *\n * This callback receives two parameters:\n *\n * @param event a string; either \"registered\" or \"deregistered\"\n * @param states the list of [[StateDeclaration]]s that were registered (or deregistered).\n */\nexport type StateRegistryListener = (event: \"registered\"|\"deregistered\", states: StateDeclaration[]) => void;\n\nexport class StateRegistry {\n  private _root: State;\n  private states: { [key: string]: State } = {};\n\n  matcher: StateMatcher;\n  private builder: StateBuilder;\n  stateQueue: StateQueueManager;\n\n  listeners: StateRegistryListener[] = [];\n\n  constructor(urlMatcherFactory: UrlMatcherFactory, private urlRouterProvider: UrlRouterProvider) {\n    this.matcher = new StateMatcher(this.states);\n    this.builder = new StateBuilder(this.matcher, urlMatcherFactory);\n    this.stateQueue = new StateQueueManager(this.states, this.builder, urlRouterProvider, this.listeners);\n\n    let rootStateDef: StateDeclaration = {\n      name: '',\n      url: '^',\n      views: null,\n      params: {\n        '#': { value: null, type: 'hash', dynamic: true }\n      },\n      abstract: true\n    };\n\n    let _root = this._root = this.stateQueue.register(rootStateDef);\n    _root.navigable = null;\n  }\n\n  /**\n   * Listen for a State Registry events\n   *\n   * Adds a callback that is invoked when states are registered or deregistered with the StateRegistry.\n   *\n   * @example\n   * ```js\n   *\n   * let allStates = registry.get();\n   *\n   * // Later, invoke deregisterFn() to remove the listener\n   * let deregisterFn = registry.onStatesChanged((event, states) => {\n   *   switch(event) {\n   *     case: 'registered':\n   *       states.forEach(state => allStates.push(state));\n   *       break;\n   *     case: 'deregistered':\n   *       states.forEach(state => {\n   *         let idx = allStates.indexOf(state);\n   *         if (idx !== -1) allStates.splice(idx, 1);\n   *       });\n   *       break;\n   *   }\n   * });\n   * ```\n   *\n   * @param listener a callback function invoked when the registered states changes.\n   *        The function receives two parameters, `event` and `state`.\n   *        See [[StateRegistryListener]]\n   * @return a function that deregisters the listener\n   */\n  onStatesChanged(listener: StateRegistryListener): () => void {\n    this.listeners.push(listener);\n    return function deregisterListener() {\n      removeFrom(this.listeners)(listener);\n    }.bind(this);\n  }\n\n  /**\n   * Gets the implicit root state\n   *\n   * Gets the root of the state tree.\n   * The root state is implicitly created by UI-Router.\n   * Note: this returns the internal [[State]] representation, not a [[StateDeclaration]]\n   *\n   * @return the root [[State]]\n   */\n  root() {\n    return this._root;\n  }\n\n  /**\n   * Adds a state to the registry\n   *\n   * Registers a [[StateDefinition]] or queues it for registration.\n   *\n   * Note: a state will be queued if the state's parent isn't yet registered.\n   * It will also be queued if the queue is not yet in [[StateQueueManager.autoFlush]] mode.\n   *\n   * @param stateDefinition the definition of the state to register.\n   * @returns the internal [[State]] object.\n   *          If the state was successfully registered, then the object is fully built (See: [[StateBuilder]]).\n   *          If the state was only queued, then the object is not fully built.\n   */\n  register(stateDefinition: StateDeclaration): State {\n    return this.stateQueue.register(stateDefinition);\n  }\n\n  /** @hidden */\n  private _deregisterTree(state: State) {\n    let all = this.get().map(s => s.$$state());\n    const getChildren = (states: State[]) => {\n      let children = all.filter(s => states.indexOf(s.parent) !== -1);\n      return children.length === 0 ? children : children.concat(getChildren(children));\n    };\n\n    let children = getChildren([state]);\n    let deregistered = [state].concat(children).reverse();\n\n    deregistered.forEach(state => {\n      this.urlRouterProvider.removeRule(state._urlRule);\n      delete this.states[state.name];\n    });\n\n    return deregistered;\n  }\n\n  /**\n   * Removes a state from the registry\n   *\n   * This removes a state from the registry.\n   * If the state has children, they are are also removed from the registry.\n   *\n   * @param stateOrName the state's name or object representation\n   * @returns {State[]} a list of removed states\n   */\n  deregister(stateOrName: StateOrName) {\n    let _state = this.get(stateOrName);\n    if (!_state) throw new Error(\"Can't deregister state; not found: \" + stateOrName);\n    let deregisteredStates = this._deregisterTree(_state.$$state());\n\n    this.listeners.forEach(listener => listener(\"deregistered\", deregisteredStates.map(s => s.self)));\n    return deregisteredStates;\n  }\n\n  /**\n   * Gets all registered states\n   *\n   * Calling this method with no arguments will return a list of all the states that are currently registered.\n   * Note: this does not return states that are *queued* but not yet registered.\n   *\n   * @return a list of [[StateDeclaration]]s\n   */\n  get(): StateDeclaration[];\n\n  /**\n   * Gets a registered state\n   *\n   * Given a state or a name, finds and returns the [[StateDeclaration]] from the registry.\n   * Note: this does not return states that are *queued* but not yet registered.\n   *\n   * @param stateOrName either the name of a state, or a state object.\n   * @return a registered [[StateDeclaration]] that matched the `stateOrName`, or null if the state isn't registered.\n   */\n  get(stateOrName: StateOrName, base?: StateOrName): StateDeclaration;\n  get(stateOrName?: StateOrName, base?: StateOrName): any {\n    if (arguments.length === 0) \n      return <StateDeclaration[]> Object.keys(this.states).map(name => this.states[name].self);\n    let found = this.matcher.find(stateOrName, base);\n    return found && found.self || null;\n  }\n\n  decorator(name: string, func: BuilderFunction) {\n    return this.builder.builder(name, func);\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./state/stateRegistry.ts\n **/","/** @module state */ /** for typedoc */\nimport {isString} from \"../common/predicates\";\nimport {StateOrName} from \"./interface\";\nimport {State} from \"./stateObject\";\nimport {Glob} from \"../common/glob\";\nimport {values} from \"../common/common\";\n\nexport class StateMatcher {\n  constructor (private _states: { [key: string]: State }) { }\n  \n  isRelative(stateName: string) {\n    stateName = stateName || \"\";\n    return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\n  }\n\n\n  find(stateOrName: StateOrName, base?: StateOrName): State {\n    if (!stateOrName && stateOrName !== \"\") return undefined;\n    let isStr = isString(stateOrName);\n    let name: string = isStr ? stateOrName : (<any>stateOrName).name;\n\n    if (this.isRelative(name)) name = this.resolvePath(name, base);\n    let state = this._states[name];\n\n    if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n      return state;\n    } else if (isStr) {\n      let matches = values(this._states)\n          .filter(state => new Glob(state.name).matches(name));\n\n      if (matches.length > 1) {\n        console.log(`stateMatcher.find: Found multiple matches for ${name} using glob: `, matches.map(match => match.name));\n      }\n      return matches[0];\n    }\n    return undefined;\n  }\n\n  resolvePath(name: string, base: StateOrName) {\n    if (!base) throw new Error(`No reference point given for path '${name}'`);\n    \n    let baseState: State = this.find(base);\n\n    let splitName = name.split(\".\"), i = 0, pathLength = splitName.length, current = baseState;\n\n    for (; i < pathLength; i++) {\n      if (splitName[i] === \"\" && i === 0) {\n        current = baseState;\n        continue;\n      }\n      if (splitName[i] === \"^\") {\n        if (!current.parent) throw new Error(`Path '${name}' not valid for state '${baseState.name}'`);\n        current = current.parent;\n        continue;\n      }\n      break;\n    }\n    let relName = splitName.slice(i).join(\".\");\n    return current.name + (current.name && relName ? \".\" : \"\") + relName;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./state/stateMatcher.ts\n **/","/** @module state */ /** for typedoc */\nimport {Obj, omit, noop, extend, inherit, values, applyPairs, tail, mapObj, identity} from \"../common/common\";\nimport {isDefined, isFunction, isString, isArray} from \"../common/predicates\";\nimport {stringify} from \"../common/strings\";\nimport {prop, pattern, is, pipe, val} from \"../common/hof\";\nimport {StateDeclaration} from \"./interface\";\n\nimport {State} from \"./stateObject\";\nimport {StateMatcher} from \"./stateMatcher\";\nimport {Param} from \"../params/param\";\nimport {UrlMatcherFactory} from \"../url/urlMatcherFactory\";\nimport {UrlMatcher} from \"../url/urlMatcher\";\nimport {Resolvable} from \"../resolve/resolvable\";\nimport {services} from \"../common/coreservices\";\nimport {ResolvePolicy} from \"../resolve/interface\";\nimport {ParamTypes} from \"../params/paramTypes\";\n\nconst parseUrl = (url: string): any => {\n  if (!isString(url)) return false;\n  let root = url.charAt(0) === '^';\n  return { val: root ? url.substring(1) : url, root };\n};\n\nexport type BuilderFunction = (state: State, parent?: BuilderFunction) => any;\n\ninterface Builders {\n  [key: string]: BuilderFunction[];\n\n  name: BuilderFunction[];\n  parent: BuilderFunction[];\n  data: BuilderFunction[];\n  url: BuilderFunction[];\n  navigable: BuilderFunction[];\n  params: BuilderFunction[];\n  views: BuilderFunction[];\n  path: BuilderFunction[];\n  includes: BuilderFunction[];\n  resolvables: BuilderFunction[];\n}\n\n\nfunction nameBuilder(state: State) {\n  if (state.lazyLoad)\n    state.name = state.self.name + \".**\";\n  return state.name;\n}\n\nfunction selfBuilder(state: State) {\n  state.self.$$state = () => state;\n  return state.self;\n}\n\nfunction dataBuilder(state: State) {\n  if (state.parent && state.parent.data) {\n    state.data = state.self.data = inherit(state.parent.data, state.data);\n  }\n  return state.data;\n}\n\nconst getUrlBuilder = ($urlMatcherFactoryProvider: UrlMatcherFactory, root: () => State) =>\nfunction urlBuilder(state: State) {\n  let stateDec: StateDeclaration = <any> state;\n\n  if (stateDec && stateDec.url && stateDec.lazyLoad) {\n    stateDec.url += \"{remainder:any}\"; // match any path (.*)\n  }\n\n  const parsed = parseUrl(stateDec.url), parent = state.parent;\n  const url = !parsed ? stateDec.url : $urlMatcherFactoryProvider.compile(parsed.val, {\n    params: state.params || {},\n    paramMap: function (paramConfig: any, isSearch: boolean) {\n      if (stateDec.reloadOnSearch === false && isSearch) paramConfig = extend(paramConfig || {}, {dynamic: true});\n      return paramConfig;\n    }\n  });\n\n  if (!url) return null;\n  if (!$urlMatcherFactoryProvider.isMatcher(url)) throw new Error(`Invalid url '${url}' in state '${state}'`);\n  return (parsed && parsed.root) ? url : ((parent && parent.navigable) || root()).url.append(<UrlMatcher> url);\n};\n\nconst getNavigableBuilder = (isRoot: (state: State) => boolean) =>\nfunction navigableBuilder(state: State) {\n  return !isRoot(state) && state.url ? state : (state.parent ? state.parent.navigable : null);\n};\n\nconst getParamsBuilder = (paramTypes: ParamTypes) => \nfunction paramsBuilder(state: State): { [key: string]: Param } {\n  const makeConfigParam = (config: any, id: string) => Param.fromConfig(id, null, config, paramTypes);\n  let urlParams: Param[] = (state.url && state.url.parameters({inherit: false})) || [];\n  let nonUrlParams: Param[] = values(mapObj(omit(state.params || {}, urlParams.map(prop('id'))), makeConfigParam));\n  return urlParams.concat(nonUrlParams).map(p => [p.id, p]).reduce(applyPairs, {});\n};\n\nfunction pathBuilder(state: State) {\n  return state.parent ? state.parent.path.concat(state) : /*root*/ [state];\n}\n\nfunction includesBuilder(state: State) {\n  let includes = state.parent ? extend({}, state.parent.includes) : {};\n  includes[state.name] = true;\n  return includes;\n}\n\n/**\n * This is a [[StateBuilder.builder]] function for the `resolve:` block on a [[StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[State]] object from a raw [[StateDeclaration]], this builder\n * validates the `resolve` property and converts it to a [[Resolvable]] array.\n *\n * resolve: input value can be:\n *\n * {\n *   // analyzed but not injected\n *   myFooResolve: function() { return \"myFooData\"; },\n *\n *   // function.toString() parsed, \"DependencyName\" dep as string (not min-safe)\n *   myBarResolve: function(DependencyName) { return DependencyName.fetchSomethingAsPromise() },\n *\n *   // Array split; \"DependencyName\" dep as string\n *   myBazResolve: [ \"DependencyName\", function(dep) { return dep.fetchSomethingAsPromise() },\n *\n *   // Array split; DependencyType dep as token (compared using ===)\n *   myQuxResolve: [ DependencyType, function(dep) { return dep.fetchSometingAsPromise() },\n *\n *   // val.$inject used as deps\n *   // where:\n *   //     corgeResolve.$inject = [\"DependencyName\"];\n *   //     function corgeResolve(dep) { dep.fetchSometingAsPromise() }\n *   // then \"DependencyName\" dep as string\n *   myCorgeResolve: corgeResolve,\n *\n *  // inject service by name\n *  // When a string is found, desugar creating a resolve that injects the named service\n *   myGraultResolve: \"SomeService\"\n * }\n *\n * or:\n *\n * [\n *   new Resolvable(\"myFooResolve\", function() { return \"myFooData\" }),\n *   new Resolvable(\"myBarResolve\", function(dep) { return dep.fetchSomethingAsPromise() }, [ \"DependencyName\" ]),\n *   { provide: \"myBazResolve\", useFactory: function(dep) { dep.fetchSomethingAsPromise() }, deps: [ \"DependencyName\" ] }\n * ]\n */\nexport function resolvablesBuilder(state: State): Resolvable[] {\n  interface Tuple { token: any, val: any, deps: any[], policy: ResolvePolicy }\n  \n  /** convert resolve: {} and resolvePolicy: {} objects to an array of tuples */\n  const objects2Tuples    = (resolveObj: Obj, resolvePolicies: { [key: string]: ResolvePolicy }) =>\n      Object.keys(resolveObj || {}).map(token => ({token, val: resolveObj[token], deps: undefined, policy: resolvePolicies[token]}));\n\n  /** fetch DI annotations from a function or ng1-style array */\n  const annotate          = (fn: Function)  =>\n      fn['$inject'] || services.$injector.annotate(fn, services.$injector.strictDi);\n\n  /** true if the object has both `token` and `resolveFn`, and is probably a [[ResolveLiteral]] */\n  const isResolveLiteral  = (obj: any) => !!(obj.token && obj.resolveFn);\n\n  /** true if the object looks like a provide literal, or a ng2 Provider */\n  const isLikeNg2Provider = (obj: any) => !!((obj.provide || obj.token) && (obj.useValue || obj.useFactory || obj.useExisting || obj.useClass));\n\n  /** true if the object looks like a tuple from obj2Tuples */\n  const isTupleFromObj    = (obj: any) => !!(obj && obj.val && (isString(obj.val) || isArray(obj.val)  || isFunction(obj.val)));\n\n  /** extracts the token from a Provider or provide literal */\n  const token             = (p: any) => p.provide || p.token;\n\n  /** Given a literal resolve or provider object, returns a Resolvable */\n  const literal2Resolvable = pattern([\n    [prop('resolveFn'),   p => new Resolvable(token(p), p.resolveFn, p.deps, p.policy)],\n    [prop('useFactory'),  p => new Resolvable(token(p), p.useFactory, (p.deps || p.dependencies), p.policy)],\n    [prop('useClass'),    p => new Resolvable(token(p), () => new (<any>p.useClass)(), [], p.policy)],\n    [prop('useValue'),    p => new Resolvable(token(p), () => p.useValue, [], p.policy, p.useValue)],\n    [prop('useExisting'), p => new Resolvable(token(p), identity, [p.useExisting], p.policy)],\n  ]);\n\n  const tuple2Resolvable = pattern([\n    [pipe(prop(\"val\"), isString),   (tuple: Tuple) => new Resolvable(tuple.token, identity, [ tuple.val ], tuple.policy)],\n    [pipe(prop(\"val\"), isArray),    (tuple: Tuple) => new Resolvable(tuple.token, tail(<any[]> tuple.val), tuple.val.slice(0, -1), tuple.policy)],\n    [pipe(prop(\"val\"), isFunction), (tuple: Tuple) => new Resolvable(tuple.token, tuple.val, annotate(tuple.val), tuple.policy)],\n  ]);\n\n  const item2Resolvable = <(obj: any) => Resolvable> pattern([\n    [is(Resolvable),                (r: Resolvable) => r],\n    [isResolveLiteral,              literal2Resolvable],\n    [isLikeNg2Provider,             literal2Resolvable],\n    [isTupleFromObj,                tuple2Resolvable],\n    [val(true),                     (obj: any) => { throw new Error(\"Invalid resolve value: \" + stringify(obj)) }]\n  ]);\n\n  // If resolveBlock is already an array, use it as-is.\n  // Otherwise, assume it's an object and convert to an Array of tuples\n  let decl = state.resolve;\n  let items: any[] = isArray(decl) ? decl : objects2Tuples(decl, state.resolvePolicy || {});\n  return items.map(item2Resolvable);\n}\n\n/**\n * @internalapi A internal global service\n *\n * StateBuilder is a factory for the internal [[State]] objects.\n *\n * When you register a state with the [[StateRegistry]], you register a plain old javascript object which\n * conforms to the [[StateDeclaration]] interface.  This factory takes that object and builds the corresponding\n * [[State]] object, which has an API and is used internally.\n *\n * Custom properties or API may be added to the internal [[State]] object by registering a decorator function\n * using the [[builder]] method.\n */\nexport class StateBuilder {\n  /** An object that contains all the BuilderFunctions registered, key'd by the name of the State property they build */\n  private builders: Builders;\n\n  constructor(private matcher: StateMatcher, $urlMatcherFactoryProvider: UrlMatcherFactory) {\n    let self = this;\n\n    const root = () => matcher.find(\"\");\n    const isRoot = (state: State) => state.name === \"\";\n\n    function parentBuilder(state: State) {\n      if (isRoot(state)) return null;\n      return matcher.find(self.parentName(state)) || root();\n    }\n\n    this.builders = {\n      name: [ nameBuilder ],\n      self: [ selfBuilder ],\n      parent: [ parentBuilder ],\n      data: [ dataBuilder ],\n      // Build a URLMatcher if necessary, either via a relative or absolute URL\n      url: [ getUrlBuilder($urlMatcherFactoryProvider, root) ],\n      // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n      navigable: [ getNavigableBuilder(isRoot) ],\n      params: [ getParamsBuilder($urlMatcherFactoryProvider.paramTypes) ],\n      // Each framework-specific ui-router implementation should define its own `views` builder\n      // e.g., src/ng1/statebuilders/views.ts\n      views: [],\n      // Keep a full path from the root down to this state as this is needed for state activation.\n      path: [ pathBuilder ],\n      // Speed up $state.includes() as it's used a lot\n      includes: [ includesBuilder ],\n      resolvables: [ resolvablesBuilder ]\n    };\n  }\n\n  /**\n   * Registers a [[BuilderFunction]] for a specific [[State]] property (e.g., `parent`, `url`, or `path`).\n   * More than one BuilderFunction can be registered for a given property.\n   *\n   * The BuilderFunction(s) will be used to define the property on any subsequently built [[State]] objects.\n   *\n   * @param name The name of the State property being registered for.\n   * @param fn The BuilderFunction which will be used to build the State property\n   * @returns a function which deregisters the BuilderFunction\n   */\n  builder(name: string, fn: BuilderFunction): (BuilderFunction|BuilderFunction[]|Function) {\n    let builders = this.builders;\n    let array = builders[name] || [];\n    // Backwards compat: if only one builder exists, return it, else return whole arary.\n    if (isString(name) && !isDefined(fn)) return array.length > 1 ? array : array[0];\n    if (!isString(name) || !isFunction(fn)) return;\n\n    builders[name] = array;\n    builders[name].push(fn);\n    return () => builders[name].splice(builders[name].indexOf(fn, 1)) && null;\n  }\n\n  /**\n   * Builds all of the properties on an essentially blank State object, returning a State object which has all its\n   * properties and API built.\n   *\n   * @param state an uninitialized State object\n   * @returns the built State object\n   */\n  build(state: State): State {\n    let {matcher, builders} = this;\n    let parent = this.parentName(state);\n    if (parent && !matcher.find(parent)) return null;\n\n    for (let key in builders) {\n      if (!builders.hasOwnProperty(key)) continue;\n      let chain = builders[key].reduce((parentFn: BuilderFunction, step: BuilderFunction) => (_state) => step(_state, parentFn), noop);\n      state[key] = chain(state);\n    }\n    return state;\n  }\n\n  parentName(state: State) {\n    let name = state.name || \"\";\n\n    let segments = name.split('.');\n    if (segments.length > 1) {\n      if (state.parent) {\n        throw new Error(`States that specify the 'parent:' property should not have a '.' in their name (${name})`);\n      }\n      var lastSegment = segments.pop();\n      if (lastSegment === '**') segments.pop();\n      return segments.join(\".\");\n    }\n\n    if (!state.parent) return \"\";\n    return isString(state.parent) ? state.parent : state.parent.name;\n  }\n\n  name(state: State) {\n    let name = state.name;\n    if (name.indexOf('.') !== -1 || !state.parent) return name;\n\n    let parentName = isString(state.parent) ? state.parent : state.parent.name;\n    return parentName ? parentName + \".\" + name : name;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./state/stateBuilder.ts\n **/","/** @module state */ /** for typedoc */\nimport {extend, inherit, pluck, equalForKeys} from \"../common/common\";\nimport {isString} from \"../common/predicates\";\nimport {StateDeclaration} from \"./interface\";\nimport {State} from \"./stateObject\";\nimport {StateBuilder} from \"./stateBuilder\";\nimport {StateService} from \"./stateService\";\nimport {UrlRouterProvider} from \"../url/urlRouter\";\nimport {RawParams} from \"../params/interface\";\nimport {StateRegistry, StateRegistryListener} from \"./stateRegistry\";\n\nexport class StateQueueManager {\n  queue: State[];\n  private $state: StateService;\n\n  constructor(\n      public states: { [key: string]: State; },\n      public builder: StateBuilder,\n      public $urlRouterProvider: UrlRouterProvider,\n      public listeners: StateRegistryListener[]) {\n    this.queue = [];\n  }\n\n  register(config: StateDeclaration) {\n    let {states, queue, $state} = this;\n    // Wrap a new object around the state so we can store our private details easily.\n    // @TODO: state = new State(extend({}, config, { ... }))\n    let state = inherit(new State(), extend({}, config, {\n      self: config,\n      resolve: config.resolve || [],\n      toString: () => config.name\n    }));\n\n    if (!isString(state.name)) throw new Error(\"State must have a valid name\");\n    if (states.hasOwnProperty(state.name) || pluck(queue, 'name').indexOf(state.name) !== -1)\n      throw new Error(`State '${state.name}' is already defined`);\n\n    queue.push(state);\n\n    if (this.$state) {\n      this.flush($state);\n    }\n    return state;\n  }\n\n  flush($state: StateService) {\n    let {queue, states, builder} = this;\n    let registered: State[] = [], // states that got registered\n        orphans: State[] = [], // states that dodn't yet have a parent registered\n        previousQueueLength = {}; // keep track of how long the queue when an orphan was first encountered\n\n    while (queue.length > 0) {\n      let state: State = queue.shift();\n      let result: State = builder.build(state);\n      let orphanIdx: number = orphans.indexOf(state);\n\n      if (result) {\n        if (states.hasOwnProperty(state.name))\n          throw new Error(`State '${name}' is already defined`);\n        states[state.name] = state;\n        this.attachRoute($state, state);\n        if (orphanIdx >= 0) orphans.splice(orphanIdx, 1);\n        registered.push(state);\n        continue;\n      }\n\n      let prev = previousQueueLength[state.name];\n      previousQueueLength[state.name] = queue.length;\n      if (orphanIdx >= 0 && prev === queue.length) {\n        // Wait until two consecutive iterations where no additional states were dequeued successfully.\n        // throw new Error(`Cannot register orphaned state '${state.name}'`);\n        queue.push(state);\n        return states;\n      } else if (orphanIdx < 0) {\n        orphans.push(state);\n      }\n\n      queue.push(state);\n    }\n\n    if (registered.length) {\n      this.listeners.forEach(listener => listener(\"registered\", registered.map(s => s.self)));\n    }\n\n    return states;\n  }\n\n  autoFlush($state: StateService) {\n    this.$state = $state;\n    this.flush($state);\n  }\n\n  attachRoute($state: StateService, state: State) {\n    let {$urlRouterProvider} = this;\n    if (state.abstract || !state.url) return;\n\n    $urlRouterProvider.when(state.url, ['$match', '$stateParams', function ($match: RawParams, $stateParams: RawParams) {\n      if ($state.$current.navigable !== state || !equalForKeys($match, $stateParams)) {\n        $state.transitionTo(state, $match, { inherit: true, source: \"url\" });\n      }\n    }], (rule) => state._urlRule = rule);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./state/stateQueueManager.ts\n **/","/** @module state */ /** for typedoc */\n\nimport {StateDeclaration, _ViewDeclaration} from \"./interface\";\nimport {extend, defaults, values, find} from \"../common/common\";\nimport {propEq} from \"../common/hof\";\nimport {Param} from \"../params/param\";\nimport {UrlMatcher} from \"../url/urlMatcher\";\nimport {Resolvable} from \"../resolve/resolvable\";\nimport {TransitionStateHookFn} from \"../transition/interface\";\nimport {TargetState} from \"./targetState\";\nimport {Transition} from \"../transition/transition\";\n\n/**\n * @ngdoc object\n * @name ui.router.state.type:State\n *\n * @description\n * Definition object for states. Includes methods for manipulating the state heirarchy.\n *\n * @param {Object} config  A configuration object hash that includes the results of user-supplied\n *        values, as well as values from `StateBuilder`.\n *\n * @returns {Object}  Returns a new `State` object.\n */\nexport class State {\n\n  public parent: State;\n  public name: string;\n  public abstract: boolean;\n  public resolve: ({ [key: string]: (string|any[]|Function) }|any[]);\n  public resolvables: Resolvable[];\n  public resolvePolicy: any;\n  public url: UrlMatcher;\n  /** @hidden temporary place to put the rule registered with $urlRouter.when() */\n  public _urlRule: any;\n  public params: { [key: string]: Param };\n  public views: { [key: string]: _ViewDeclaration; };\n  public self: StateDeclaration;\n  public navigable: State;\n  public path: State[];\n  public data: any;\n  public includes: { [name: string] : boolean };\n\n  public onExit: TransitionStateHookFn;\n  public onRetain: TransitionStateHookFn;\n  public onEnter: TransitionStateHookFn;\n  public lazyLoad: (transition: Transition) => Promise<StateDeclaration[]>;\n\n  redirectTo: (\n      string |\n      (($transition$: Transition) => TargetState) |\n      { state: (string|StateDeclaration), params: { [key: string]: any }}\n  );\n\n\n  constructor(config?: StateDeclaration) {\n    extend(this, config);\n    // Object.freeze(this);\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.type:State#is\n   * @methodOf ui.router.state.type:State\n   *\n   * @description\n   * Compares the identity of the state against the passed value, which is either an object\n   * reference to the actual `State` instance, the original definition object passed to\n   * `$stateProvider.state()`, or the fully-qualified name.\n   *\n   * @param {Object} ref Can be one of (a) a `State` instance, (b) an object that was passed\n   *        into `$stateProvider.state()`, (c) the fully-qualified name of a state as a string.\n   * @returns {boolean} Returns `true` if `ref` matches the current `State` instance.\n   */\n  is(ref: State|StateDeclaration|string): boolean {\n    return this === ref || this.self === ref || this.fqn() === ref;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.type:State#fqn\n   * @methodOf ui.router.state.type:State\n   *\n   * @description\n   * Returns the fully-qualified name of the state, based on its current position in the tree.\n   *\n   * @returns {string} Returns a dot-separated name of the state.\n   */\n  fqn(): string {\n    if (!this.parent || !(this.parent instanceof this.constructor)) return this.name;\n    let name = this.parent.fqn();\n    return name ? name + \".\" + this.name : this.name;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.type:State#root\n   * @methodOf ui.router.state.type:State\n   *\n   * @description\n   * Returns the root node of this state's tree.\n   *\n   * @returns {State} The root of this state's tree.\n   */\n  root(): State {\n    return this.parent && this.parent.root() || this;\n  }\n\n  parameters(opts?: { inherit: boolean }): Param[] {\n    opts = defaults(opts, { inherit: true });\n    let inherited = opts.inherit && this.parent && this.parent.parameters() || [];\n    return inherited.concat(values(this.params));\n  }\n\n  parameter(id: string, opts: any = {}): Param {\n    return (\n        this.url && this.url.parameter(id, opts) ||\n        find(values(this.params), propEq('id', id)) ||\n        opts.inherit && this.parent && this.parent.parameter(id)\n    );\n  }\n\n  toString() {\n    return this.fqn();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./state/stateObject.ts\n **/","/** @module state */ /** */\nimport {extend, defaults, silentRejection, silenceUncaughtInPromise, removeFrom} from \"../common/common\";\nimport {isDefined, isObject, isString} from \"../common/predicates\";\nimport {Queue} from \"../common/queue\";\nimport {services} from \"../common/coreservices\";\n\nimport {PathFactory} from \"../path/pathFactory\";\nimport {PathNode} from \"../path/node\";\n\nimport {TransitionOptions, HookResult} from \"../transition/interface\";\nimport {defaultTransOpts} from \"../transition/transitionService\";\nimport {Rejection, RejectType} from \"../transition/rejectFactory\";\nimport {Transition} from \"../transition/transition\";\n\nimport {StateOrName, StateDeclaration, TransitionPromise} from \"./interface\";\nimport {State} from \"./stateObject\";\nimport {TargetState} from \"./targetState\";\n\nimport {RawParams} from \"../params/interface\";\nimport {ParamsOrArray} from \"../params/interface\";\nimport {Param} from \"../params/param\";\nimport {Glob} from \"../common/glob\";\nimport {equalForKeys} from \"../common/common\";\nimport {HrefOptions} from \"./interface\";\nimport {bindFunctions} from \"../common/common\";\nimport {Globals} from \"../globals\";\nimport {UIRouter} from \"../router\";\nimport {UIInjector} from \"../common/interface\";\nimport {ResolveContext} from \"../resolve/resolveContext\";\nimport {StateParams} from \"../params/stateParams\"; // has or is using\n\nexport type OnInvalidCallback =\n    (toState?: TargetState, fromState?: TargetState, injector?: UIInjector) => HookResult;\n\nexport class StateService {\n  invalidCallbacks: OnInvalidCallback[] = [];\n\n  get transition()  { return this.router.globals.transition; }\n  get params()      { return this.router.globals.params; }\n  get current()     { return this.router.globals.current; }\n  get $current()    { return this.router.globals.$current; }\n\n  /** @hidden */\n  constructor(private router: UIRouter) {\n    let getters = ['current', '$current', 'params', 'transition'];\n    let boundFns = Object.keys(StateService.prototype).filter(key => getters.indexOf(key) === -1);\n    bindFunctions(StateService.prototype, this, this, boundFns);\n  }\n\n  /**\n   * Handler for when [[transitionTo]] is called with an invalid state.\n   *\n   * Invokes the [[onInvalid]] callbacks, in natural order.\n   * Each callback's return value is checked in sequence until one of them returns an instance of TargetState.\n   * The results of the callbacks are wrapped in $q.when(), so the callbacks may return promises.\n   *\n   * If a callback returns an TargetState, then it is used as arguments to $state.transitionTo() and the result returned.\n   */\n  private _handleInvalidTargetState(fromPath: PathNode[], toState: TargetState) {\n    let fromState = PathFactory.makeTargetState(fromPath);\n    let globals = <Globals> this.router.globals;\n    const latestThing = () => globals.transitionHistory.peekTail();\n    let latest = latestThing();\n    let callbackQueue = new Queue<OnInvalidCallback>(this.invalidCallbacks.slice());\n    let injector = new ResolveContext(fromPath).injector();\n\n    const checkForRedirect = (result: HookResult) => {\n      if (!(result instanceof TargetState)) {\n        return;\n      }\n      let target = <TargetState> result;\n      // Recreate the TargetState, in case the state is now defined.\n      target = this.target(target.identifier(), target.params(), target.options());\n\n      if (!target.valid()) return Rejection.invalid(target.error()).toPromise();\n      if (latestThing() !== latest) return Rejection.superseded().toPromise();\n\n      return this.transitionTo(target.identifier(), target.params(), target.options());\n    };\n\n    function invokeNextCallback() {\n      let nextCallback = callbackQueue.dequeue();\n      if (nextCallback === undefined) return Rejection.invalid(toState.error()).toPromise();\n\n      let callbackResult = services.$q.when(nextCallback(toState, fromState, injector));\n      return callbackResult.then(checkForRedirect).then(result => result || invokeNextCallback());\n    }\n\n    return invokeNextCallback();\n  }\n\n  /**\n   * Registers an Invalid State handler\n   *\n   * Registers a [[OnInvalidCallback]] function to be invoked when [[StateService.transitionTo]]\n   * has been called with an invalid state reference parameter\n   *\n   * Example:\n   * ```js\n   * stateService.onInvalid(function(to, from, injector) {\n   *   if (to.name() === 'foo') {\n   *     let lazyLoader = injector.get('LazyLoadService');\n   *     return lazyLoader.load('foo')\n   *         .then(() => stateService.target('foo'));\n   *   }\n   * });\n   * ```\n   *\n   * @param {function} callback invoked when the toState is invalid\n   *   This function receives the (invalid) toState, the fromState, and an injector.\n   *   The function may optionally return a [[TargetState]] or a Promise for a TargetState.\n   *   If one is returned, it is treated as a redirect.\n   *\n   * @returns a function which deregisters the callback\n   */\n  onInvalid(callback: OnInvalidCallback): Function {\n    this.invalidCallbacks.push(callback);\n    return function deregisterListener() {\n      removeFrom(this.invalidCallbacks)(callback);\n    }.bind(this);\n  }\n\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$state#reload\n   * @methodOf ui.router.state.$state\n   *\n   * @description\n   * A method that force reloads the current state, or a partial state hierarchy. All resolves are re-resolved,\n   * controllers reinstantiated, and events re-fired.\n   *\n   * @example\n   * <pre>\n   * let app angular.module('app', ['ui.router']);\n   *\n   * app.controller('ctrl', function ($scope, $state) {\n   *   $scope.reload = function(){\n   *     $state.reload();\n   *   }\n   * });\n   * </pre>\n   *\n   * `reload()` is just an alias for:\n   * <pre>\n   * $state.transitionTo($state.current, $stateParams, {\n   *   reload: true, inherit: false, notify: true\n   * });\n   * </pre>\n   *\n   * @param {string=|object=} reloadState - A state name or a state object, which is the root of the resolves to be re-resolved.\n   * @example\n   * <pre>\n   * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item'\n   * //and current state is 'contacts.detail.item'\n   * let app angular.module('app', ['ui.router']);\n   *\n   * app.controller('ctrl', function ($scope, $state) {\n   *   $scope.reload = function(){\n   *     //will reload 'contact.detail' and nested 'contact.detail.item' states\n   *     $state.reload('contact.detail');\n   *   }\n   * });\n   * </pre>\n   *\n   * @returns {promise} A promise representing the state of the new transition. See\n   * {@link ui.router.state.$state#methods_go $state.go}.\n   */\n  reload(reloadState?: StateOrName): Promise<State> {\n    return this.transitionTo(this.current, this.params, {\n      reload: isDefined(reloadState) ? reloadState : true,\n      inherit: false,\n      notify: false\n    });\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$state#go\n   * @methodOf ui.router.state.$state\n   *\n   * @description\n   * Convenience method for transitioning to a new state. `$state.go` calls\n   * `$state.transitionTo` internally but automatically sets options to\n   * `{ location: true, inherit: true, relative: $state.$current, notify: true }`.\n   * This allows you to easily use an absolute or relative to path and specify\n   * only the parameters you'd like to update (while letting unspecified parameters\n   * inherit from the currently active ancestor states).\n   *\n   * @example\n   * <pre>\n   * let app = angular.module('app', ['ui.router']);\n   *\n   * app.controller('ctrl', function ($scope, $state) {\n   *   $scope.changeState = function () {\n   *     $state.go('contact.detail');\n   *   };\n   * });\n   * </pre>\n   * <img src='../ngdoc_assets/StateGoExamples.png'/>\n   *\n   * @param {string|object} to Absolute state name, state object, or relative state path. Some examples:\n   *\n   * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n   * - `$state.go('^')` - will go to a parent state\n   * - `$state.go('^.sibling')` - will go to a sibling state\n   * - `$state.go('.child.grandchild')` - will go to grandchild state\n   *\n   * @param {object=} params A map of the parameters that will be sent to the state,\n   * will populate $stateParams. Any parameters that are not specified will be inherited from currently\n   * defined parameters. This allows, for example, going to a sibling state that shares parameters\n   * specified in a parent state. Parameter inheritance only works between common ancestor states, I.e.\n   * transitioning to a sibling will get you the parameters for all parents, transitioning to a child\n   * will get you all current parameters, etc.\n   * @param {object=} options Options object. The options are:\n   *\n   * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n   *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n   * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n   * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'),\n   *    defines which state to be relative from.\n   * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n   * - **`reload`** (v0.2.5) - {boolean=false}, If `true` will force transition even if the state or params\n   *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\n   *    use this when you want to force a reload when *everything* is the same, including search params.\n   *\n   * @returns {promise} A promise representing the state of the new transition.\n   *\n   * Possible success values:\n   *\n   * - $state.current\n   *\n   * <br/>Possible rejection values:\n   *\n   * - 'transition superseded' - when a newer transition has been started after this one\n   * - 'transition prevented' - when `event.preventDefault()` has been called in a `$stateChangeStart` listener\n   * - 'transition aborted' - when `event.preventDefault()` has been called in a `$stateNotFound` listener or\n   *   when a `$stateNotFound` `event.retry` promise errors.\n   * - 'transition failed' - when a state has been unsuccessfully found after 2 tries.\n   * - *resolve error* - when an error has occurred with a `resolve`\n   *\n   */\n  go(to: StateOrName, params?: RawParams, options?: TransitionOptions): TransitionPromise {\n    let defautGoOpts = { relative: this.$current, inherit: true };\n    let transOpts = defaults(options, defautGoOpts, defaultTransOpts);\n    return this.transitionTo(to, params, transOpts);\n  };\n\n  /** Factory method for creating a TargetState */\n  target(identifier: StateOrName, params?: ParamsOrArray, options: TransitionOptions = {}): TargetState {\n    // If we're reloading, find the state object to reload from\n    if (isObject(options.reload) && !(<any>options.reload).name)\n      throw new Error('Invalid reload state object');\n    let reg = this.router.stateRegistry;\n    options.reloadState = options.reload === true ? reg.root() : reg.matcher.find(<any> options.reload, options.relative);\n\n    if (options.reload && !options.reloadState)\n      throw new Error(`No such reload state '${(isString(options.reload) ? options.reload : (<any>options.reload).name)}'`);\n\n    let stateDefinition = reg.matcher.find(identifier, options.relative);\n    return new TargetState(identifier, stateDefinition, params, options);\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$state#transitionTo\n   * @methodOf ui.router.state.$state\n   *\n   * @description\n   * Low-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}\n   * uses `transitionTo` internally. `$state.go` is recommended in most situations.\n   *\n   * @example\n   * <pre>\n   * let app = angular.module('app', ['ui.router']);\n   *\n   * app.controller('ctrl', function ($scope, $state) {\n   *   $scope.changeState = function () {\n   *     $state.transitionTo('contact.detail');\n   *   };\n   * });\n   * </pre>\n   *\n   * @param {string|object} to State name or state object.\n   * @param {object=} toParams A map of the parameters that will be sent to the state,\n   * will populate $stateParams.\n   * @param {object=} options Options object. The options are:\n   *\n   * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n   *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n   * - **`inherit`** - {boolean=false}, If `true` will inherit url parameters from current url.\n   * - **`relative`** - {object=}, When transitioning with relative path (e.g '^'),\n   *    defines which state to be relative from.\n   * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n   * - **`reload`** (v0.2.5) - {boolean=false}, If `true` will force transition even if the state or params\n   *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\n   *    use this when you want to force a reload when *everything* is the same, including search params.\n   *\n   * @returns {promise} A promise representing the state of the new transition. See\n   * {@link ui.router.state.$state#methods_go $state.go}.\n   */\n  transitionTo(to: StateOrName, toParams: RawParams = {}, options: TransitionOptions = {}): TransitionPromise {\n    let router = this.router;\n    let globals = <Globals> router.globals;\n    let transHistory = globals.transitionHistory;\n    options = defaults(options, defaultTransOpts);\n    options = extend(options, { current: transHistory.peekTail.bind(transHistory)});\n\n    let ref: TargetState = this.target(to, toParams, options);\n    let latestSuccess: Transition = globals.successfulTransitions.peekTail();\n    const rootPath = () => [ new PathNode(this.router.stateRegistry.root()) ];\n    let currentPath: PathNode[] = latestSuccess ? latestSuccess.treeChanges().to : rootPath();\n\n    if (!ref.exists())\n      return this._handleInvalidTargetState(currentPath, ref);\n\n    if (!ref.valid())\n      return <TransitionPromise> silentRejection(ref.error());\n\n    /**\n     * Special handling for Ignored, Aborted, and Redirected transitions\n     *\n     * The semantics for the transition.run() promise and the StateService.transitionTo()\n     * promise differ. For instance, the run() promise may be rejected because it was\n     * IGNORED, but the transitionTo() promise is resolved because from the user perspective\n     * no error occurred.  Likewise, the transition.run() promise may be rejected because of\n     * a Redirect, but the transitionTo() promise is chained to the new Transition's promise.\n     */\n    const rejectedTransitionHandler = (transition: Transition) => (error: any): Promise<any> => {\n      if (error instanceof Rejection) {\n        if (error.type === RejectType.IGNORED) {\n          // Consider ignored `Transition.run()` as a successful `transitionTo`\n          router.urlRouter.update();\n          return services.$q.when(globals.current);\n        }\n\n        const detail: any = error.detail;\n        if (error.type === RejectType.SUPERSEDED && error.redirected && detail instanceof TargetState) {\n          // If `Transition.run()` was redirected, allow the `transitionTo()` promise to resolve successfully\n          // by returning the promise for the new (redirect) `Transition.run()`.\n          let redirect: Transition = transition.redirect(detail);\n          return redirect.run().catch(rejectedTransitionHandler(redirect));\n        }\n\n        if (error.type === RejectType.ABORTED) {\n          router.urlRouter.update();\n          // Fall through to default error handler\n        }\n      }\n\n      var errorHandler = this.defaultErrorHandler();\n      errorHandler(error);\n\n      return services.$q.reject(error);\n    };\n\n    let transition = this.router.transitionService.create(currentPath, ref);\n    let transitionToPromise = transition.run().catch(rejectedTransitionHandler(transition));\n    silenceUncaughtInPromise(transitionToPromise); // issue #2676\n\n    // Return a promise for the transition, which also has the transition object on it.\n    return extend(transitionToPromise, { transition });\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$state#is\n   * @methodOf ui.router.state.$state\n   *\n   * @description\n   * Similar to {@link ui.router.state.$state#methods_includes $state.includes},\n   * but only checks for the full state name. If params is supplied then it will be\n   * tested for strict equality against the current active params object, so all params\n   * must match with none missing and no extras.\n   *\n   * @example\n   * <pre>\n   * $state.$current.name = 'contacts.details.item';\n   *\n   * // absolute name\n   * $state.is('contact.details.item'); // returns true\n   * $state.is(contactDetailItemStateObject); // returns true\n   *\n   * // relative name (. and ^), typically from a template\n   * // E.g. from the 'contacts.details' template\n   * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n   * </pre>\n   *\n   * @param {string|object} stateOrName The state name (absolute or relative) or state object you'd like to check.\n   * @param {object=} params A param object, e.g. `{sectionId: section.id}`, that you'd like\n   * to test against the current active state.\n   * @param {object=} options An options object.  The options are:\n   *\n   * - **`relative`** - {string|object} -  If `stateOrName` is a relative state name and `options.relative` is set, .is will\n   * test relative to `options.relative` state (or name).\n   *\n   * @returns {boolean} Returns true if it is the state.\n   */\n  is(stateOrName: StateOrName, params?: RawParams, options?: TransitionOptions): boolean {\n    options = defaults(options, { relative: this.$current });\n    let state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n    if (!isDefined(state)) return undefined;\n    if (this.$current !== state) return false;\n    return isDefined(params) && params !== null ? Param.equals(state.parameters(), this.params, params) : true;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$state#includes\n   * @methodOf ui.router.state.$state\n   *\n   * @description\n   * A method to determine if the current active state is equal to or is the child of the\n   * state stateName. If any params are passed then they will be tested for a match as well.\n   * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n   *\n   * @example\n   * Partial and relative names\n   * <pre>\n   * $state.$current.name = 'contacts.details.item';\n   *\n   * // Using partial names\n   * $state.includes(\"contacts\"); // returns true\n   * $state.includes(\"contacts.details\"); // returns true\n   * $state.includes(\"contacts.details.item\"); // returns true\n   * $state.includes(\"contacts.list\"); // returns false\n   * $state.includes(\"about\"); // returns false\n   *\n   * // Using relative names (. and ^), typically from a template\n   * // E.g. from the 'contacts.details' template\n   * <div ng-class=\"{highlighted: $state.includes('.item')}\">Item</div>\n   * </pre>\n   *\n   * Basic globbing patterns\n   * <pre>\n   * $state.$current.name = 'contacts.details.item.url';\n   *\n   * $state.includes(\"*.details.*.*\"); // returns true\n   * $state.includes(\"*.details.**\"); // returns true\n   * $state.includes(\"**.item.**\"); // returns true\n   * $state.includes(\"*.details.item.url\"); // returns true\n   * $state.includes(\"*.details.*.url\"); // returns true\n   * $state.includes(\"*.details.*\"); // returns false\n   * $state.includes(\"item.**\"); // returns false\n   * </pre>\n   *\n   * @param {string|object} stateOrName A partial name, relative name, glob pattern,\n   * or state object to be searched for within the current state name.\n   * @param {object=} params A param object, e.g. `{sectionId: section.id}`,\n   * that you'd like to test against the current active state.\n   * @param {object=} options An options object.  The options are:\n   *\n   * - **`relative`** - {string|object=} -  If `stateOrName` is a relative state reference and `options.relative` is set,\n   * .includes will test relative to `options.relative` state (or name).\n   *\n   * @returns {boolean} Returns true if it does include the state\n   */\n  includes(stateOrName: StateOrName, params?: RawParams, options?: TransitionOptions): boolean {\n    options = defaults(options, { relative: this.$current });\n    let glob = isString(stateOrName) && Glob.fromString(<string> stateOrName);\n\n    if (glob) {\n      if (!glob.matches(this.$current.name)) return false;\n      stateOrName = this.$current.name;\n    }\n    let state = this.router.stateRegistry.matcher.find(stateOrName, options.relative), include = this.$current.includes;\n\n    if (!isDefined(state)) return undefined;\n    if (!isDefined(include[state.name])) return false;\n    // @TODO Replace with Param.equals() ?\n    return params ? equalForKeys(Param.values(state.parameters(), params), this.params, Object.keys(params)) : true;\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$state#href\n   * @methodOf ui.router.state.$state\n   *\n   * @description\n   * A url generation method that returns the compiled url for the given state populated with the given params.\n   *\n   * @example\n   * <pre>\n   * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n   * </pre>\n   *\n   * @param {string|object} stateOrName The state name or state object you'd like to generate a url from.\n   * @param {object=} params An object of parameter values to fill the state's required parameters.\n   * @param {object=} options Options object. The options are:\n   *\n   * - **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the\n   *    first parameter, then the constructed href url will be built from the first navigable ancestor (aka\n   *    ancestor with a valid url).\n   * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n   * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'),\n   *    defines which state to be relative from.\n   * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n   *\n   * @returns {string} compiled state url\n   */\n  href(stateOrName: StateOrName, params: RawParams, options?: HrefOptions): string {\n    let defaultHrefOpts = {\n      lossy:    true,\n      inherit:  true,\n      absolute: false,\n      relative: this.$current\n    };\n    options = defaults(options, defaultHrefOpts);\n    params = params || {};\n\n    let state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n\n    if (!isDefined(state)) return null;\n    if (options.inherit) params = <any> this.params.$inherit(params, this.$current, state);\n\n    let nav = (state && options.lossy) ? state.navigable : state;\n\n    if (!nav || nav.url === undefined || nav.url === null) {\n      return null;\n    }\n    return this.router.urlRouter.href(nav.url, Param.values(state.parameters(), params), {\n      absolute: options.absolute\n    });\n  };\n\n  /** @hidden */\n  private _defaultErrorHandler: ((_error: any) => void) = function $defaultErrorHandler($error$) {\n    if ($error$ instanceof Error && $error$.stack) {\n      console.error($error$);\n      console.error($error$.stack);\n    } else if ($error$ instanceof Rejection) {\n      console.error($error$.toString());\n      if ($error$.detail && $error$.detail.stack)\n        console.error($error$.detail.stack);\n    } else {\n      console.error($error$);\n    }\n  };\n\n  /**\n   * Sets or gets the default [[transitionTo]] error handler.\n   *\n   * The error handler is called when a [[Transition]] is rejected or when any error occurred during the Transition.\n   * This includes errors caused by resolves and transition hooks.\n   *\n   * Note:\n   * This handler does not receive certain Transition rejections.\n   * Redirected and Ignored Transitions are not considered to be errors by [[StateService.transitionTo]].\n   *\n   * The built-in default error handler logs the error to the console.\n   *\n   * You can provide your own custom handler.\n   *\n   * @example\n   * ```js\n   *\n   * stateService.defaultErrorHandler(function() {\n   *   // Do not log transitionTo errors\n   * });\n   * ```\n   *\n   * @param handler a global error handler function\n   * @returns the current global error handler\n   */\n  defaultErrorHandler(handler?: (error: any) => void): (error: any) => void {\n    return this._defaultErrorHandler = handler || this._defaultErrorHandler;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$state#get\n   * @methodOf ui.router.state.$state\n   *\n   * @description\n   * Returns the state configuration object for any specific state or all states.\n   *\n   * @param {string|Object=} stateOrName (absolute or relative) If provided, will only get the config for\n   * the requested state. If not provided, returns an array of ALL state configs.\n   * @param {string|object=} base When stateOrName is a relative state reference, the state will be retrieved relative to context.\n   * @returns {Object|Array} State configuration object or array of all objects.\n   */\n  get(): StateDeclaration[];\n  get(stateOrName: StateOrName): StateDeclaration;\n  get(stateOrName: StateOrName, base: StateOrName): StateDeclaration;\n  get(stateOrName?: StateOrName, base?: StateOrName): any {\n    let reg = this.router.stateRegistry;\n    if (arguments.length === 0) return reg.get();\n    return reg.get(stateOrName, base || this.$current);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./state/stateService.ts\n **/","/** @module core */ /** */\nimport {StateParams} from \"./params/stateParams\";\nimport {StateDeclaration} from \"./state/interface\";\nimport {State} from \"./state/stateObject\";\nimport {Transition} from \"./transition/transition\";\nimport {Queue} from \"./common/queue\";\nimport {TransitionService} from \"./transition/transitionService\";\nimport {copy} from \"./common/common\";\nimport {Observable} from \"rxjs/Rx\";\n\n/**\n * Global mutable state\n *\n * This is where we hold the global mutable state such as current state, current\n * params, current transition, etc.\n */\nexport interface UIRouterGlobals {\n  /**\n   * Current parameter values\n   *\n   * The parameter values from the latest successful transition\n   */\n  params: StateParams;\n  /**\n   * Current state\n   *\n   * The to-state from the latest successful transition\n   */\n  current: StateDeclaration;\n  /**\n   * Current state\n   *\n   * The to-state from the latest successful transition\n   */\n  $current: State;\n  /**\n   * The current transition (in progress)\n   */\n  transition: Transition;\n}\n\n\n/**\n * Global mutable state\n */\nexport class Globals implements UIRouterGlobals {\n  params: StateParams = new StateParams();\n  current: StateDeclaration;\n  $current: State;\n  transition: Transition;\n  transitionHistory = new Queue<Transition>([], 1);\n  successfulTransitions = new Queue<Transition>([], 1);\n\n  constructor(transitionService: TransitionService) {\n    const beforeNewTransition = ($transition$: Transition) => {\n\n      this.transition = $transition$;\n      this.transitionHistory.enqueue($transition$);\n\n      const updateGlobalState = () => {\n        this.successfulTransitions.enqueue($transition$);\n        this.$current = $transition$.$to();\n        this.current = this.$current.self;\n        copy($transition$.params(), this.params);\n      };\n\n      $transition$.onSuccess({}, updateGlobalState, {priority: 10000});\n\n      const clearCurrentTransition = () => { if (this.transition === $transition$) this.transition = null; };\n\n      $transition$.promise.then(clearCurrentTransition, clearCurrentTransition);\n\n    };\n\n    transitionService.onBefore({}, beforeNewTransition);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./globals.ts\n **/","/** @module params */ /** for typedoc */\nimport {extend, ancestors, Obj} from \"../common/common\";\nimport {State} from \"../state/stateObject\";\n\nexport class StateParams {\n  [key: string]: any;\n\n  constructor(params: Obj = {}) {\n    extend(this, params);\n  }\n\n  /**\n   * Merges a set of parameters with all parameters inherited between the common parents of the\n   * current state and a given destination state.\n   *\n   * @param {Object} newParams The set of parameters which will be composited with inherited params.\n   * @param {Object} $current Internal definition of object representing the current state.\n   * @param {Object} $to Internal definition of object representing state to transition to.\n   */\n  $inherit(newParams: Obj, $current: State, $to: State) {\n    let parents = ancestors($current, $to),\n        parentParams: string[],\n        inherited: Obj = {},\n        inheritList: string[] = [];\n\n    for (let i in parents) {\n      if (!parents[i] || !parents[i].params) continue;\n      parentParams = Object.keys(parents[i].params);\n      if (!parentParams.length) continue;\n\n      for (let j in parentParams) {\n        if (inheritList.indexOf(parentParams[j]) >= 0) continue;\n        inheritList.push(parentParams[j]);\n        inherited[parentParams[j]] = this[parentParams[j]];\n      }\n    }\n    return extend({}, inherited, newParams);\n  };\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./params/stateParams.ts\n **/","/**\n * This module contains code for State Parameters.\n *\n * See [[ParamDeclaration]]\n * @module params\n * @preferred doc\n */\n/** for typedoc */\nexport * from \"./interface\";\nexport * from \"./param\";\nexport * from \"./paramTypes\";\nexport * from \"./stateParams\";\nexport * from \"./type\";\n\n\n\n/** WEBPACK FOOTER **\n ** ./params/module.ts\n **/","/** @module path */ /** for typedoc */\nexport * from \"./node\";\nexport * from \"./pathFactory\";\n\n\n/** WEBPACK FOOTER **\n ** ./path/module.ts\n **/","/** @module resolve */ /** for typedoc */\nexport * from \"./interface\";\nexport * from \"./resolvable\";\nexport * from \"./resolveContext\";\n\n\n\n/** WEBPACK FOOTER **\n ** ./resolve/module.ts\n **/","/** @module state */ /** for typedoc */\nexport * from \"./interface\";\nexport * from \"./stateBuilder\";\nexport * from \"./stateObject\";\nexport * from \"./stateMatcher\";\nexport * from \"./stateQueueManager\";\nexport * from \"./stateRegistry\";\nexport * from \"./stateService\";\nexport * from \"./targetState\";\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./state/module.ts\n **/","/**\n * This module contains APIs related to a Transition.\n *\n * See [[Transition]], [[$transitions]]\n *\n * @module transition\n * @preferred\n */\n/** for typedoc */\nexport * from \"./interface\";\nexport * from \"./hookBuilder\";\nexport * from \"./hookRegistry\";\nexport * from \"./rejectFactory\";\nexport * from \"./transition\";\nexport * from \"./transitionHook\";\nexport * from \"./transitionService\";\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./transition/module.ts\n **/","/** @module url */ /** for typedoc */\nexport * from \"./urlMatcher\";\nexport * from \"./urlMatcherConfig\";\nexport * from \"./urlMatcherFactory\";\nexport * from \"./urlRouter\";\n\n\n\n/** WEBPACK FOOTER **\n ** ./url/module.ts\n **/","/** @module view */ /** for typedoc */\nexport * from \"./interface\";\nexport * from \"./view\";\n\n\n\n/** WEBPACK FOOTER **\n ** ./view/module.ts\n **/","/**\n * # UI-Router for Angular 1\n *\n * - Provides an implementation for the [[CoreServices]] API, based on angular 1 services.\n * - Also registers some services with the angular 1 injector.\n * - Creates and bootstraps a new [[UIRouter]] object.  Ties it to the the angular 1 lifecycle.\n *\n * @module ng1\n * @preferred\n */\n\n/** for typedoc */\nimport {UIRouter} from \"../router\";\nimport {services, $InjectorLike} from \"../common/coreservices\";\nimport {bindFunctions, removeFrom, applyPairs, IInjectable} from \"../common/common\";\nimport {TypedMap} from \"../common/common\"; // has or is using\nimport {prop} from \"../common/hof\";\nimport {isObject, isString} from \"../common/predicates\";\nimport {resolveFactory} from \"./legacy/resolveService\";\nimport {trace} from \"../common/trace\";\nimport {ng1ViewsBuilder, ng1ViewConfigFactory} from \"./statebuilders/views\";\nimport {TemplateFactory} from \"./templateFactory\";\nimport {StateParams} from \"../params/stateParams\";\nimport {TransitionService} from \"../transition/transitionService\";\nimport {StateService} from \"../state/stateService\";\nimport {StateProvider} from \"./stateProvider\";\nimport {UrlRouterProvider, UrlRouter} from \"../url/urlRouter\";\nimport {UrlMatcherFactory} from \"../url/urlMatcherFactory\";\nimport {getStateHookBuilder} from \"./statebuilders/onEnterExitRetain\";\nimport {ResolveContext} from \"../resolve/resolveContext\";\n\nimport * as angular from 'angular';\nimport IInjectorService = angular.auto.IInjectorService;\nimport IQService = angular.IQService;\nimport ILocationProvider = angular.ILocationProvider;\nimport ILocationService = angular.ILocationService;\nimport IHttpService = angular.IHttpService;\nimport ITemplateCacheService = angular.ITemplateCacheService;\nimport IScope = angular.IScope;\n\n/** @hidden */\nlet app = angular.module(\"ui.router.angular1\", []);\n\n/**\n * @ngdoc overview\n * @name ui.router.util\n *\n * @description\n * # ui.router.util sub-module\n *\n * This module is a dependency of other sub-modules. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n *\n */\nangular.module('ui.router.util', ['ng', 'ui.router.init']);\n\n/**\n * @ngdoc overview\n * @name ui.router.router\n *\n * @requires ui.router.util\n *\n * @description\n * # ui.router.router sub-module\n *\n * This module is a dependency of other sub-modules. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n */\nangular.module('ui.router.router', ['ui.router.util']);\n\n/**\n * @ngdoc overview\n * @name ui.router.state\n *\n * @requires ui.router.router\n * @requires ui.router.util\n *\n * @description\n * # ui.router.state sub-module\n *\n * This module is a dependency of the main ui.router module. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n *\n */\nangular.module('ui.router.state', ['ui.router.router', 'ui.router.util', 'ui.router.angular1']);\n\n/**\n * @ngdoc overview\n * @name ui.router\n *\n * @requires ui.router.state\n *\n * @description\n * # ui.router\n *\n * ## The main module for ui.router\n * There are several sub-modules included with the ui.router module, however only this module is needed\n * as a dependency within your angular app. The other modules are for organization purposes.\n *\n * The modules are:\n * * ui.router - the main \"umbrella\" module\n * * ui.router.router -\n *\n * *You'll need to include **only** this module as the dependency within your angular app.*\n *\n * <pre>\n * <!doctype html>\n * <html ng-app=\"myApp\">\n * <head>\n *   <script src=\"js/angular.js\"></script>\n *   <!-- Include the ui-router script -->\n *   <script src=\"js/angular-ui-router.min.js\"></script>\n *   <script>\n *     // ...and add 'ui.router' as a dependency\n *     var myApp = angular.module('myApp', ['ui.router']);\n *   </script>\n * </head>\n * <body>\n * </body>\n * </html>\n * </pre>\n */\nangular.module('ui.router', ['ui.router.init', 'ui.router.state', 'ui.router.angular1']);\n\nangular.module('ui.router.compat', ['ui.router']);\n\n/**\n * Annotates a controller expression (may be a controller function(), a \"controllername\",\n * or \"controllername as name\")\n *\n * - Temporarily decorates $injector.instantiate.\n * - Invokes $controller() service\n *   - Calls $injector.instantiate with controller constructor\n * - Annotate constructor\n * - Undecorate $injector\n *\n * returns an array of strings, which are the arguments of the controller expression\n */\n\nexport function annotateController(controllerExpression: (IInjectable|string)): string[] {\n  let $injector = <any> services.$injector;\n  let $controller = $injector.get(\"$controller\");\n  let oldInstantiate = $injector.instantiate;\n  try {\n    let deps: any[];\n\n    $injector.instantiate = function fakeInstantiate(constructorFunction: any) {\n      $injector.instantiate = oldInstantiate; // Un-decorate ASAP\n      deps = $injector.annotate(constructorFunction);\n    };\n\n    $controller(controllerExpression, { $scope: {} });\n\n    return deps;\n  } finally {\n    $injector.instantiate = oldInstantiate;\n  }\n}\n\nlet router: UIRouter = null;\ndeclare module \"../router\" {\n  interface UIRouter {\n    /** @hidden TODO: move this to ng1.ts */\n    stateProvider: StateProvider;\n  }\n}\n\n$uiRouter.$inject = ['$locationProvider'];\n/** This angular 1 provider instantiates a Router and exposes its services via the angular injector */\nfunction $uiRouter($locationProvider: ILocationProvider) {\n\n  // Create a new instance of the Router when the $uiRouterProvider is initialized\n  router = new UIRouter();\n  router.stateProvider = new StateProvider(router.stateRegistry, router.stateService);\n\n  // Apply ng1 specific StateBuilder code for `views`, `resolve`, and `onExit/Retain/Enter` properties\n  router.stateRegistry.decorator(\"views\", ng1ViewsBuilder);\n  router.stateRegistry.decorator(\"onExit\", getStateHookBuilder(\"onExit\"));\n  router.stateRegistry.decorator(\"onRetain\", getStateHookBuilder(\"onRetain\"));\n  router.stateRegistry.decorator(\"onEnter\", getStateHookBuilder(\"onEnter\"));\n\n  router.viewService.viewConfigFactory('ng1', ng1ViewConfigFactory);\n\n  // Bind LocationConfig.hashPrefix to $locationProvider.hashPrefix\n  bindFunctions($locationProvider, services.locationConfig, $locationProvider, ['hashPrefix']);\n\n  // Create a LocationService.onChange registry\n  let urlListeners: Function[] = [];\n  services.location.onChange = (callback) => {\n    urlListeners.push(callback);\n    return () => removeFrom(urlListeners)(callback);\n  };\n\n  this.$get = $get;\n  $get.$inject = ['$location', '$browser', '$sniffer', '$rootScope', '$http', '$templateCache'];\n  function $get($location: ILocationService, $browser: any, $sniffer: any, $rootScope: IScope, $http: IHttpService, $templateCache: ITemplateCacheService) {\n\n    // Bind $locationChangeSuccess to the listeners registered in LocationService.onChange\n    $rootScope.$on(\"$locationChangeSuccess\", evt => urlListeners.forEach(fn => fn(evt)));\n\n    // Bind LocationConfig.html5Mode to $locationProvider.html5Mode and $sniffer.history\n    services.locationConfig.html5Mode = function() {\n      let html5Mode: any = $locationProvider.html5Mode();\n      html5Mode = isObject(html5Mode) ? html5Mode.enabled : html5Mode;\n      return html5Mode && $sniffer.history;\n    };\n\n    services.location.setUrl = (newUrl: string, replace = false) =>  {\n      $location.url(newUrl);\n      if (replace) $location.replace();\n    };\n\n    services.template.get = (url: string) =>\n        $http.get(url, { cache: $templateCache, headers: { Accept: 'text/html' }}).then(prop(\"data\")) as any;\n\n    // Bind these LocationService functions to $location\n    bindFunctions($location, services.location, $location, [\"replace\", \"url\", \"path\", \"search\", \"hash\"]);\n    // Bind these LocationConfig functions to $location\n    bindFunctions($location, services.locationConfig, $location, ['port', 'protocol', 'host']);\n    // Bind these LocationConfig functions to $browser\n    bindFunctions($browser, services.locationConfig, $browser, ['baseHref']);\n\n    return router;\n  }\n}\n\n// The 'ui.router' ng1 module depends on 'ui.router.init' module.\nangular.module('ui.router.init', []).provider(\"$uiRouter\", <any> $uiRouter);\n\nrunBlock.$inject = ['$injector', '$q'];\nfunction runBlock($injector: IInjectorService, $q: IQService) {\n  services.$injector = $injector;\n  services.$q = <any> $q;\n}\n\nangular.module('ui.router.init').run(runBlock);\n\n// This effectively calls $get() to init when we enter runtime\nangular.module('ui.router.init').run(['$uiRouter', function($uiRouter: UIRouter) { }]);\n\n// $urlMatcherFactory service and $urlMatcherFactoryProvider\nangular.module('ui.router.util').provider('$urlMatcherFactory', ['$uiRouterProvider', () => router.urlMatcherFactory]);\nangular.module('ui.router.util').run(['$urlMatcherFactory', function($urlMatcherFactory: UrlMatcherFactory) { }]);\n\n// $urlRouter service and $urlRouterProvider\nfunction getUrlRouterProvider() {\n  router.urlRouterProvider[\"$get\"] = function() {\n    router.urlRouter.update(true);\n    if (!this.interceptDeferred) router.urlRouter.listen();\n    return router.urlRouter;\n  };\n  return router.urlRouterProvider;\n}\nangular.module('ui.router.router').provider('$urlRouter', ['$uiRouterProvider', getUrlRouterProvider]);\nangular.module('ui.router.router').run(['$urlRouter', function($urlRouter: UrlRouter) { }]);\n\n// $state service and $stateProvider\n// $urlRouter service and $urlRouterProvider\nfunction getStateProvider() {\n  router.stateProvider[\"$get\"] = function() {\n    // Autoflush once we are in runtime\n    router.stateRegistry.stateQueue.autoFlush(router.stateService);\n    return router.stateService;\n  };\n  return router.stateProvider;\n}\nangular.module('ui.router.state').provider('$state', ['$uiRouterProvider', getStateProvider]);\nangular.module('ui.router.state').run(['$state', function($state: StateService) { }]);\n\n// $stateParams service\nangular.module('ui.router.state').factory('$stateParams', ['$uiRouter', ($uiRouter: UIRouter) =>\n    $uiRouter.globals.params]);\n\n// $transitions service and $transitionsProvider\nfunction getTransitionsProvider() {\n  router.transitionService[\"$get\"] = () => router.transitionService;\n  return router.transitionService;\n}\nangular.module('ui.router.state').provider('$transitions', ['$uiRouterProvider', getTransitionsProvider]);\n\n// $templateFactory service\nangular.module('ui.router.util').factory('$templateFactory', ['$uiRouter', () => new TemplateFactory()]);\n\n// The $view service\nangular.module('ui.router').factory('$view', () => router.viewService);\n\n// The old $resolve service\nangular.module('ui.router').factory('$resolve', <any> resolveFactory);\n\n// $trace service\nangular.module(\"ui.router\").service(\"$trace\", () => trace);\nwatchDigests.$inject = ['$rootScope'];\nexport function watchDigests($rootScope: IScope) {\n  $rootScope.$watch(function() { trace.approximateDigests++; });\n}\nangular.module(\"ui.router\").run(watchDigests);\n\nexport const getLocals = (ctx: ResolveContext) => {\n  let tokens = ctx.getTokens().filter(isString);\n  let tuples = tokens.map(key => [ key, ctx.getResolvable(key).data ]);\n  return tuples.reduce(applyPairs, {});\n};\n\n/** Injectable services */\n\n/**\n * An injectable service object which has the current state parameters\n *\n * This angular service (singleton object) holds the current state parameters.\n * The values in `$stateParams` are not updated until *after* a [[Transition]] successfully completes.\n *\n * This object can be injected into other services.\n *\n * @example\n * ```js\n *\n * SomeService.$inject = ['$http', '$stateParams'];\n * function SomeService($http, $stateParams) {\n *   return {\n *     getUser: function() {\n *       return $http.get('/api/users/' + $stateParams.username);\n *     }\n *   }\n * };\n * angular.service('SomeService', SomeService);\n * ```\n *\n * ### Deprecation warning:\n *\n * When `$stateParams` is injected into transition hooks, resolves and view controllers, they receive a different\n * object than this global service object.  In those cases, the injected object has the parameter values for the\n * *pending* Transition.\n *\n * Because of these confusing details, this service is deprecated.\n *\n * @deprecated Instead of using `$stateParams, inject the current [[Transition]] as `$transition$` and use [[Transition.params]]\n * ```js\n * MyController.$inject = ['$transition$'];\n * function MyController($transition$) {\n *   var username = $transition$.params().username;\n *   // .. do something with username\n * }\n * ```\n */\nvar $stateParams: StateParams;\n\n/**\n * An injectable service primarily used to register transition hooks\n *\n * This angular service exposes the [[TransitionService]] singleton, which is primarily used to add transition hooks.\n *\n * The same object is also exposed as [[$transitionsProvider]] for injection during angular config time.\n */\nvar $transitions: TransitionService;\n\n/**\n * A config-time injectable provider primarily used to register transition hooks\n *\n * This angular provider exposes the [[TransitionService]] singleton, which is primarily used to add transition hooks.\n *\n * The same object is also exposed as [[$transitions]] for injection at runtime.\n */\nvar $transitionsProvider: TransitionService;\n\n/**\n * An injectable service used to query for current state information.\n *\n * This angular service exposes the [[StateService]] singleton.\n */\nvar $state: StateService;\n\n/**\n * A config-time injectable provider used to register states.\n *\n * This angular service exposes the [[StateProvider]] singleton.\n */\nvar $stateProvider: StateProvider;\n\n/**\n * A config-time injectable provider used to manage the URL.\n *\n * This angular service exposes the [[UrlRouterProvider]] singleton.\n */\nvar $urlRouterProvider: UrlRouterProvider;\n\n/**\n * An injectable service used to configure URL redirects.\n *\n * This angular service exposes the [[UrlRouter]] singleton.\n */\nvar $urlRouter: UrlRouter;\n\n/**\n * An injectable service used to configure the URL.\n *\n * This service is used to set url mapping options, and create [[UrlMatcher]] objects.\n *\n * This angular service exposes the [[UrlMatcherFactory]] singleton.\n * The singleton is also exposed at config-time as the [[$urlMatcherFactoryProvider]].\n */\nvar $urlMatcherFactory: UrlMatcherFactory;\n\n/**\n * An injectable service used to configure the URL.\n *\n * This service is used to set url mapping options, and create [[UrlMatcher]] objects.\n *\n * This angular service exposes the [[UrlMatcherFactory]] singleton at config-time.\n * The singleton is also exposed at runtime as the [[$urlMatcherFactory]].\n */\nvar $urlMatcherFactoryProvider: UrlMatcherFactory;\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng1/services.ts\n **/","/** @module ng1 */ /** */\nimport {State} from \"../../state/stateObject\";\nimport {PathNode} from \"../../path/node\";\nimport {ResolveContext} from \"../../resolve/resolveContext\";\nimport {Obj, mapObj} from \"../../common/common\";\nimport {resolvablesBuilder} from \"../../state/stateBuilder\";\n\n/**\n * Implementation of the legacy `$resolve` service for angular 1.\n */\nvar $resolve = {\n  /**\n   * Asynchronously injects a resolve block.\n   *\n   * This emulates most of the behavior of the ui-router 0.2.x $resolve.resolve() service API.\n   *\n   * Given an object `invocables`, where keys are strings and values are injectable functions,\n   * injects each function, and waits for the resulting promise to resolve.\n   * When all resulting promises are resolved, returns the results as an object.\n   *\n   * @example\n   * ```js\n   *\n   * let invocables = {\n   *   foo: [ '$http', ($http) =>\n   *            $http.get('/api/foo').then(resp => resp.data) ],\n   *   bar: [ 'foo', '$http', (foo, $http) =>\n   *            $http.get('/api/bar/' + foo.barId).then(resp => resp.data) ]\n   * }\n   * $resolve.resolve(invocables)\n   *     .then(results => console.log(results.foo, results.bar))\n   * // Logs foo and bar:\n   * // { id: 123, barId: 456, fooData: 'foo data' }\n   * // { id: 456, barData: 'bar data' }\n   * ```\n   *\n   * @param invocables an object which looks like an [[StateDefinition.resolve]] object; keys are resolve names and values are injectable functions\n   * @param locals key/value pre-resolved data (locals)\n   * @param parent a promise for a \"parent resolve\"\n   */\n  resolve: (invocables: { [key: string]: Function }, locals = {}, parent?: Promise<any>) => {\n    let parentNode = new PathNode(new State(<any> { params: {}, resolvables: [] }));\n    let node = new PathNode(new State(<any> { params: {}, resolvables: [] }));\n    let context = new ResolveContext([parentNode, node]);\n\n    context.addResolvables(resolvablesBuilder(<any> { resolve: invocables }), node.state);\n\n    const resolveData = (parentLocals: Obj) => {\n      const rewrap = (_locals: Obj) => resolvablesBuilder(<any> { resolve: mapObj(_locals, local => () => local) });\n      context.addResolvables(rewrap(parentLocals), parentNode.state);\n      context.addResolvables(rewrap(locals), node.state);\n\n      const tuples2ObjR = (acc: Obj, tuple: { token: any, value: any }) => {\n        acc[tuple.token] = tuple.value;\n        return acc;\n      };\n      return context.resolvePath().then(results => results.reduce(tuples2ObjR, {}));\n    };\n\n    return parent ? parent.then(resolveData) : resolveData({});\n  }\n};\n\n/** @hidden */\nexport const resolveFactory = () => $resolve;\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng1/legacy/resolveService.ts\n **/","/** @module ng1 */ /** */\nimport {State} from \"../../state/stateObject\";\nimport {Obj, pick, forEach, anyTrueR, unnestR, tail, extend} from \"../../common/common\";\nimport {kebobString} from \"../../common/strings\";\nimport {ViewConfig} from \"../../view/interface\";\nimport {Ng1ViewDeclaration} from \"../interface\";\nimport {ViewService, ViewConfigFactory} from \"../../view/view\";\nimport {isArray, isInjectable, isDefined, isString, isObject} from \"../../common/predicates\";\nimport {services} from \"../../common/coreservices\";\nimport {trace} from \"../../common/trace\";\nimport {PathNode} from \"../../path/node\";\nimport {TemplateFactory} from \"../templateFactory\";\nimport {ResolveContext} from \"../../resolve/resolveContext\";\nimport {Resolvable} from \"../../resolve/resolvable\";\nimport {RawParams} from \"../../params/interface\";\n\nimport * as angular from 'angular';\nimport IInjectorService = angular.auto.IInjectorService;\n\nexport const ng1ViewConfigFactory: ViewConfigFactory = (path, view) =>\n    [new Ng1ViewConfig(path, view)];\n\n/**\n * This is a [[StateBuilder.builder]] function for angular1 `views`.\n *\n * When the [[StateBuilder]] builds a [[State]] object from a raw [[StateDeclaration]], this builder\n * handles the `views` property with logic specific to angular-ui-router (ng1).\n *\n * If no `views: {}` property exists on the [[StateDeclaration]], then it creates the `views` object\n * and applies the state-level configuration to a view named `$default`.\n */\nexport function ng1ViewsBuilder(state: State) {\n  let tplKeys = ['templateProvider', 'templateUrl', 'template', 'notify', 'async'],\n      ctrlKeys = ['controller', 'controllerProvider', 'controllerAs', 'resolveAs'],\n      compKeys = ['component', 'bindings'],\n      nonCompKeys = tplKeys.concat(ctrlKeys),\n      allKeys = compKeys.concat(nonCompKeys);\n\n  let views: { [key:string]: Ng1ViewDeclaration } = {},\n      viewsObject = state.views || {\"$default\": pick(state, allKeys)};\n\n  forEach(viewsObject, function (config: Ng1ViewDeclaration, name: string) {\n    // Account for views: { \"\": { template... } }\n    name = name || \"$default\";\n    // Account for views: { header: \"headerComponent\" }\n    if (isString(config)) config = { component: <string> config };\n    if (!Object.keys(config).length) return;\n\n    // Configure this view for routing to an angular 1.5+ style .component (or any directive, really)\n    if (config.component) {\n      if (nonCompKeys.map(key => isDefined(config[key])).reduce(anyTrueR, false)) {\n        throw new Error(`Cannot combine: ${compKeys.join(\"|\")} with: ${nonCompKeys.join(\"|\")} in stateview: 'name@${state.name}'`);\n      }\n\n      // Dynamically build a template like \"<component-name input1='::$resolve.foo'></component-name>\"\n      config.templateProvider = ['$injector', function($injector: IInjectorService) {\n        const resolveFor = (key: string) =>\n            config.bindings && config.bindings[key] || key;\n        const prefix = angular.version.minor >= 3 ? \"::\" : \"\";\n        const attributeTpl = (input: BindingTuple) => {\n          var attrName = kebobString(input.name);\n          var resolveName = resolveFor(input.name);\n          if (input.type === '@')\n            return `${attrName}='{{${prefix}$resolve.${resolveName}}}'`;\n          return `${attrName}='${prefix}$resolve.${resolveName}'`;\n        };\n\n        let attrs = getComponentInputs($injector, config.component).map(attributeTpl).join(\" \");\n        let kebobName = kebobString(config.component);\n        return `<${kebobName} ${attrs}></${kebobName}>`;\n      }];\n    }\n\n    config.resolveAs = config.resolveAs || '$resolve';\n    config.$type = \"ng1\";\n    config.$context = state;\n    config.$name = name;\n\n    let normalized = ViewService.normalizeUIViewTarget(config.$context, config.$name);\n    config.$uiViewName = normalized.uiViewName;\n    config.$uiViewContextAnchor = normalized.uiViewContextAnchor;\n\n    views[name] = config;\n  });\n  return views;\n}\n\ninterface BindingTuple {\n  name: string;\n  type: string;\n}\n\n// for ng 1.2 style, process the scope: { input: \"=foo\" }\n// for ng 1.3 through ng 1.5, process the component's bindToController: { input: \"=foo\" } object\nconst scopeBindings = (bindingsObj: Obj) => Object.keys(bindingsObj || {})\n  // [ 'input', [ '=foo', '=', 'foo' ] ]\n  .map(key => [key, /^([=<@])[?]?(.*)/.exec(bindingsObj[key])])\n  // skip malformed values\n  .filter(tuple => isDefined(tuple) && isDefined(tuple[1]))\n  // { name: ('foo' || 'input'), type: '=' }\n  .map(tuple => ({ name: tuple[1][2] || tuple[0], type: tuple[1][1] } as BindingTuple));\n\n// Given a directive definition, find its object input attributes\n// Use different properties, depending on the type of directive (component, bindToController, normal)\nconst getBindings = (def: any) => {\n  if (isObject(def.bindToController)) return scopeBindings(def.bindToController);\n  return scopeBindings(def.scope);\n};\n\n// Gets all the directive(s)' inputs ('@', '=', and '<')\nfunction getComponentInputs($injector: IInjectorService, name: string) {\n  let cmpDefs = <any[]> $injector.get(name + \"Directive\"); // could be multiple\n  if (!cmpDefs || !cmpDefs.length) throw new Error(`Unable to find component named '${name}'`);\n  return cmpDefs.map(getBindings).reduce(unnestR, []);\n}\n\nlet id = 0;\nexport class Ng1ViewConfig implements ViewConfig {\n  $id = id++;\n  loaded: boolean = false;\n  controller: Function;\n  template: string;\n  locals: any; // TODO: delete me\n\n  constructor(public path: PathNode[], public viewDecl: Ng1ViewDeclaration) { }\n\n  load() {\n    let $q = services.$q;\n    if (!this.hasTemplate())\n      throw new Error(`No template configuration specified for '${this.viewDecl.$uiViewName}@${this.viewDecl.$uiViewContextAnchor}'`);\n\n    let context = new ResolveContext(this.path);\n    let params = this.path.reduce((acc, node) => extend(acc, node.paramValues), {});\n\n    let promises: any = {\n      template: $q.when(this.getTemplate(params, new TemplateFactory(), context)),\n      controller: $q.when(this.getController(context))\n    };\n\n    return $q.all(promises).then((results) => {\n      trace.traceViewServiceEvent(\"Loaded\", this);\n      this.controller = results.controller;\n      this.template = results.template;\n      return this;\n    });\n  }\n\n  /**\n   * Checks a view configuration to ensure that it specifies a template.\n   *\n   * @return {boolean} Returns `true` if the configuration contains a valid template, otherwise `false`.\n   */\n  hasTemplate() {\n    return !!(this.viewDecl.template || this.viewDecl.templateUrl || this.viewDecl.templateProvider);\n  }\n\n  getTemplate(params: RawParams, $factory: TemplateFactory, context: ResolveContext) {\n    return $factory.fromConfig(this.viewDecl, params, context);\n  }\n\n  /**\n   * Gets the controller for a view configuration.\n   *\n   * @returns {Function|Promise.<Function>} Returns a controller, or a promise that resolves to a controller.\n   */\n  getController(context: ResolveContext): (String|Function|Promise<Function|String>) {\n    let provider = this.viewDecl.controllerProvider;\n    if (!isInjectable(provider)) return this.viewDecl.controller;\n    let deps = services.$injector.annotate(provider);\n    let providerFn = isArray(provider) ? tail(<any> provider) : provider;\n    let resolvable = new Resolvable(\"\", <any> providerFn, deps);\n    return resolvable.get(context);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng1/statebuilders/views.ts\n **/","/** @module view */ /** for typedoc */\nimport {isArray, isDefined, isFunction} from \"../common/predicates\";\nimport {services} from \"../common/coreservices\";\nimport {Ng1ViewDeclaration} from \"./interface\";\nimport {IInjectable, tail} from \"../common/common\";\nimport {ResolveContext} from \"../resolve/resolveContext\";\nimport {Resolvable} from \"../resolve/resolvable\";\nimport {RawParams} from \"../params/interface\";\n\n/**\n * Service which manages loading of templates from a ViewConfig.\n */\nexport class TemplateFactory {\n  /**\n   * Creates a template from a configuration object.\n   *\n   * @param config Configuration object for which to load a template.\n   * The following properties are search in the specified order, and the first one \n   * that is defined is used to create the template:\n   *\n   * @param params  Parameters to pass to the template function.\n   * @param context The resolve context associated with the template's view\n   *\n   * @return {string|object}  The template html as a string, or a promise for \n   * that string,or `null` if no template is configured.\n   */\n  fromConfig(config: Ng1ViewDeclaration, params: any, context: ResolveContext) {\n    return (\n      isDefined(config.template) ? this.fromString(config.template, params) :\n      isDefined(config.templateUrl) ? this.fromUrl(config.templateUrl, params) :\n      isDefined(config.templateProvider) ? this.fromProvider(config.templateProvider, params, context) :\n      null\n    );\n  };\n\n  /**\n   * Creates a template from a string or a function returning a string.\n   *\n   * @param template html template as a string or function that returns an html template as a string.\n   * @param params Parameters to pass to the template function.\n   *\n   * @return {string|object} The template html as a string, or a promise for that \n   * string.\n   */\n  fromString(template: (string|Function), params?: RawParams) {\n    return isFunction(template) ? (<any> template)(params) : template;\n  };\n\n  /**\n   * Loads a template from the a URL via `$http` and `$templateCache`.\n   *\n   * @param {string|Function} url url of the template to load, or a function \n   * that returns a url.\n   * @param {Object} params Parameters to pass to the url function.\n   * @return {string|Promise.<string>} The template html as a string, or a promise \n   * for that string.\n   */\n  fromUrl(url: (string|Function), params: any) {\n    if (isFunction(url)) url = (<any> url)(params);\n    if (url == null) return null;\n    return services.template.get(<string> url);\n  };\n\n  /**\n   * Creates a template by invoking an injectable provider function.\n   *\n   * @param provider Function to invoke via `locals`\n   * @param {Function} injectFn a function used to invoke the template provider\n   * @return {string|Promise.<string>} The template html as a string, or a promise \n   * for that string.\n   */\n  fromProvider(provider: IInjectable, params: any, context: ResolveContext) {\n    let deps = services.$injector.annotate(provider);\n    let providerFn = isArray(provider) ? tail(<any[]> provider) : provider;\n    let resolvable = new Resolvable(\"\", <Function> providerFn, deps);\n    return resolvable.get(context);\n  };\n}\n\n\n/** WEBPACK FOOTER **\n ** ./ng1/templateFactory.ts\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_57__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular\"\n ** module id = 57\n ** module chunks = 0 1 2 3\n **/","/** @module ng1 */ /** for typedoc */\nimport {isObject} from \"../common/predicates\";\nimport {bindFunctions} from \"../common/common\";\nimport {BuilderFunction} from \"../state/stateBuilder\";\nimport {StateRegistry} from \"../state/stateRegistry\";\nimport {Ng1StateDeclaration} from \"./interface\";\nimport {StateService, OnInvalidCallback} from \"../state/stateService\";\n\n/**\n * @ngdoc object\n * @name ui.router.state.$stateProvider\n *\n * @requires ui.router.router.$urlRouterProvider\n * @requires ui.router.util.$urlMatcherFactoryProvider\n *\n * @description\n * The new `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n * on state.\n *\n * A state corresponds to a \"place\" in the application in terms of the overall UI and\n * navigation. A state describes (via the controller / template / view properties) what\n * the UI looks like and does at that place.\n *\n * States often have things in common, and the primary way of factoring out these\n * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n * nested states.\n *\n * The `$stateProvider` provides interfaces to declare these states for your app.\n */\nexport class StateProvider {\n  constructor(private stateRegistry: StateRegistry, private stateService: StateService) {\n    bindFunctions(StateProvider.prototype, this, this);\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$stateProvider#decorator\n   * @methodOf ui.router.state.$stateProvider\n   *\n   * @description\n   * Allows you to extend (carefully) or override (at your own peril) the\n   * `stateBuilder` object used internally by `$stateProvider`. This can be used\n   * to add custom functionality to ui-router, for example inferring templateUrl\n   * based on the state name.\n   *\n   * When passing only a name, it returns the current (original or decorated) builder\n   * function that matches `name`.\n   *\n   * The builder functions that can be decorated are listed below. Though not all\n   * necessarily have a good use case for decoration, that is up to you to decide.\n   *\n   * In addition, users can attach custom decorators, which will generate new\n   * properties within the state's internal definition. There is currently no clear\n   * use-case for this beyond accessing internal states (i.e. $state.$current),\n   * however, expect this to become increasingly relevant as we introduce additional\n   * meta-programming features.\n   *\n   * **Warning**: Decorators should not be interdependent because the order of\n   * execution of the builder functions in non-deterministic. Builder functions\n   * should only be dependent on the state definition object and super function.\n   *\n   *\n   * Existing builder functions and current return values:\n   *\n   * - **parent** `{object}` - returns the parent state object.\n   * - **data** `{object}` - returns state data, including any inherited data that is not\n   *   overridden by own values (if any).\n   * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n   *   or `null`.\n   * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is\n   *   navigable).\n   * - **params** `{object}` - returns an array of state params that are ensured to\n   *   be a super-set of parent's params.\n   * - **views** `{object}` - returns a views object where each key is an absolute view\n   *   name (i.e. \"viewName@stateName\") and each value is the config object\n   *   (template, controller) for the view. Even when you don't use the views object\n   *   explicitly on a state config, one is still created for you internally.\n   *   So by decorating this builder function you have access to decorating template\n   *   and controller properties.\n   * - **ownParams** `{object}` - returns an array of params that belong to the state,\n   *   not including any params defined by ancestor states.\n   * - **path** `{string}` - returns the full path from the root down to this state.\n   *   Needed for state activation.\n   * - **includes** `{object}` - returns an object that includes every state that\n   *   would pass a `$state.includes()` test.\n   *\n   * @example\n   * <pre>\n   * // Override the internal 'views' builder with a function that takes the state\n   * // definition, and a reference to the internal function being overridden:\n   * $stateProvider.decorator('views', function (state, parent) {\n   *   let result = {},\n   *       views = parent(state);\n   *\n   *   angular.forEach(views, function (config, name) {\n   *     let autoName = (state.name + '.' + name).replace('.', '/');\n   *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n   *     result[name] = config;\n   *   });\n   *   return result;\n   * });\n   *\n   * $stateProvider.state('home', {\n   *   views: {\n   *     'contact.list': { controller: 'ListController' },\n   *     'contact.item': { controller: 'ItemController' }\n   *   }\n   * });\n   *\n   * // ...\n   *\n   * $state.go('home');\n   * // Auto-populates list and item views with /partials/home/contact/list.html,\n   * // and /partials/home/contact/item.html, respectively.\n   * </pre>\n   *\n   * @param {string} name The name of the builder function to decorate.\n   * @param {object} func A function that is responsible for decorating the original\n   * builder function. The function receives two parameters:\n   *\n   *   - `{object}` - state - The state config object.\n   *   - `{object}` - super - The original builder function.\n   *\n   * @return {object} $stateProvider - $stateProvider instance\n   */\n  decorator(name: string, func: BuilderFunction) {\n    return this.stateRegistry.decorator(name, func) || this;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$stateProvider#state\n   * @methodOf ui.router.state.$stateProvider\n   *\n   * @description\n   * Registers a state configuration under a given state name. The stateConfig object\n   * has the following acceptable properties.\n   *\n   * <a id='template'></a>\n   *\n   * - **`template`** - {string|function=} - html template as a string or a function that returns\n   *   an html template as a string which should be used by the uiView directives. This property\n   *   takes precedence over templateUrl.\n   *\n   *   If `template` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\n   *     applying the current state\n   *\n   * <a id='templateUrl'></a>\n   *\n   * - **`templateUrl`** - {string|function=} - path or function that returns a path to an html\n   *   template that should be used by uiView.\n   *\n   *   If `templateUrl` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\n   *     applying the current state\n   *\n   * <a id='templateProvider'></a>\n   *\n   * - **`templateProvider`** - {function=} - Provider function that returns HTML content\n   *   string.\n   *\n   * <a id='controller'></a>\n   *\n   * - **`controller`** - {string|function=} -  Controller fn that should be associated with newly\n   *   related scope or the name of a registered controller if passed as a string.\n   *\n   * <a id='controllerProvider'></a>\n   *\n   * - **`controllerProvider`** - {function=} - Injectable provider function that returns\n   *   the actual controller or string.\n   *\n   * <a id='controllerAs'></a>\n   *\n   * - **`controllerAs`** – {string=} – A controller alias name. If present the controller will be\n   *   published to scope under the controllerAs name.\n   *\n   * <a id='resolve'></a>\n   *\n   * - **`resolve`** - {object.&lt;string, function&gt;=} - An optional map of dependencies which\n   *   should be injected into the controller. If any of these dependencies are promises,\n   *   the router will wait for them all to be resolved or one to be rejected before the\n   *   controller is instantiated. If all the promises are resolved successfully, the values\n   *   of the resolved promises are injected and $stateChangeSuccess event is fired. If any\n   *   of the promises are rejected the $stateChangeError event is fired. The map object is:\n   *\n   *   - key - {string}: name of dependency to be injected into controller\n   *   - factory - {string|function}: If string then it is alias for service. Otherwise if function,\n   *     it is injected and return value it treated as dependency. If result is a promise, it is\n   *     resolved before its value is injected into controller.\n   *\n   * <a id='url'></a>\n   *\n   * - **`url`** - {string=} - A url with optional parameters. When a state is navigated or\n   *   transitioned to, the `$stateParams` service will be populated with any\n   *   parameters that were passed.\n   *\n   * <a id='params'></a>\n   *\n   * - **`params`** - {object=} - An array of parameter names or regular expressions. Only\n   *   use this within a state if you are not using url. Otherwise you can specify your\n   *   parameters within the url. When a state is navigated or transitioned to, the\n   *   $stateParams service will be populated with any parameters that were passed.\n   *\n   * <a id='views'></a>\n   *\n   * - **`views`** - {object=} - Use the views property to set up multiple views or to target views\n   *   manually/explicitly.\n   *\n   * <a id='abstract'></a>\n   *\n   * - **`abstract`** - {boolean=} - An abstract state will never be directly activated,\n   *   but can provide inherited properties to its common children states.\n   *\n   * <a id='onEnter'></a>\n   *\n   * - **`onEnter`** - {object=} - Callback function for when a state is entered. Good way\n   *   to trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to use the `['injection1', 'injection2', function(injection1, injection2){}]` syntax.\n   *\n   * <a id='onExit'></a>\n   *\n   * - **`onExit`** - {object=} - Callback function for when a state is exited. Good way to\n   *   trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to use the `['injection1', 'injection2', function(injection1, injection2){}]` syntax.\n   *\n   * <a id='reloadOnSearch'></a>\n   *\n   * - **`reloadOnSearch = true`** - {boolean=} - If `false`, will not retrigger the same state\n   *   just because a search/query parameter has changed (via $location.search() or $location.hash()).\n   *   Useful for when you'd like to modify $location.search() without triggering a reload.\n   *\n   * <a id='data'></a>\n   *\n   * - **`data`** - {object=} - Arbitrary data object, useful for custom configuration.\n   *\n   * @example\n   * <pre>\n   * // Some state name examples\n   *\n   * // stateName can be a single top-level name (must be unique).\n   * $stateProvider.state(\"home\", {});\n   *\n   * // Or it can be a nested state name. This state is a child of the\n   * // above \"home\" state.\n   * $stateProvider.state(\"home.newest\", {});\n   *\n   * // Nest states as deeply as needed.\n   * $stateProvider.state(\"home.newest.abc.xyz.inception\", {});\n   *\n   * // state() returns $stateProvider, so you can chain state declarations.\n   * $stateProvider\n   *   .state(\"home\", {})\n   *   .state(\"about\", {})\n   *   .state(\"contacts\", {});\n   * </pre>\n   *\n   * @param {string} name A unique state name, e.g. \"home\", \"about\", \"contacts\".\n   * To create a parent/child state use a dot, e.g. \"about.sales\", \"home.newest\".\n   * @param {object} definition State configuration object.\n   */\n  state(name: string, definition: Ng1StateDeclaration): StateProvider;\n  state(definition: Ng1StateDeclaration): StateProvider;\n  state(name: any, definition?: any) {\n    if (isObject(name)) {\n      definition = name;\n    } else {\n      definition.name = name;\n    }\n    this.stateRegistry.register(definition);\n    return this;\n  }\n\n  /**\n   * Registers an invalid state handler\n   *\n   * This is a passthrough to [[StateService.onInvalid]] for ng1.\n   */\n\n  onInvalid(callback: OnInvalidCallback): Function {\n    return this.stateService.onInvalid(callback);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng1/stateProvider.ts\n **/","/** @module ng1 */ /** */\nimport {State} from \"../../state/stateObject\";\nimport {TransitionStateHookFn, HookResult} from \"../../transition/interface\";\nimport {Transition} from \"../../transition/transition\";\nimport {services} from \"../../common/coreservices\";\nimport {getLocals} from \"../services\";\nimport {ResolveContext} from \"../../resolve/resolveContext\";\nimport {extend} from \"../../common/common\";\nimport {BuilderFunction} from \"../../state/stateBuilder\";\n\nimport * as angular from 'angular';\nimport IInjectorService = angular.auto.IInjectorService;\n\n/**\n * This is a [[StateBuilder.builder]] function for angular1 `onEnter`, `onExit`,\n * `onRetain` callback hooks on a [[Ng1StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[State]] object from a raw [[StateDeclaration]], this builder\n * ensures that those hooks are injectable for angular-ui-router (ng1).\n */\nexport const getStateHookBuilder = (hookName: \"onEnter\"|\"onExit\"|\"onRetain\") =>\nfunction stateHookBuilder(state: State, parentFn: BuilderFunction): TransitionStateHookFn {\n  let hook = state[hookName];\n  function decoratedNg1Hook(trans: Transition, state: State): HookResult {\n    let resolveContext = new ResolveContext(trans.treeChanges().to);\n    return services.$injector.invoke(hook, this, extend({ $state$: state }, getLocals(resolveContext)));\n  }\n\n  return hook ? decoratedNg1Hook : undefined;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng1/statebuilders/onEnterExitRetain.ts\n **/","/**\n * These are the UI-Router angular 1 directives.\n *\n * These directives are used in templates to create viewports and navigate to states\n *\n * @preferred @module ng1_directives\n */ /** for typedoc */\nimport * as angular from 'angular';\nimport {Obj, extend, forEach, toJson, tail} from \"../../common/common\";\nimport {isString, isObject} from \"../../common/predicates\";\nimport {UIViewData} from \"./viewDirective\";\nimport {parse} from \"../../common/hof\";\nimport {PathNode} from \"../../path/node\";\nimport {StateOrName} from \"../../state/interface\";\nimport IAugmentedJQuery = angular.IAugmentedJQuery;\nimport {StateService} from \"../../state/stateService\";\nimport ITimeoutService = angular.ITimeoutService;\nimport IScope = angular.IScope;\nimport IInterpolateService = angular.IInterpolateService;\nimport {TransitionService} from \"../../transition/transitionService\";\nimport {State} from \"../../state/stateObject\";\nimport {UIRouter} from \"../../router\";\n\n/** @hidden */\nfunction parseStateRef(ref: string, current: string) {\n  let preparsed = ref.match(/^\\s*({[^}]*})\\s*$/), parsed;\n  if (preparsed) ref = current + '(' + preparsed[1] + ')';\n  parsed = ref.replace(/\\n/g, \" \").match(/^([^(]+?)\\s*(\\((.*)\\))?$/);\n  if (!parsed || parsed.length !== 4) throw new Error(\"Invalid state ref '\" + ref + \"'\");\n  return { state: parsed[1], paramExpr: parsed[3] || null };\n}\n\n/** @hidden */\nfunction stateContext(el: IAugmentedJQuery) {\n  let $uiView: UIViewData = (el.parent() as IAugmentedJQuery).inheritedData('$uiView');\n  let path: PathNode[] = parse('$cfg.path')($uiView);\n  return path ? tail(path).state.name : undefined;\n}\n\ninterface TypeInfo {\n  attr: string;\n  isAnchor: boolean;\n  clickable: boolean;\n}\n\n/** @hidden */\nfunction getTypeInfo(el: IAugmentedJQuery): TypeInfo {\n  // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n  var isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';\n  var isForm = el[0].nodeName === \"FORM\";\n\n  return {\n    attr: isForm ? \"action\" : (isSvg ? 'xlink:href' : 'href'),\n    isAnchor: el.prop(\"tagName\").toUpperCase() === \"A\",\n    clickable: !isForm\n  };\n}\n\n/** @hidden */\nfunction clickHook(el: IAugmentedJQuery, $state: StateService, $timeout: ITimeoutService, type: TypeInfo, current: Function) {\n  return function(e: JQueryMouseEventObject) {\n    var button = e.which || e.button, target = current();\n\n    if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || el.attr('target'))) {\n      // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\n      var transition = $timeout(function() {\n        $state.go(target.state, target.params, target.options);\n      });\n      e.preventDefault();\n\n      // if the state has no URL, ignore one preventDefault from the <a> directive.\n      var ignorePreventDefaultCount = type.isAnchor && !target.href ? 1: 0;\n\n      e.preventDefault = function() {\n        if (ignorePreventDefaultCount-- <= 0) $timeout.cancel(transition);\n      };\n    }\n  };\n}\n\n/** @hidden */\nfunction defaultOpts(el: IAugmentedJQuery, $state: StateService) {\n  return {\n    relative: stateContext(el) || $state.$current,\n    inherit: true,\n    source: \"sref\"\n  };\n}\n\n/**\n * `ui-sref`: A directive for linking to a state\n *\n * A directive that binds a link (`<a>` tag) to a state.\n * If the state has an associated URL, the directive will automatically generate and\n * update the `href` attribute via the [[StateService.href]]  method.\n * Clicking the link will trigger a state transition with optional parameters.\n *\n * Also middle-clicking, right-clicking, and ctrl-clicking on the link will be\n * handled natively by the browser.\n *\n * You can also use relative state paths within ui-sref, just like the relative\n * paths passed to `$state.go()`.\n * You just need to be aware that the path is relative to the state that the link lives in.\n * In other words, the state that created the view containing the link.\n *\n * You can specify options to pass to [[StateService.go]] using the `ui-sref-opts` attribute.\n * Options are restricted to `location`, `inherit`, and `reload`.\n *\n * Here's an example of how you'd use ui-sref and how it would compile.\n * If you have the following template:\n *\n * @example\n * ```html\n *\n * <pre>\n * <a ui-sref=\"home\">Home</a> | <a ui-sref=\"about\">About</a> | <a ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n *     </li>\n * </ul>\n * </pre>\n * ```\n *\n * Then the compiled html would be (assuming Html5Mode is off and current state is contacts):\n *\n * ```html\n *\n * <pre>\n * <a href=\"#/home\" ui-sref=\"home\">Home</a> | <a href=\"#/about\" ui-sref=\"about\">About</a> | <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n *     </li>\n * </ul>\n *\n * <a ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n * </pre>\n * ```\n *\n * @param {string} ui-sref 'stateName' can be any valid absolute or relative state\n * @param {Object} ui-sref-opts options to pass to [[StateService.go]]\n */\nlet uiSref = ['$state', '$timeout',\nfunction $StateRefDirective($state: StateService, $timeout: ITimeoutService) {\n  return {\n    restrict: 'A',\n    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n    link: function(scope: IScope, element: IAugmentedJQuery, attrs: any, uiSrefActive: any) {\n      var ref    = parseStateRef(attrs.uiSref, $state.current.name);\n      var def: Def = { state: ref.state, href: null, params: null, options: null };\n      var type   = getTypeInfo(element);\n      var active = uiSrefActive[1] || uiSrefActive[0];\n      var unlinkInfoFn: Function = null;\n      var hookFn;\n\n      def.options = extend(defaultOpts(element, $state), attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {});\n\n      var update = function(val?: any) {\n        if (val) def.params = angular.copy(val);\n        def.href = $state.href(ref.state, def.params, def.options);\n\n        if (unlinkInfoFn) unlinkInfoFn();\n        if (active) unlinkInfoFn = active.$$addStateInfo(ref.state, def.params);\n        if (def.href !== null) attrs.$set(type.attr, def.href);\n      };\n\n      if (ref.paramExpr) {\n        scope.$watch(ref.paramExpr, function(val) { if (val !== def.params) update(val); }, true);\n        def.params = angular.copy(scope.$eval(ref.paramExpr));\n      }\n      update();\n\n      if (!type.clickable) return;\n      hookFn = clickHook(element, $state, $timeout, type, function() { return def; });\n      element.on(\"click\", hookFn);\n      scope.$on('$destroy', function() {\n        element.off(\"click\", hookFn);\n      });\n    }\n  };\n}];\n\n/**\n * `ui-state`: A dynamic version of `ui-sref`\n *\n * Much like ui-sref, but will accept named $scope properties to evaluate for a state definition,\n * params and override options.\n *\n * @example\n * ```html\n *\n * <li ng-repeat=\"nav in navlinks\">\n *   <a ui-state=\"nav.statename\">{{nav.description}}</a>\n * </li>\n *\n * @param {string} ui-state 'stateName' can be any valid absolute or relative state\n * @param {Object} ui-state-params params to pass to [[StateService.href]]\n * @param {Object} ui-state-opts options to pass to [[StateService.go]]\n */\nlet uiState = ['$state', '$timeout',\nfunction $StateRefDynamicDirective($state: StateService, $timeout: ITimeoutService) {\n  return {\n    restrict: 'A',\n    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n    link: function(scope: IScope, element: IAugmentedJQuery, attrs: any, uiSrefActive: any) {\n      var type   = getTypeInfo(element);\n      var active = uiSrefActive[1] || uiSrefActive[0];\n      var group  = [attrs.uiState, attrs.uiStateParams || null, attrs.uiStateOpts || null];\n      var watch  = '[' + group.map(function(val) { return val || 'null'; }).join(', ') + ']';\n      var def: Def = { state: null, params: null, options: null, href: null };\n      var unlinkInfoFn: Function = null;\n      var hookFn;\n\n      function runStateRefLink (group: any[]) {\n        def.state = group[0]; def.params = group[1]; def.options = group[2];\n        def.href = $state.href(def.state, def.params, def.options);\n\n        if (unlinkInfoFn) unlinkInfoFn();\n        if (active) unlinkInfoFn = active.$$addStateInfo(def.state, def.params);\n        if (def.href) attrs.$set(type.attr, def.href);\n      }\n\n      scope.$watch(watch, runStateRefLink, true);\n      runStateRefLink(scope.$eval(watch));\n\n      if (!type.clickable) return;\n      hookFn = clickHook(element, $state, $timeout, type, function() { return def; });\n      element.on(\"click\", hookFn);\n      scope.$on('$destroy', function() {\n        element.off(\"click\", hookFn);\n      });\n    }\n  };\n}];\n\n\n/**\n * `ui-sref-active` and `ui-sref-active-eq`: A directive that adds a CSS class when a `ui-sref` is active\n *\n * A directive working alongside ui-sref to add classes to an element when the\n * related ui-sref directive's state is active, and removing them when it is inactive.\n * The primary use-case is to simplify the special appearance of navigation menus\n * relying on `ui-sref`, by having the \"active\" state's menu button appear different,\n * distinguishing it from the inactive menu items.\n *\n * ui-sref-active can live on the same element as ui-sref or on a parent element. The first\n * ui-sref-active found at the same level or above the ui-sref will be used.\n *\n * Will activate when the ui-sref's target state or any child state is active. If you\n * need to activate only when the ui-sref target state is active and *not* any of\n * it's children, then you will use ui-sref-active-eq\n *\n * Given the following template:\n * @example\n * ```html\n *\n * <pre>\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item\">\n *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * </pre>\n * ```\n *\n *\n * When the app state is \"app.user\" (or any children states), and contains the state parameter \"user\" with value \"bilbobaggins\",\n * the resulting HTML will appear as (note the 'active' class):\n *\n * ```html\n *\n * <pre>\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item active\">\n *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * </pre>\n * ```\n *\n * The class name is interpolated **once** during the directives link time (any further changes to the\n * interpolated value are ignored).\n *\n * Multiple classes may be specified in a space-separated format:\n *\n * ```html\n * <pre>\n * <ul>\n *   <li ui-sref-active='class1 class2 class3'>\n *     <a ui-sref=\"app.user\">link</a>\n *   </li>\n * </ul>\n * </pre>\n * ```\n *\n * It is also possible to pass ui-sref-active an expression that evaluates\n * to an object hash, whose keys represent active class names and whose\n * values represent the respective state names/globs.\n * ui-sref-active will match if the current active state **includes** any of\n * the specified state names/globs, even the abstract ones.\n *\n * Given the following template, with \"admin\" being an abstract state:\n * @example\n * ```html\n *\n * <pre>\n * <div ui-sref-active=\"{'active': 'admin.*'}\">\n *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n * </div>\n * </pre>\n * ```\n *\n * When the current state is \"admin.roles\" the \"active\" class will be applied\n * to both the <div> and <a> elements. It is important to note that the state\n * names/globs passed to ui-sref-active shadow the state provided by ui-sref.\n */\nlet uiSrefActive = ['$state', '$stateParams', '$interpolate', '$transitions', '$uiRouter',\nfunction $StateRefActiveDirective($state: StateService, $stateParams: Obj, $interpolate: IInterpolateService, $transitions: TransitionService, $uiRouter: UIRouter) {\n  return  {\n    restrict: \"A\",\n    controller: ['$scope', '$element', '$attrs', '$timeout',\n      function ($scope: IScope, $element: IAugmentedJQuery, $attrs: any, $timeout: ITimeoutService) {\n      var states: any[] = [], activeClasses: Obj = {}, activeEqClass: string, uiSrefActive: any;\n\n      // There probably isn't much point in $observing this\n      // uiSrefActive and uiSrefActiveEq share the same directive object with some\n      // slight difference in logic routing\n      activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);\n\n      try {\n        uiSrefActive = $scope.$eval($attrs.uiSrefActive);\n      } catch (e) {\n        // Do nothing. uiSrefActive is not a valid expression.\n        // Fall back to using $interpolate below\n      }\n      uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);\n      if (isObject(uiSrefActive)) {\n        forEach(uiSrefActive, function(stateOrName: StateOrName, activeClass: string) {\n          if (isString(stateOrName)) {\n            var ref = parseStateRef(stateOrName, $state.current.name);\n            addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);\n          }\n        });\n      }\n\n      // Allow uiSref to communicate with uiSrefActive[Equals]\n      this.$$addStateInfo = function (newState: string, newParams: Obj) {\n        // we already got an explicit state provided by ui-sref-active, so we\n        // shadow the one that comes from ui-sref\n        if (isObject(uiSrefActive) && states.length > 0) {\n          return;\n        }\n        var deregister = addState(newState, newParams, uiSrefActive);\n        update();\n        return deregister;\n      };\n\n      function updateAfterTransition(trans) { trans.promise.then(update); }\n      $scope.$on('$stateChangeSuccess', update);\n      $scope.$on('$destroy', <any> $transitions.onStart({}, updateAfterTransition));\n      if ($uiRouter.globals.transition) {\n        updateAfterTransition($uiRouter.globals.transition);\n      }\n\n      function addState(stateName: string, stateParams: Obj, activeClass: string) {\n        var state = $state.get(stateName, stateContext($element));\n        var stateHash = createStateHash(stateName, stateParams);\n\n        var stateInfo = {\n          state: state || { name: stateName },\n          params: stateParams,\n          hash: stateHash\n        };\n\n        states.push(stateInfo);\n        activeClasses[stateHash] = activeClass;\n\n        return function removeState() {\n          var idx = states.indexOf(stateInfo);\n          if (idx !== -1) states.splice(idx, 1);\n        }\n      }\n\n      /**\n       * @param {string} state\n       * @param {Object|string} [params]\n       * @return {string}\n       */\n      function createStateHash(state: string, params: (Obj|string)) {\n        if (!isString(state)) {\n          throw new Error('state should be a string');\n        }\n        if (isObject(params)) {\n          return state + toJson(params);\n        }\n        params = $scope.$eval(params as string);\n        if (isObject(params)) {\n          return state + toJson(params);\n        }\n        return state;\n      }\n\n      // Update route state\n      function update() {\n        for (var i = 0; i < states.length; i++) {\n          if (anyMatch(states[i].state, states[i].params)) {\n            addClass($element, activeClasses[states[i].hash]);\n          } else {\n            removeClass($element, activeClasses[states[i].hash]);\n          }\n\n          if (exactMatch(states[i].state, states[i].params)) {\n            addClass($element, activeEqClass);\n          } else {\n            removeClass($element, activeEqClass);\n          }\n        }\n      }\n\n      function addClass(el: IAugmentedJQuery, className: string) { $timeout(function () { el.addClass(className); }); }\n      function removeClass(el: IAugmentedJQuery, className: string) { el.removeClass(className); }\n      function anyMatch(state: State, params: Obj) { return $state.includes(state.name, params); }\n      function exactMatch(state: State, params: Obj) { return $state.is(state.name, params); }\n\n      update();\n    }]\n  };\n}];\n\ninterface Def { state: string; href: string; params: Obj; options: any; }\nangular.module('ui.router.state')\n    .directive('uiSref', uiSref)\n    .directive('uiSrefActive', uiSrefActive)\n    .directive('uiSrefActiveEq', uiSrefActive)\n    .directive('uiState', uiState);\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng1/directives/stateDirectives.ts\n **/","/** @module state */ /** for typedoc */\n\nimport {Obj} from \"../common/common\";\nimport {StateService} from \"../state/stateService\";\nimport {StateOrName} from \"../state/interface\";\nimport * as angular from 'angular';\n\n/**\n * @ngdoc filter\n * @name ui.router.state.filter:isState\n *\n * @requires ui.router.state.$state\n *\n * @description\n * Translates to {@link ui.router.state.$state#methods_is $state.is(\"stateName\")}.\n */\n$IsStateFilter.$inject = ['$state'];\nexport function $IsStateFilter($state: StateService) {\n  var isFilter: any = function(state: StateOrName, params: Obj, options: Obj) {\n    return $state.is(state, params, options);\n  };\n  isFilter.$stateful = true;\n  return isFilter;\n}\n\n/**\n * @ngdoc filter\n * @name ui.router.state.filter:includedByState\n *\n * @requires ui.router.state.$state\n *\n * @description\n * Translates to {@link ui.router.state.$state#methods_includes $state.includes('fullOrPartialStateName')}.\n */\n$IncludedByStateFilter.$inject = ['$state'];\nexport function $IncludedByStateFilter($state: StateService) {\n  var includesFilter: any = function(state: StateOrName, params: Obj, options: Obj) {\n    return $state.includes(state, params, options);\n  };\n  includesFilter.$stateful = true;\n  return  includesFilter;\n}\n\nangular.module('ui.router.state')\n  .filter('isState', $IsStateFilter)\n  .filter('includedByState', $IncludedByStateFilter);\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng1/stateFilters.ts\n **/","/** @module ng1_directives */ /** for typedoc */\n\"use strict\";\nimport {extend, unnestR, filter, tail} from \"../../common/common\";\nimport {isDefined, isFunction, isString} from \"../../common/predicates\";\nimport {trace} from \"../../common/trace\";\nimport {ActiveUIView} from \"../../view/interface\";\nimport {Ng1ViewConfig} from \"../statebuilders/views\";\nimport {TransitionService} from \"../../transition/transitionService\";\nimport {parse} from \"../../common/hof\";\nimport {ResolveContext} from \"../../resolve/resolveContext\";\nimport {Transition} from \"../../transition/transition\";\nimport {PathNode} from \"../../path/node\";\nimport {Param} from \"../../params/param\";\nimport {kebobString} from \"../../common/strings\";\nimport {HookRegOptions} from \"../../transition/interface\";\nimport {Ng1Controller, Ng1StateDeclaration} from \"../interface\";\nimport {getLocals} from \"../services\";\nimport {ViewService} from \"../../view/view\";\nimport {$QLike} from \"../../common/coreservices\";\nimport {Obj} from \"../../common/common\";\n\nimport * as angular from 'angular';\nimport IInterpolateService = angular.IInterpolateService;\nimport IScope = angular.IScope;\nimport ITranscludeFunction = angular.ITranscludeFunction;\nimport IAugmentedJQuery = angular.IAugmentedJQuery;\nimport ICompileService = angular.ICompileService;\nimport IControllerService = angular.IControllerService;\nimport ITimeoutService = angular.ITimeoutService;\n\n/** @hidden */\nexport type UIViewData = {\n  $cfg: Ng1ViewConfig;\n  $uiView: ActiveUIView;\n}\n\n/** @hidden */\nexport type UIViewAnimData = {\n  $animEnter: Promise<any>;\n  $animLeave: Promise<any>;\n  $$animLeave: { resolve: () => any; } // \"deferred\"\n}\n\n/**\n * `ui-view`: A viewport directive which is filled in by a view from the active state.\n *\n * @param {string=} name A view name. The name should be unique amongst the other views in the\n * same state. You can have views of the same name that live in different states.\n *\n * @param {string=} autoscroll It allows you to set the scroll behavior of the browser window\n * when a view is populated. By default, $anchorScroll is overridden by ui-router's custom scroll\n * service, {@link ui.router.state.$uiViewScroll}. This custom service let's you\n * scroll ui-view elements into view when they are populated during a state activation.\n *\n * *Note: To revert back to old [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll)\n * functionality, call `$uiViewScrollProvider.useAnchorScroll()`.*\n *\n * @param {string=} onload Expression to evaluate whenever the view updates.\n *\n * A view can be unnamed or named.\n * @example\n * ```html\n *\n * <!-- Unnamed -->\n * <div ui-view></div>\n *\n * <!-- Named -->\n * <div ui-view=\"viewName\"></div>\n * ```\n *\n * You can only have one unnamed view within any template (or root html). If you are only using a\n * single view and it is unnamed then you can populate it like so:\n * ```\n *\n * <div ui-view></div>\n * $stateProvider.state(\"home\", {\n *   template: \"<h1>HELLO!</h1>\"\n * })\n * ```\n *\n * The above is a convenient shortcut equivalent to specifying your view explicitly with the {@link ui.router.state.$stateProvider#views `views`}\n * config property, by name, in this case an empty name:\n * ```js\n *\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }\n * })\n * ```\n *\n * But typically you'll only use the views property if you name your view or have more than one view\n * in the same template. There's not really a compelling reason to name a view if its the only one,\n * but you could if you wanted, like so:\n *\n * ```html\n *\n * <div ui-view=\"main\"></div>\n * ```\n *\n * ```js\n *\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"main\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }\n * })\n * ```\n *\n * Really though, you'll use views to set up multiple views:\n * ```html\n *\n * <div ui-view></div>\n * <div ui-view=\"chart\"></div>\n * <div ui-view=\"data\"></div>\n * ```\n *\n * ```js\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     },\n *     \"chart\": {\n *       template: \"<chart_thing/>\"\n *     },\n *     \"data\": {\n *       template: \"<data_thing/>\"\n *     }\n *   }\n * })\n * ```\n *\n * Examples for `autoscroll`:\n *\n * ```html\n *\n * <!-- If autoscroll present with no expression,\n *      then scroll ui-view into view -->\n * <ui-view autoscroll/>\n *\n * <!-- If autoscroll present with valid expression,\n *      then scroll ui-view into view if expression evaluates to true -->\n * <ui-view autoscroll='true'/>\n * <ui-view autoscroll='false'/>\n * <ui-view autoscroll='scopeVariable'/>\n * ```\n *\n * Resolve data:\n *\n * The resolved data from the state's `resolve` block is placed on the scope as `$resolve` (this\n * can be customized using [[ViewDeclaration.resolveAs]]).  This can be then accessed from the template.\n *\n * Note that when `controllerAs` is being used, `$resolve` is set on the controller instance *after* the\n * controller is instantiated.  The `$onInit()` hook can be used to perform initialization code which\n * depends on `$resolve` data.\n *\n * @example\n * ```js\n *\n * $stateProvider.state('home', {\n *   template: '<my-component user=\"$resolve.user\"></my-component>',\n *   resolve: {\n *     user: function(UserService) { return UserService.fetchUser(); }\n *   }\n * });\n * ```\n */\nlet uiView = ['$view', '$animate', '$uiViewScroll', '$interpolate', '$q',\nfunction $ViewDirective($view: ViewService, $animate: any, $uiViewScroll: any, $interpolate: IInterpolateService, $q: $QLike) {\n\n  function getRenderer(attrs: Obj, scope: IScope) {\n    return {\n      enter: function(element: JQuery, target: any, cb: Function) {\n        if (angular.version.minor > 2) {\n          $animate.enter(element, null, target).then(cb);\n        } else {\n          $animate.enter(element, null, target, cb);\n        }\n      },\n      leave: function(element: JQuery, cb: Function) {\n        if (angular.version.minor > 2) {\n          $animate.leave(element).then(cb);\n        } else {\n          $animate.leave(element, cb);\n        }\n      }\n    };\n  }\n\n  function configsEqual(config1: Ng1ViewConfig, config2: Ng1ViewConfig) {\n    return config1 === config2;\n  }\n\n  let rootData = {\n    $cfg: { viewDecl: { $context: $view.rootContext() } },\n    $uiView: { }\n  };\n\n  let directive = {\n    count: 0,\n    restrict: 'ECA',\n    terminal: true,\n    priority: 400,\n    transclude: 'element',\n    compile: function (tElement: JQuery, tAttrs: Obj, $transclude: ITranscludeFunction) {\n\n      return function (scope: IScope, $element: IAugmentedJQuery, attrs: Obj) {\n        let previousEl: JQuery, currentEl: JQuery,\n            currentScope: IScope, unregister: Function,\n            onloadExp     = attrs['onload'] || '',\n            autoScrollExp = attrs['autoscroll'],\n            renderer      = getRenderer(attrs, scope),\n            viewConfig    = undefined as Ng1ViewConfig,\n            inherited     = $element.inheritedData('$uiView') || rootData,\n            name          = $interpolate(attrs['uiView'] || attrs['name'] || '')(scope) || '$default';\n\n        let activeUIView: ActiveUIView = {\n          $type: 'ng1',\n          id: directive.count++,                                   // Global sequential ID for ui-view tags added to DOM\n          name: name,                                              // ui-view name (<div ui-view=\"name\"></div>\n          fqn: inherited.$uiView.fqn ? inherited.$uiView.fqn + \".\" + name : name, // fully qualified name, describes location in DOM\n          config: null,                                            // The ViewConfig loaded (from a state.views definition)\n          configUpdated: configUpdatedCallback,                    // Called when the matching ViewConfig changes\n          get creationContext() {                                  // The context in which this ui-view \"tag\" was created\n            return parse('$cfg.viewDecl.$context')(inherited);\n          }\n        };\n\n        trace.traceUIViewEvent(\"Linking\", activeUIView);\n\n        function configUpdatedCallback(config?: Ng1ViewConfig) {\n          if (config && !(config instanceof Ng1ViewConfig)) return;\n          if (configsEqual(viewConfig, config)) return;\n          trace.traceUIViewConfigUpdated(activeUIView, config && config.viewDecl && config.viewDecl.$context);\n\n          viewConfig = config;\n          updateView(config);\n        }\n\n        $element.data('$uiView', { $uiView: activeUIView });\n\n        updateView();\n\n        unregister = $view.registerUIView(activeUIView);\n        scope.$on(\"$destroy\", function() {\n          trace.traceUIViewEvent(\"Destroying/Unregistering\", activeUIView);\n          unregister();\n        });\n\n        function cleanupLastView() {\n          if (previousEl) {\n            trace.traceUIViewEvent(\"Removing (previous) el\", previousEl.data('$uiView'));\n            previousEl.remove();\n            previousEl = null;\n          }\n\n          if (currentScope) {\n            trace.traceUIViewEvent(\"Destroying scope\", activeUIView);\n            currentScope.$destroy();\n            currentScope = null;\n          }\n\n          if (currentEl) {\n            let _viewData = currentEl.data('$uiViewAnim');\n            trace.traceUIViewEvent(\"Animate out\", _viewData);\n            renderer.leave(currentEl, function() {\n              _viewData.$$animLeave.resolve();\n              previousEl = null;\n            });\n\n            previousEl = currentEl;\n            currentEl = null;\n          }\n        }\n\n        function updateView(config?: Ng1ViewConfig) {\n          let newScope = scope.$new();\n          let animEnter = $q.defer(), animLeave = $q.defer();\n\n          let $uiViewData: UIViewData = {\n            $cfg: config,\n            $uiView: activeUIView,\n          };\n\n          let $uiViewAnim: UIViewAnimData = {\n            $animEnter: animEnter.promise,\n            $animLeave: animLeave.promise,\n            $$animLeave: animLeave\n          };\n\n          let cloned = $transclude(newScope, function(clone) {\n            clone.data('$uiViewAnim', $uiViewAnim);\n            clone.data('$uiView', $uiViewData);\n            renderer.enter(clone, $element, function onUIViewEnter() {\n              animEnter.resolve();\n              if (currentScope) currentScope.$emit('$viewContentAnimationEnded');\n\n              if (isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {\n                $uiViewScroll(clone);\n              }\n            });\n\n            cleanupLastView();\n          });\n\n          currentEl = cloned;\n          currentScope = newScope;\n          /**\n           * @ngdoc event\n           * @name ui.router.state.directive:ui-view#$viewContentLoaded\n           * @eventOf ui.router.state.directive:ui-view\n           * @eventType emits on ui-view directive scope\n           * @description           *\n           * Fired once the view is **loaded**, *after* the DOM is rendered.\n           *\n           * @param {Object} event Event object.\n           */\n          currentScope.$emit('$viewContentLoaded', config || viewConfig);\n          currentScope.$eval(onloadExp);\n        }\n      };\n    }\n  };\n\n  return directive;\n}];\n\n$ViewDirectiveFill.$inject = ['$compile', '$controller', '$transitions', '$view', '$timeout'];\n/** @hidden */\nfunction $ViewDirectiveFill ($compile: ICompileService, $controller: IControllerService, $transitions: TransitionService, $view: ViewService, $timeout: ITimeoutService) {\n  const getControllerAs = parse('viewDecl.controllerAs');\n  const getResolveAs = parse('viewDecl.resolveAs');\n\n  return {\n    restrict: 'ECA',\n    priority: -400,\n    compile: function (tElement: JQuery) {\n      let initial = tElement.html();\n\n      return function (scope: IScope, $element: JQuery) {\n        let data: UIViewData = $element.data('$uiView');\n        if (!data) return;\n\n        let cfg: Ng1ViewConfig = data.$cfg || <any> { viewDecl: {} };\n        $element.html(cfg.template || initial);\n        trace.traceUIViewFill(data.$uiView, $element.html());\n\n        let link = $compile($element.contents());\n        let controller = cfg.controller;\n        let controllerAs: string = getControllerAs(cfg);\n        let resolveAs: string = getResolveAs(cfg);\n        let resolveCtx: ResolveContext = cfg.path && new ResolveContext(cfg.path);\n        let locals = resolveCtx && getLocals(resolveCtx);\n\n        scope[resolveAs] = locals;\n\n        if (controller) {\n          let controllerInstance = <Ng1Controller> $controller(controller, extend({}, locals, { $scope: scope, $element: $element }));\n          if (controllerAs) {\n            scope[controllerAs] = controllerInstance;\n            scope[controllerAs][resolveAs] = locals;\n          }\n\n          // TODO: Use $view service as a central point for registering component-level hooks\n          // Then, when a component is created, tell the $view service, so it can invoke hooks\n          // $view.componentLoaded(controllerInstance, { $scope: scope, $element: $element });\n          // scope.$on('$destroy', () => $view.componentUnloaded(controllerInstance, { $scope: scope, $element: $element }));\n\n          $element.data('$ngControllerController', controllerInstance);\n          $element.children().data('$ngControllerController', controllerInstance);\n\n          registerControllerCallbacks($transitions, controllerInstance, scope, cfg);\n        }\n\n        // Wait for the component to appear in the DOM\n        if (isString(cfg.viewDecl.component)) {\n          let cmp = cfg.viewDecl.component;\n          let kebobName = kebobString(cmp);\n          let getComponentController = () => {\n            let directiveEl = [].slice.call($element[0].children)\n                .filter((el: Element) => el && el.tagName && el.tagName.toLowerCase() === kebobName) ;\n            return directiveEl && angular.element(directiveEl).data(`$${cmp}Controller`);\n          };\n\n          let deregisterWatch = scope.$watch(getComponentController, function(ctrlInstance) {\n            if (!ctrlInstance) return;\n            registerControllerCallbacks($transitions, ctrlInstance, scope, cfg);\n            deregisterWatch();\n          });\n        }\n\n        link(scope);\n      };\n    }\n  };\n}\n\n/** @hidden */\nlet hasComponentImpl = typeof (angular as any).module('ui.router')['component'] === 'function';\n\n/** @hidden TODO: move these callbacks to $view and/or `/hooks/components.ts` or something */\nfunction registerControllerCallbacks($transitions: TransitionService, controllerInstance: Ng1Controller, $scope: IScope, cfg: Ng1ViewConfig) {\n  // Call $onInit() ASAP\n  if (isFunction(controllerInstance.$onInit) && !(cfg.viewDecl.component && hasComponentImpl)) controllerInstance.$onInit();\n\n  let viewState: Ng1StateDeclaration = tail(cfg.path).state.self;\n\n  var hookOptions: HookRegOptions = { bind: controllerInstance };\n  // Add component-level hook for onParamsChange\n  if (isFunction(controllerInstance.uiOnParamsChanged)) {\n    let resolveContext: ResolveContext = new ResolveContext(cfg.path);\n    let viewCreationTrans = resolveContext.getResolvable('$transition$').data;\n\n    // Fire callback on any successful transition\n    const paramsUpdated = ($transition$: Transition) => {\n      // Exit early if the $transition$ is the same as the view was created within.\n      // Exit early if the $transition$ will exit the state the view is for.\n      if ($transition$ === viewCreationTrans || $transition$.exiting().indexOf(viewState) !== -1) return;\n\n      let toParams = $transition$.params(\"to\");\n      let fromParams = $transition$.params(\"from\");\n      let toSchema: Param[] = $transition$.treeChanges().to.map((node: PathNode) => node.paramSchema).reduce(unnestR, []);\n      let fromSchema: Param[] = $transition$.treeChanges().from.map((node: PathNode) => node.paramSchema).reduce(unnestR, []);\n\n      // Find the to params that have different values than the from params\n      let changedToParams = toSchema.filter((param: Param) => {\n        let idx = fromSchema.indexOf(param);\n        return idx === -1 || !fromSchema[idx].type.equals(toParams[param.id], fromParams[param.id]);\n      });\n\n      // Only trigger callback if a to param has changed or is new\n      if (changedToParams.length) {\n        let changedKeys = changedToParams.map(x => x.id);\n        // Filter the params to only changed/new to params.  `$transition$.params()` may be used to get all params.\n        controllerInstance.uiOnParamsChanged(filter(toParams, (val, key) => changedKeys.indexOf(key) !== -1), $transition$);\n      }\n    };\n    $scope.$on('$destroy', <any> $transitions.onSuccess({}, paramsUpdated, hookOptions));\n  }\n\n  // Add component-level hook for uiCanExit\n  if (isFunction(controllerInstance.uiCanExit)) {\n    var criteria = {exiting: viewState.name};\n    $scope.$on('$destroy', <any> $transitions.onBefore(criteria, controllerInstance.uiCanExit, hookOptions));\n  }\n}\n\nangular.module('ui.router.state').directive('uiView', <any> uiView);\nangular.module('ui.router.state').directive('uiView', <any> $ViewDirectiveFill);\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng1/directives/viewDirective.ts\n **/","/** @module ng1 */ /** */\nimport * as angular from 'angular';\nimport {IServiceProviderFactory} from \"angular\";\nimport IAnchorScrollService = angular.IAnchorScrollService;\nimport ITimeoutService = angular.ITimeoutService;\n\n/**\n * @ngdoc object\n * @name ui.router.state.$uiViewScrollProvider\n *\n * @description\n * Provider that returns the {@link ui.router.state.$uiViewScroll} service function.\n */\nfunction $ViewScrollProvider() {\n\n  var useAnchorScroll = false;\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$uiViewScrollProvider#useAnchorScroll\n   * @methodOf ui.router.state.$uiViewScrollProvider\n   *\n   * @description\n   * Reverts back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll) service for\n   * scrolling based on the url anchor.\n   */\n  this.useAnchorScroll = function () {\n    useAnchorScroll = true;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$uiViewScroll\n   *\n   * @requires $anchorScroll\n   * @requires $timeout\n   *\n   * @description\n   * When called with a jqLite element, it scrolls the element into view (after a\n   * `$timeout` so the DOM has time to refresh).\n   *\n   * If you prefer to rely on `$anchorScroll` to scroll the view to the anchor,\n   * this can be enabled by calling {@link ui.router.state.$uiViewScrollProvider#methods_useAnchorScroll `$uiViewScrollProvider.useAnchorScroll()`}.\n   */\n  this.$get = ['$anchorScroll', '$timeout', function ($anchorScroll: IAnchorScrollService, $timeout: ITimeoutService): Function {\n    if (useAnchorScroll) {\n      return $anchorScroll;\n    }\n\n    return function ($element: JQuery) {\n      return $timeout(function () {\n        $element[0].scrollIntoView();\n      }, 0, false);\n    };\n  }];\n}\n\nangular.module('ui.router.state').provider('$uiViewScroll', <IServiceProviderFactory> $ViewScrollProvider);\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng1/viewScroll.ts\n **/"],"sourceRoot":""}